{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///koto.js","webpack:///webpack/bootstrap 84dc20dd3fda91089baa","webpack:///./chart.js","webpack:///external \"babel-polyfill\"","webpack:///../~/d3/build/d3.js","webpack:///./assert.js","webpack:///./layer.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_interopRequireWildcard","newObj","key","Object","prototype","hasOwnProperty","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","TypeError","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","defineProperty","_typeof","Symbol","iterator","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","Array","isArray","_createClass","defineProperties","target","props","descriptor","protoProps","staticProps","_d2","d3","_assert","_assert2","_layer2","_layer3","Chart","selection","_this","base","hasDrawn","merge","configs","_len","arguments","args","_key","assign","apply","concat","accessors","_len2","_key2","promise","_layers","Map","_attached","_events","config","a","accessor","data","name","layer","_chart","options","_layer","_Chart","get","set","remove","attachmentName","chart","rawData","attachmentData","_this2","promises","Promise","resolve","transform","then","preDraw","trigger","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","values","draw","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","entries","_step2$value","attachment","demux","all","postDraw","postTransition","callback","context","events","has","Set","add","_once","off","on","clear","forEach","event","clone","map","_len3","_key3","_event$callback","node","parentNode","removeChild","nameOrObject","setPercentage","calculatePercentage","initialValue","min","Math","definition","constrain","percentage","setter","console","warn","getter","item","init","_ref","_this3","getPrototypeOf","initialize","Layer","global","ascending","b","NaN","bisector","compare","ascendingComparator","left","x","lo","hi","mid","right","f","d","descending","number","variance","array","n","s","j","isNaN","deviation","v","sqrt","extent","constant","identity","range","start","stop","step","max","ceil","ticks","count","tickStep","floor","step0","abs","step1","pow","log","LN10","error","e10","e5","e2","sturges","LN2","histogram","xz","domain","x0","x1","tz","threshold","shift","pop","bin","bins","bisectRight","_","thresholds","slice","h","freedmanDiaconis","sort","scott","mean","median","numbers","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","i0","i1","t","random","sum","transpose","matrix","row","zip","map$1","object","each","o","nest","depth","createResult","setResult","keys","rollup","sortValues","keyValue","valuesByKey","result","sortKey","sortKeys","k","createObject","setObject","createMap","setMap","order","uniform","normal","mu","sigma","r","y","logNormal","randomNormal","exp","irwinHall","bates","randomIrwinHall","exponential","lambda","linear","quadIn","quadOut","quadInOut","cubicIn","cubicOut","easeCubicInOut","sinIn","cos","halfPi","sinOut","sin","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","area","polygon","centroid","cross","lexicographicOrder","computeUpperHullIndexes","points","size","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains","point","y1","y0","inside","length$1","xa","ya","xb","yb","perimeter","Path","_x0","_y0","_x1","_y1","path","tree_add","_x","_y","cover","tree","parent","xm","ym","xp","yp","bottom","_root","leaf","addAll","yz","Infinity","tree_cover","z","tree_data","visit","tree_extent","Quad","tree_find","radius","x2","y2","q","x3","y3","quads","dx","dy","d2","tree_remove","retainer","previous","removeAll","tree_root","tree_size","tree_visit","child","tree_visitAfter","defaultX","tree_x","defaultY","tree_y","quadtree","nodes","Quadtree","leaf_copy","copy","Queue","Error","_size","_call","_error","_tasks","_data","_waiting","_active","_ended","_start","poke","e","abort","end","noabort","maybeNotify","queue","concurrency","constant$1","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","asin","halfPi$1","intersect","x10","y10","x32","y32","cornerTangents","r1","rc","cw","x01","y01","ox","oy","x11","y11","x00","y00","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","arc","buffer","r0","a0","a1","da","epsilon$1","tau$2","moveTo","t0","t1","a01","a11","a00","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","p0","p1","pi$2","oc","ax","ay","bx","by","kc","acos","lc","atan2","lineTo","closePath","Linear","_context","curveLinear","line","defined0","output","curve","defined","lineStart","lineEnd","x$$","y$$","area$1","x0z","y0z","areaStart","areaEnd","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$1","pie","index","arcs","pa","Radial","_curve","curveRadial","radial","radialLine","l","angle","radialLine$1","curveRadialLinear","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","symbol","type","circle","noop","that","bezierCurveTo","Basis","basis","BasisClosed","basisClosed","BasisOpen","basisOpen","Bundle","beta","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","linearClosed","sign","slope3","h0","h1","s0","s1","slope2","point$3","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","natural","Step","_t","stepBefore","stepAfter","none","series","none$1","stackValue","stack","oz","kz","sz","sij","ki","si","offset","slice$2","expand","silhouette","wiggle","s2","sij0","sij1","s3","sk","skj0","skj1","ascending$1","sums","sum$1","descending$2","reverse","insideOut","top","tops","bottoms","extend","Color","color","format","trim","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","g","rgbConvert","rgb","opacity","colorRgb","Hsl","hslConvert","colorHsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","rgb2xyz","xyz2lab","Xn","Yn","Zn","lab","t3","t2","lab2xyz","xyz2rgb","hclConvert","rad2deg","colorHcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","cubehelix","basis$1","v0","v1","v2","v3","basis$2","basisClosed$1","constant$2","linear$1","exponential$1","hue","round","gamma","nogamma","rgbSpline","spline","colors","array$1","nb","na","interpolate","date","Date","setTime","interpolateNumber","zero","one","interpolateString","am","bm","bs","bi","reA","lastIndex","reB","join","interpolateRgb","interpolateRound","decompose","scaleX","scaleY","skewX","translateX","translateY","rotate","degrees","atan","parseCss","identity$2","cssNode","document","createElement","cssRoot","documentElement","cssView","defaultView","style","getComputedStyle","appendChild","getPropertyValue","split","parseSvg","svgNode","createElementNS","setAttribute","baseVal","consolidate","interpolateTransform","parse","pxComma","pxParen","degParen","translate","scale","cosh","sinh","tanh","interpolateZoom","S","ux0","uy0","w0","ux1","uy1","w1","epsilon2","rho","d1","rho4","rho2","coshr0","u","duration","hsl","lab$1","hcl","cubehelix$1","cubehelixGamma","cubehelix$$","quantize","interpolator","samples","dispatch","Dispatch","parseTypenames","typenames","types","indexOf","set$1","noop$1","objectConverter","columns","Function","JSON","stringify","customConverter","inferColumns","rows","columnSet","column","dsv","delimiter","text","convert","parseRows","token","I","N","EOF","eol","EOL","charCodeAt","replace","delimiterCode","formatValue","formatRows","formatRow","reFormat","test","RegExp","request","url","respond","status","xhr","hasResponse","response","mimeType","responseType","headers","XMLHttpRequest","user","password","timeout","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","fixCallback","responseText","defaultMimeType","dsv$1","responseOf","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_time","_next","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","nap","poke$1","pokeDelay","taskTail","sleep","clearTimeout","setTimeout","interval","clearInterval","setInterval","timeout$1","elapsed","interval$1","total","tick","newInterval","floori","offseti","field","d0","filter","t0$1","t1$1","every","isFinite","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute","durationWeek","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","width","substring","formatDefault","toPrecision","out","formatPrefixAuto","exponent","prefixExponent","formatRounded","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","comma","precision","formatTypes","identity$3","formatLocale","locale","newFormat","valuePrefix","prefix","valueSuffix","suffix","formatType","valueNegative","prefixes","maybeSuffix","decimal","group","padding","currency","toString","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","localDate","H","M","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","formats","pad","string","pads","charAt","newParse","newDate","parseSpecifier","w","day","W","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","A","B","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","X","formatYear","Y","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","requoteRe","names","numberRe","percentRe","year","getMilliseconds","getMinutes","getSeconds","timeWeek","timeMonday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcWeek","utcMonday","getUTCFullYear","defaultLocale$1","locale$1","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","ordinal","unknown","implicit","slice$3","band","rescale","range$$","paddingInner","paddingOuter","bandwidth","ordinalRange","rangeRound","pointish","point$4","constant$3","number$1","deinterpolate","deinterpolateClamp","reinterpolateClamp","reinterpolate","bimap","polymap","source","clamp","continuous","deinterpolate$$","piecewise","input","interpolate$$","unit","invert","map$2","tickFormat","linearish","nice","linear$2","identity$4","deinterpolate$1","pow10","powp","logp","log10","log2","reflect","logs","pows","raise","quantile","invertExtent","quantiles","quantize$1","threshold$1","date$1","number$2","calendar","month","week","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","tickIntervals","durationYear","durationSecond$1","durationMinute$1","durationHour$1","durationDay$1","durationWeek$1","durationMonth","utcTime","utcMonth","utcHour","utcMinute","rainbow$1","ts","rainbow","ramp","sequential","namespace","namespaces","space","local","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","creator","Local","nextId","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","selection_on","customEvent","sourceEvent","current","point$5","svg","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","none$2","selector","querySelector","selection_select","select","groups","_groups","subgroups","subnode","subgroup","Selection","_parents","empty","selectorAll","querySelectorAll","selection_selectAll","parents","selection_filter","matcher$1","sparse","update","selection_enter","_enter","EnterNode","datum","_parent","constant$4","bindIndex","enter","exit","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","keyPrefix","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","nextSibling","insertBefore","selection_sort","compareNode","ascending$2","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","selection_attr","getAttributeNS","getAttribute","window","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","selection_style","propertyRemove","propertyConstant","propertyFunction","selection_property","classArray","classList","ClassList","_node","_names","classedAdd","list","classedRemove","classedTrue","classedFalse","classedFunction","selection_classed","textRemove","textContent","textConstant","textFunction","selection_text","htmlRemove","innerHTML","htmlConstant","htmlFunction","selection_html","raise$1","selection_raise","lower","previousSibling","firstChild","selection_lower","selection_append","constantNull","selection_insert","before","selection_remove","selection_datum","property","dispatchEvent","params","window$$","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","selection_dispatch","selectAll","touch","touches","identifier","schedule","timing","schedules","__transition","emptyOn","tween","emptyTween","ease","state","CREATED","set$2","STARTING","get$1","SCHEDULED","STARTED","ENDED","ENDING","interrupt","active","selection_interrupt","tweenRemove","tween0","tween1","splice","tweenFunction","transition_tween","_id","tweenValue","transition","interpolate$1","attrRemove$1","attrRemoveNS$1","attrConstant$1","value1","value00","interpolate0","value0","attrConstantNS$1","attrFunction$1","value10","attrFunctionNS$1","transition_attr","interpolateTransform$2","attrTween","attrTweenNS","_value","transition_attrTween","delayFunction","delayConstant","transition_delay","durationFunction","durationConstant","transition_duration","easeConstant","transition_ease","transition_filter","Transition","_name","transition_merge","start$1","onFunction","on0","on1","sit","transition_on","removeFunction","transition_remove","transition_select","transition_selectAll","children","inherit","transition_selection","Selection$1","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","transition_style","interpolateTransform$1","styleTween","transition_styleTween","textConstant$1","textFunction$1","transition_text","transition_transition","id0","id1","newId","defaultTiming","selection_transition","root$1","identity$5","scale0","scale1","center","entering","__axis","axis","orient","tickValues","tickArguments","spacing","tickSizeInner","tickPadding","range0","range1","position","tickExit","tickEnter","append","attr","insert","epsilon$2","tickSizeOuter","slice$4","tickSize","axisTop","axisRight","axisBottom","axisLeft","defaultSeparation","meanX","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","cluster","previousNode","eachAfter","separation","nodeSize","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","eachBefore","node_path","ancestor","leastCommonAncestor","aNodes","ancestors","bNodes","node_ancestors","node_descendants","node_leaves","leaves","node_links","links","hierarchy","childs","Node","valued","defaultChildren","computeHeight","node_copy","copyData","height","Node$2","shuffle$1","head","tail","enclose","circles","encloseN","encloses","dr","l2","l0","l1","enclose1","enclose2","enclose3","r2","x21","y21","r21","r3","a2","c2","a3","c3","ab","place","db","dc","intersects","distance2","Node$1","packEnclose","sj","aa","ba","ca","oa","pack","siblings","optional","required","constantZero","constant$5","defaultRadius","radiusLeaf","packChildren","translateChild","roundNode","treemapDice","partition","positionNode","defaultId","defaultParentId","parentId","stratify","nodeId","nodeKey","nodeByKey","keyPrefix$1","ambiguous","preroot","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","change","executeShifts","nextAncestor","vim","TreeNode","treeRoot","firstWalk","secondWalk","sizeNode","tx","kx","ky","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","treemapSlice","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","dice","index$1","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","squarify","binary","valueOffset","valueTarget","valueLeft","valueRight","yk","xk","sliceDice","center$1","force","sx","sy","constant$6","jiggle","x$1","vx","y$1","vy","collide","quad","rj","ri","yi","strength","ri2","iterations","visitAfter","prepare","radii","index$2","link","defaultStrength","distances","strengths","bias","nodeById","initializeStrength","initializeDistance","distance","x$2","y$2","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","fx","velocityDecay","fy","initializeNodes","initialRadius","initialAngle","initializeForce","find","closest","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","theta","x$3","y$3","nopropagation","stopImmediatePropagation","noevent","preventDefault","dragDisable","view","__noselect","MozUserSelect","dragEnable","noclick","constant$7","DragEvent","subject","defaultFilter","button","defaultContainer","defaultSubject","drag","mousedowned","touchstarted","touchmoved","touchended","touchending","gesture","beforestart","container","mousemoved","mouseupped","mousemoving","gestures","sublisteners","listeners","constant$8","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","clipEdges","epsilon$3","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$1","ha","hc","circlePool","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","voronoi","polygons","triangles","constant$9","ZoomEvent","Transform","__zoom","identity$6","nopropagation$1","noevent$1","defaultFilter$1","defaultExtent","SVGElement","clientWidth","clientHeight","defaultTransform","zoom","wheeled","dblclicked","k0","k1","invertX","invertY","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","moved","shiftKey","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","emit","scaleExtent","translateExtent","constant$10","BrushEvent","nopropagation$2","noevent$2","type$1","defaultFilter$2","defaultExtent$1","local$1","__brush","empty$1","brushSelection","dim","brushX","brush$1","brushY","brush","XY","overlay","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","point1","shifting","lockX","lockY","moving","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","e0","e1","signY","n0","n1","MODE_HANDLE","MODE_CENTER","flipX","flipY","ended","keydowned","keyCode","keyupped","altKey","metaKey","signsX","signsY","selection1","selection0","starting","compareValue","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","max$1","tau$3","di","dj","subindex","sortChords","constant$11","defaultSource","defaultTarget","defaultRadius$1","defaultStartAngle","defaultEndAngle","ribbon","argv","slice$5","sr","sa0","halfPi$2","sa1","sx0","sy0","tr","ta0","ta1","quadraticCurveTo","adder","Adder","reset","add$1","bv","av","pi$4","asin$1","halfPi$3","haversin","sin$1","noop$2","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","streamPolygon","polygonStart","polygonEnd","streamObjectType","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","areaRingSum","area$2","areaSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","sqrt$1","boundsPoint","ranges","range$1","lambda0$1","lambda1","phi0","phi1","linePoint","equatorial","inflection","phii","delta","lambda2","lambdai","degrees$1","antimeridian","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$4","rangeCompare","rangeContains","bounds","feature","deltaMax","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cz","X2","Y2","Z2","centroid$1","epsilon2$2","constant$12","compose","rotationIdentity","tau$4","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","forward","circleStream","direction","cosRadius","sinRadius","circleRadius","circle$1","ring","clipBuffer","lines","rejoin","clipLine","pointEqual","Intersection","other","entry","clipPolygon","segments","compareIntersection","startInside","clip","segment","link$1","isSubject","clipExtent","visible","from","to","corner","comparePoint","cb","activeStream","polygonInside","winding","bufferStream","clean","cleanInside","clipStream","first","v_","x_","y_","x__","y__","v__","clipMin","clipMax","extent$1","cache","cacheStream","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","length$2","object$1","graticuleX","graticuleY","graticule","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","interpolate$2","sy1","kx0","ky0","kx1","ky1","identity$7","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x0$1","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","pointRadius","pointLineStart","pointLine","lineEndPolygon","PathString","pointCircle","circle$2","index$3","contextStream","projectionStream","projection","boundsStream$1","polygonContains","sinPhi1","cosPhi1","absDelta","sum$2","intersection","phiArc","pointVisible","sink","pointRing","ringSink","ringStart","ringEnd","ringSegments","ringBuffer","polygonStarted","validSegment","rotatedStart","sphere","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","sinLambda0Lambda1","clipAntimeridianInterpolate","clipCircle","cr","c0","point2","smallRadius","code","notHemisphere","two","pb","n2","n2n2","n1n2","determinant","c1","n1xn2","uu","polar","meridian","q1","transform$1","transform$2","T","Transform$1","resample","project","delta2","resample$1","resampleNone","resampleLineTo","phi2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringPoint","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","preclip","clipAntimeridian","postclip","projectResample","transformRadians","clipAngle","conicProjection","parallels","conicEqualAreaRaw","r0y","conicEqualArea","albers","multiplex","streams","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualArea","azimuthalEqualAreaRaw","azimuthalEquidistant","azimuthalEquidistantRaw","mercatorRaw","log$1","tan","mercator","mercatorProjection","clipAuto","tany","conicConformalRaw","pow$1","sign$1","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","gy","nx","conicEquidistant","gnomonicRaw","gnomonic","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","version","ascendingBisect","bisectLeft","proto","polyIn","custom","polyOut","polyInOut","PI","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","pi$1","tau$1","epsilon","tauEpsilon","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","treeProto","slice$1","defer","await","results","awaitAll","_line","_point","cross$1","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","_x3","_x4","_y3","_y4","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","_t0","px","py","darker","brighter","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","Kn","rgbGamma","rgbBasis","rgbBasisClosed","SQRT2","hsl$1","hslLong","hcl$1","hclLong","cubehelix$2","interpolateCubehelixLong","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","html","createRange","createContextualFragment","json","xml","responseXML","csv$1","tsv$1","performance","requestAnimationFrame","milliseconds","durationSecond","durationHour","durationDay","seconds","minutes","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","setMonth","years","setUTCSeconds","utcMinutes","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","setUTCMonth","utcMonths","utcYears","","toFixed","toUpperCase","-","0","isoSpecifier","formatIso","parseIso","array$2","category10","category20b","category20c","category20","cubehelix$3","warm","cool","viridis","magma","inferno","plasma","xlink","xmlns","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","element$1","mouseenter","mouseleave","classed","selection_prototype","descendants","resquarify","_squarify","after","grandpa","uncle","sibling","applyX","applyY","location","rescaleX","rescaleY","xy","nw","ne","se","sw","pi$3","temp","valueOf","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaRing","areaSum$1","cxcy","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","randomUniform","randomLogNormal","randomBates","randomExponential","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","polygonArea","polygonCentroid","polygonHull","polygonLength","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","interpolateArray","interpolateDate","interpolateObject","interpolateTransformCss","interpolateTransformSvg","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateBasis","interpolateBasisClosed","dsvFormat","timeInterval","timeMillisecond","timeMilliseconds","timeSecond","timeSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeeks","timeSunday","timeSundays","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcMillisecond","utcMilliseconds","utcSecond","utcSeconds","utcWeeks","utcSunday","formatDefaultLocale","isoFormat","isoParse","timeFormatLocale","timeFormatDefaultLocale","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","scaleSequential","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","zoomIdentity","zoomTransform","geoAlbers","geoAlbersUsa","geoArea","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoDistance","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoGraticule","geoInterpolate","geoLength","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoPath","geoProjection","geoProjectionMutator","geoRotation","geoStereographic","geoStereographicRaw","geoStream","geoTransform","geoTransverseMercator","geoTransverseMercatorRaw","kotoAssert","message","_base","_handlers","_lifecycleRe","dataBind","eventName","handler","idx","handlers","endall","promiseCallback","bound","len","tidx","tlen"],"mappings":"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","file":"koto.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"babel-polyfill\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"babel-polyfill\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Koto\"] = factory(require(\"babel-polyfill\"));\n\telse\n\t\troot[\"Koto\"] = factory(root[\"babel-polyfill\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"babel-polyfill\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"babel-polyfill\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Koto\"] = factory(require(\"babel-polyfill\"));\n\telse\n\t\troot[\"Koto\"] = factory(root[\"babel-polyfill\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(1);\n\t\n\tvar _d2 = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d2);\n\t\n\tvar _assert = __webpack_require__(3);\n\t\n\tvar _assert2 = _interopRequireDefault(_assert);\n\t\n\tvar _layer2 = __webpack_require__(4);\n\t\n\tvar _layer3 = _interopRequireDefault(_layer2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// d3 is required\n\t(0, _assert2.default)(d3, 'd3 js is required.');\n\t/**\n\t * Create a koto chart\n\t *\n\t * @constructor\n\t *\n\t * @param {d3.selection} selection The chart's \"base\" DOM node. This should\n\t *        contain any nodes that the chart generates.\n\t */\n\t\n\tvar Chart = function () {\n\t  function Chart(selection) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, Chart);\n\t\n\t    this.base = selection; // Container for chart @type {d3.selection}.\n\t    this.hasDrawn = false; // Has this chart been drawn at least once?\n\t\n\t    this.merge = {};\n\t    this.merge.configs = function () {\n\t      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t        args[_key] = arguments[_key];\n\t      }\n\t\n\t      _this.configs = Object.assign.apply(Object, [{}, _this.configs].concat(args));\n\t      return _this.configs;\n\t    };\n\t    this.merge.accessors = function () {\n\t      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t        args[_key2] = arguments[_key2];\n\t      }\n\t\n\t      _this.accessors = Object.assign.apply(Object, [{}, _this.accessors].concat(args));\n\t      return _this.accessors;\n\t    };\n\t\n\t    // exposed properties\n\t    this.configs = {};\n\t    this.accessors = {};\n\t    this.promise = null;\n\t\n\t    // private\n\t    this._layers = new Map();\n\t    this._attached = new Map();\n\t    this._events = new Map();\n\t\n\t    // alias\n\t    this.c = this.config;\n\t    this.a = this.accessor;\n\t  }\n\t\n\t  /**\n\t   * A \"hook\" method that you may define to modify input data before it is used\n\t   * to draw the chart's layers and attachments. This method will be used by all\n\t   * sub-classes. You may optionally return a promise if your data transformation\n\t   * is asynchronous (i.e. you're using web workers).\n\t   *\n\t   * Note: you will most likely never call this method directly, but rather\n\t   * include it as part of a chart definition, and then rely on koto to\n\t   * invoke it when you draw the chart with {@link Chart#draw}.\n\t   *\n\t   * @param {Array} data Input data provided to @link Chart#draw}.\n\t   * @returns {mixed} Data to be used in drawing the chart's layers and\n\t   *                  attachments.\n\t   */\n\t\n\t\n\t  _createClass(Chart, [{\n\t    key: 'transform',\n\t    value: function transform(data) {\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * A \"hook\" method that you may define to choose which mutation of the input\n\t     * data is sent to which of the attached charts (by name). This method will\n\t     * be used by all sub-classes. This only applies to charts that use the\n\t     * {@link Chart#attach} method.\n\t     *\n\t     * Note: you will most likely never call this method directly, but rather\n\t     * include it as part of a chart definition, and then rely on koto to\n\t     * invoke it when you draw the chart with {@link Chart#draw}.\n\t     *\n\t     * @param {String} data Name of attached chart defined in {@link Chart#attach}.\n\t     * @param {Array} data Input data provided to {@link Chart#draw}.\n\t     * @returns {mixed} Data to be used in drawing the chart's layers and\n\t     *                  attachments.\n\t     */\n\t\n\t  }, {\n\t    key: 'demux',\n\t    value: function demux(name, data) {\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * A \"hook\" method that will allow you to run some arbitrary code before\n\t     * {@link Chart#draw}. This will run every time {@link Chart#draw} is called.\n\t     *\n\t     * Note: you will most likely never call this method directly, but rather\n\t     * include it as part of a chart definition, and then rely on koto to\n\t     * invoke it when you draw the chart with {@link Chart#draw}.\n\t     *\n\t     * Note 2: a `postDraw` event is also fired when appropriate;\n\t     *\n\t     * @param  {[type]} data [description]\n\t     * @return {[type]}      [description]\n\t     */\n\t\n\t  }, {\n\t    key: 'preDraw',\n\t    value: function preDraw() {}\n\t\n\t    /**\n\t     * A \"hook\" method that will allow you to run some arbitrary code after\n\t     * {@link Chart#draw}. This will run every time {@link Chart#draw} is called.\n\t     *\n\t     * Note: you will most likely never call this method directly, but rather\n\t     * include it as part of a chart definition, and then rely on koto to\n\t     * invoke it when you draw the chart with {@link Chart#draw}.\n\t     *\n\t     * @param  {[type]} data [description]\n\t     */\n\t\n\t  }, {\n\t    key: 'postDraw',\n\t    value: function postDraw() {}\n\t\n\t    /**\n\t     * A \"hook\" method that will allow you to run some arbitrary code after\n\t     * {@link Chart#draw} is called AND after all transitions for all layers\n\t     * and attached charts have been completed. This will run every time\n\t     * {@link Chart#draw} is called.\n\t     *\n\t     * Note: you will most likely never call this method directly, but rather\n\t     * include it as part of a chart definition, and then rely on koto to\n\t     * invoke it when you draw the chart with {@link Chart#draw}.\n\t     *\n\t     * Note 2: a `postTransition` event is also fired when appropriate;\n\t     *\n\t     * @param  {[type]} data\n\t     */\n\t\n\t  }, {\n\t    key: 'postTransition',\n\t    value: function postTransition() {}\n\t\n\t    /**\n\t     * Remove a layer from the chart.\n\t     *\n\t     * @param {String} name The name of the layer to remove.\n\t     * @returns {Layer} The layer removed by this operation.\n\t     */\n\t\n\t  }, {\n\t    key: 'unlayer',\n\t    value: function unlayer(name) {\n\t      var layer = this.layer(name);\n\t\n\t      this._layers.delete(name);\n\t      delete layer._chart;\n\t\n\t      return layer;\n\t    }\n\t\n\t    /**\n\t     * Interact with the chart's {@link Layer|layers}.\n\t     *\n\t     * If only a `name` is provided, simply return the layer registered to that\n\t     * name (if any).\n\t     *\n\t     * If a `name` and `selection` are provided, treat the `selection` as a\n\t     * previously-created layer and attach it to the chart with the specified\n\t     * `name`.\n\t     *\n\t     * If all three arguments are specified, initialize a new {@link Layer} using\n\t     * the specified `selection` as a base passing along the specified `options`.\n\t     *\n\t     * The {@link Layer.draw} method of attached layers will be invoked\n\t     * whenever this chart's {@link Chart#draw} is invoked and will receive the\n\t     * data (optionally modified by the chart's {@link Chart#transform} method.\n\t     *\n\t     * @param {String} name Name of the layer to attach or retrieve.\n\t     * @param {d3.selection|Layer} [selection] The layer's base or a\n\t     *        previously-created {@link Layer}.\n\t     * @param {Object} [options] Options to be forwarded to {@link Layer|the Layer\n\t     *        constructor}\n\t     *\n\t     * @returns {Layer}\n\t     */\n\t\n\t  }, {\n\t    key: 'layer',\n\t    value: function layer(name, selection, options) {\n\t      var _Chart = this;\n\t      var _layer;\n\t\n\t      if (arguments.length === 1) {\n\t        return this._layers.get(name);\n\t      }\n\t\n\t      // we are reattaching a previous layer, which the\n\t      // selection argument is now set to.\n\t      if (arguments.length === 2) {\n\t\n\t        if (selection instanceof _layer3.default) {\n\t          selection._chart = this;\n\t          this._layers.set(name, selection);\n\t          return this._layers.get(name);\n\t        } else {\n\t          (0, _assert2.default)(false, 'When reattaching a layer, the second argument must be a koto layer');\n\t        }\n\t      }\n\t\n\t      selection._chart = this;\n\t\n\t      _layer = new _layer3.default(selection, options);\n\t\n\t      _layer.remove = function () {\n\t        _Chart._layers.delete(name);\n\t        return this;\n\t      };\n\t\n\t      this._layers.set(name, _layer);\n\t\n\t      return _layer;\n\t    }\n\t\n\t    /**\n\t     * Register or retrieve an \"attachment\" Chart. The \"attachment\" chart's `draw`\n\t     * method will be invoked whenever the containing chart's `draw` method is\n\t     * invoked.\n\t     *\n\t     * @param {String} attachmentName Name of the attachment\n\t     * @param {Chart} [chart] koto to register as a mix in of this chart. When\n\t     *        unspecified, this method will return the attachment previously\n\t     *        registered with the specified `attachmentName` (if any).\n\t     *\n\t     * @returns {Chart} Reference to this chart (chainable).\n\t     */\n\t\n\t  }, {\n\t    key: 'attach',\n\t    value: function attach(attachmentName, chart) {\n\t      if (arguments.length === 1) {\n\t        return this._attached.get(attachmentName);\n\t      }\n\t\n\t      this._attached.set(attachmentName, chart);\n\t      return chart;\n\t    }\n\t\n\t    /**\n\t     * Update the chart's representation in the DOM, drawing all of its layers and\n\t     * any \"attachment\" charts (as attached via {@link Chart#attach}).\n\t     *\n\t     * Note: The first time you call this method, the property `hasDrawn` will be\n\t     * set to true. This is helpful if you want to only run some code on the first\n\t     * time the chart is drawn.\n\t     *\n\t     * @param {Object} data Data to pass to the {@link Layer#draw|draw method} of\n\t     *        this cart's {@link Layer|layers} (if any) and the {@link\n\t     *        Chart#draw|draw method} of this chart's attachments (if any).\n\t     */\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw(rawData) {\n\t      var _this2 = this;\n\t\n\t      var layer,\n\t          attachmentData,\n\t          promises = [];\n\t\n\t      return Promise.resolve(this.transform(rawData)).then(function (data) {\n\t        _this2.preDraw(data);\n\t        _this2.trigger('preDraw', data);\n\t\n\t        var _iteratorNormalCompletion = true;\n\t        var _didIteratorError = false;\n\t        var _iteratorError = undefined;\n\t\n\t        try {\n\t          for (var _iterator = _this2._layers.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            layer = _step.value;\n\t\n\t            layer.draw(data);\n\t            promises.push(layer.promise);\n\t          }\n\t        } catch (err) {\n\t          _didIteratorError = true;\n\t          _iteratorError = err;\n\t        } finally {\n\t          try {\n\t            if (!_iteratorNormalCompletion && _iterator.return) {\n\t              _iterator.return();\n\t            }\n\t          } finally {\n\t            if (_didIteratorError) {\n\t              throw _iteratorError;\n\t            }\n\t          }\n\t        }\n\t\n\t        var _iteratorNormalCompletion2 = true;\n\t        var _didIteratorError2 = false;\n\t        var _iteratorError2 = undefined;\n\t\n\t        try {\n\t          for (var _iterator2 = _this2._attached.entries()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t            var _step2$value = _slicedToArray(_step2.value, 2);\n\t\n\t            var attachmentName = _step2$value[0];\n\t            var attachment = _step2$value[1];\n\t\n\t            attachmentData = _this2.demux ? _this2.demux(attachmentName, data) : data;\n\t            attachment.draw(attachmentData);\n\t            promises.push(attachment.promise);\n\t          }\n\t        } catch (err) {\n\t          _didIteratorError2 = true;\n\t          _iteratorError2 = err;\n\t        } finally {\n\t          try {\n\t            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t              _iterator2.return();\n\t            }\n\t          } finally {\n\t            if (_didIteratorError2) {\n\t              throw _iteratorError2;\n\t            }\n\t          }\n\t        }\n\t\n\t        _this2.hasDrawn = true;\n\t\n\t        _this2.promise = Promise.all(promises);\n\t\n\t        _this2.postDraw();\n\t        _this2.trigger('postDraw', data);\n\t\n\t        _this2.promise.then(function () {\n\t          _this2.postTransition(data);\n\t          _this2.trigger('postTransition', data);\n\t        });\n\t\n\t        return data;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Subscribe a callback function to an event triggered on the chart. See {@link\n\t     * Chart#once} to subscribe a callback function to an event for one occurrence.\n\t     *\n\t     * @externalExample {runnable} chart-on\n\t     *\n\t     * @param {String} name Name of the event\n\t     * @param {ChartEventHandler} callback Function to be invoked when the event\n\t     *        occurs\n\t     * @param {Object} [context] Value to set as `this` when invoking the\n\t     *        `callback`. Defaults to the chart instance.\n\t     *\n\t     * @returns {Chart} A reference to this chart (chainable).\n\t     */\n\t\n\t  }, {\n\t    key: 'on',\n\t    value: function on(name, callback, context) {\n\t      var events;\n\t      if (this._events.has(name)) {\n\t        events = this._events.get(name);\n\t      } else {\n\t        events = new Set();\n\t      }\n\t\n\t      events.add({\n\t        callback: callback,\n\t        context: context || this,\n\t        _chart: this\n\t      });\n\t\n\t      this._events.set(name, events);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Subscribe a callback function to an event triggered on the chart. This\n\t     * function will be invoked at the next occurrence of the event and immediately\n\t     * unsubscribed. See {@link Chart#on} to subscribe a callback function to an\n\t     * event indefinitely.\n\t     *\n\t     * @externalExample {runnable} chart-once\n\t     *\n\t     * @param {String} name Name of the event\n\t     * @param {ChartEventHandler} callback Function to be invoked when the event\n\t     *        occurs\n\t     * @param {Object} [context] Value to set as `this` when invoking the\n\t     *        `callback`. Defaults to the chart instance\n\t     *\n\t     * @returns {Chart} A reference to this chart (chainable)\n\t     */\n\t\n\t  }, {\n\t    key: 'once',\n\t    value: function once(name, callback, context) {\n\t      var self = this;\n\t      var _once = function _once() {\n\t        self.off(name, _once);\n\t        callback.apply(this, arguments);\n\t      };\n\t      return this.on(name, _once, context);\n\t    }\n\t\n\t    /**\n\t     * Unsubscribe one or more callback functions from an event triggered on the\n\t     * chart. When no arguments are specified, *all* handlers will be unsubscribed.\n\t     * When only a `name` is specified, all handlers subscribed to that event will\n\t     * be unsubscribed. When a `name` and `callback` are specified, only that\n\t     * function will be unsubscribed from that event. When a `name` and `context`\n\t     * are specified (but `callback` is omitted), all events bound to the given\n\t     * event with the given context will be unsubscribed.\n\t     *\n\t     * @externalExample {runnable} chart-off\n\t     *\n\t     * @param {String} [name] Name of the event to be unsubscribed\n\t     * @param {ChartEventHandler} [callback] Function to be unsubscribed\n\t     * @param {Object} [context] Contexts to be unsubscribed\n\t     *\n\t     * @returns {Chart} A reference to this chart (chainable).\n\t     */\n\t\n\t  }, {\n\t    key: 'off',\n\t    value: function off(name, callback, context) {\n\t\n\t      // remove all events\n\t      if (arguments.length === 0) {\n\t        this._events.clear();\n\t        return this;\n\t      }\n\t\n\t      // remove all events for a specific name\n\t      if (arguments.length === 1) {\n\t        if (this._events.has(name)) {\n\t          this._events.get(name).clear();\n\t        }\n\t        return this;\n\t      }\n\t\n\t      // remove all events that match whatever combination of name, context\n\t      // and callback.\n\t\n\t      this._events.get(name).forEach(function (event, clone, map) {\n\t        if (callback && callback === clone.callback || context && context === clone.context) {\n\t          map.delete(event);\n\t        }\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Publish an event on this chart with the given `name`.\n\t     *\n\t     * @externalExample {runnable} chart-trigger\n\t     *\n\t     * @param {String} name Name of the event to publish\n\t     * @param {...*} arguments Values with which to invoke the registered\n\t     *        callbacks.\n\t     *\n\t     * @returns {Chart} A reference to this chart (chainable).\n\t     */\n\t\n\t  }, {\n\t    key: 'trigger',\n\t    value: function trigger(name) {\n\t      for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n\t        args[_key3 - 1] = arguments[_key3];\n\t      }\n\t\n\t      if (this._events.has(name)) {\n\t        this._events.get(name).forEach(function (event) {\n\t          var _event$callback;\n\t\n\t          (_event$callback = event.callback).call.apply(_event$callback, [event.context].concat(args));\n\t        });\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Cleanly dispose of chart\n\t     *\n\t     * @return undefined\n\t     */\n\t\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      var node = this.base.node();\n\t\n\t      // exposed properties\n\t      this.configs = {};\n\t      this.accessors = {};\n\t      this.promise = null;\n\t\n\t      // clear up remaining data\n\t      this._layers.clear();\n\t      this._attached.clear();\n\t      this._events.clear();\n\t\n\t      if (node.parentNode) {\n\t        node.parentNode.removeChild(node);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Get and set chart options (or configs)\n\t     *\n\t     * @param  {mixed} nameOrObject Name of item getting or setting\n\t     *                              or an object with key-value pairs.\n\t     * @param  {mixed} value The value for config item with that name.\n\t     * @return {mixed} if getting: the value. if setting: the chart instance.\n\t     */\n\t\n\t  }, {\n\t    key: 'config',\n\t    value: function config(nameOrObject, value) {\n\t      var key;\n\t      var definition;\n\t      var _Chart = this;\n\t\n\t      function setPercentage() {\n\t        function calculatePercentage(arr, initialValue) {\n\t          var min = Math.min.call(null, arr.map(function (name) {\n\t            return _Chart.config(name);\n\t          }));\n\t          return initialValue / min;\n\t        }\n\t\n\t        if (definition.constrain === true) {\n\t          definition.percentage = calculatePercentage(['width', 'height'], definition.value);\n\t        } else if (Array.isArray(definition.constrain)) {\n\t          definition.percentage = calculatePercentage(definition.constrain, definition.value);\n\t        } else {\n\t          definition.percentage = calculatePercentage([definition.constrain], definition.value);\n\t        }\n\t      }\n\t\n\t      if (arguments.length === 0) {\n\t        return this.configs;\n\t      }\n\t\n\t      if (arguments.length === 1) {\n\t        if ((typeof nameOrObject === 'undefined' ? 'undefined' : _typeof(nameOrObject)) === 'object') {\n\t          for (key in nameOrObject) {\n\t            if (this.configs.hasOwnProperty(key)) {\n\t              definition = this.configs[key];\n\t              if (definition.hasOwnProperty('setter')) {\n\t                definition.value = definition.setter.call(definition, nameOrObject[key]);\n\t              } else {\n\t                definition.value = nameOrObject[key];\n\t              }\n\t              if (definition.hasOwnProperty('constrain')) {\n\t                setPercentage();\n\t              }\n\t              this.configs[key] = definition;\n\t            } else {\n\t              console.warn('config with name ' + nameOrObject + ' is not defined.');\n\t            }\n\t          }\n\t          return this;\n\t        }\n\t\n\t        (0, _assert2.default)(this.configs.hasOwnProperty(nameOrObject), nameOrObject + ' is not a valid option.');\n\t        definition = this.configs[nameOrObject];\n\t        if (definition.hasOwnProperty('getter')) {\n\t          return definition.getter.call(definition);\n\t        }\n\t        return definition.value;\n\t      }\n\t\n\t      if (arguments.length === 2) {\n\t        if (this.configs.hasOwnProperty(nameOrObject)) {\n\t          definition = this.configs[nameOrObject];\n\t          if (definition.hasOwnProperty('setter')) {\n\t            definition.value = definition.setter.call(definition, value);\n\t          } else {\n\t            definition.value = value;\n\t          }\n\t          if (definition.hasOwnProperty('constrain')) {\n\t            setPercentage();\n\t          }\n\t          this.configs[nameOrObject] = definition;\n\t        } else {\n\t          console.warn('config with name ' + nameOrObject + ' is not defined.');\n\t        }\n\t        return this;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * This will get or set any of the chart's accessors.\n\t     *\n\t     * @param  {String or Object} item If string, it will return the function for that accessor item.\n\t     *                                 If object, it will update that accessor with set function.\n\t     * @param  {function} [value] The function to update accessor item with.\n\t     * @return {object} The chart to preserve chainability.\n\t     */\n\t\n\t  }, {\n\t    key: 'accessor',\n\t    value: function accessor(item, value) {\n\t      var key;\n\t      if (arguments.length === 0) {\n\t        return this.accessors;\n\t      }\n\t\n\t      if (arguments.length === 1) {\n\t        if (typeof item === 'string') {\n\t          (0, _assert2.default)(this.accessors.hasOwnProperty(item), item + ' is not a valid accessor.');\n\t          return this.accessors[item];\n\t        } else {\n\t          for (key in item) {\n\t            this.accessors[key] = item[key];\n\t          }\n\t        }\n\t      } else {\n\t        this.accessors[item] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * This will extend a chart by passing in an object of initialize function.\n\t     * @param  {Object || function} init Initialize function of object with initialize method.\n\t     * @return {Construtor}      Chart constructor\n\t     */\n\t\n\t  }], [{\n\t    key: 'extend',\n\t    value: function extend(init) {\n\t      var chart = function (_ref) {\n\t        _inherits(chart, _ref);\n\t\n\t        function chart(selection) {\n\t          _classCallCheck(this, chart);\n\t\n\t          var key;\n\t\n\t          var _this3 = _possibleConstructorReturn(this, Object.getPrototypeOf(chart).call(this, selection));\n\t\n\t          if (typeof init === 'function') {\n\t            init.call(_this3);\n\t          } else {\n\t            for (key in init) {\n\t              _this3[key] = init[key];\n\t            }\n\t            _this3.initialize.call(_this3);\n\t          }\n\t\n\t          return _this3;\n\t        }\n\t\n\t        return chart;\n\t      }(this);\n\t\n\t      return chart;\n\t    }\n\t  }]);\n\t\n\t  return Chart;\n\t}();\n\t\n\t/**\n\t* Expose the Layer class so that it can be subclassed.\n\t*/\n\t\n\t\n\tChart.Layer = _layer3.default;\n\t\n\t// run tests if on test environment\n\t// if (ON_TEST) {\n\t//   require('./assert.spec.js')(kotoAssert);\n\t//   require('./layer.spec.js')(Layer, Chart);\n\t//   require('./chart.spec.js')(Chart);\n\t// }\n\t\n\texports.default = Chart;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.1.1. Copyright 2016 Mike Bostock.\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.d3 = global.d3 || {})));\n\t}(this, function (exports) { 'use strict';\n\t\n\t  var version = \"4.1.1\";\n\t\n\t  function ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t\n\t  function bisector(compare) {\n\t    if (compare.length === 1) compare = ascendingComparator(compare);\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (lo == null) lo = 0;\n\t        if (hi == null) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1;\n\t          else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (lo == null) lo = 0;\n\t        if (hi == null) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid;\n\t          else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t\n\t  function ascendingComparator(f) {\n\t    return function(d, x) {\n\t      return ascending(f(d), x);\n\t    };\n\t  }\n\t\n\t  var ascendingBisect = bisector(ascending);\n\t  var bisectRight = ascendingBisect.right;\n\t  var bisectLeft = ascendingBisect.left;\n\t\n\t  function descending(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  }\n\t\n\t  function number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t\n\t  function variance(array, f) {\n\t    var n = array.length,\n\t        m = 0,\n\t        a,\n\t        d,\n\t        s = 0,\n\t        i = -1,\n\t        j = 0;\n\t\n\t    if (f == null) {\n\t      while (++i < n) {\n\t        if (!isNaN(a = number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t\n\t    else {\n\t      while (++i < n) {\n\t        if (!isNaN(a = number(f(array[i], i, array)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (j > 1) return s / (j - 1);\n\t  }\n\t\n\t  function deviation(array, f) {\n\t    var v = variance(array, f);\n\t    return v ? Math.sqrt(v) : v;\n\t  }\n\t\n\t  function extent(array, f) {\n\t    var i = -1,\n\t        n = array.length,\n\t        a,\n\t        b,\n\t        c;\n\t\n\t    if (f == null) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t\n\t    return [a, c];\n\t  }\n\t\n\t  var array = Array.prototype;\n\t\n\t  var slice = array.slice;\n\t  var map = array.map;\n\t\n\t  function constant(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function identity(x) {\n\t    return x;\n\t  }\n\t\n\t  function range(start, stop, step) {\n\t    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t    var i = -1,\n\t        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t        range = new Array(n);\n\t\n\t    while (++i < n) {\n\t      range[i] = start + i * step;\n\t    }\n\t\n\t    return range;\n\t  }\n\t\n\t  var e10 = Math.sqrt(50);\n\t  var e5 = Math.sqrt(10);\n\t  var e2 = Math.sqrt(2);\n\t  function ticks(start, stop, count) {\n\t    var step = tickStep(start, stop, count);\n\t    return range(\n\t      Math.ceil(start / step) * step,\n\t      Math.floor(stop / step) * step + step / 2, // inclusive\n\t      step\n\t    );\n\t  }\n\t\n\t  function tickStep(start, stop, count) {\n\t    var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t        error = step0 / step1;\n\t    if (error >= e10) step1 *= 10;\n\t    else if (error >= e5) step1 *= 5;\n\t    else if (error >= e2) step1 *= 2;\n\t    return stop < start ? -step1 : step1;\n\t  }\n\t\n\t  function sturges(values) {\n\t    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t  }\n\t\n\t  function histogram() {\n\t    var value = identity,\n\t        domain = extent,\n\t        threshold = sturges;\n\t\n\t    function histogram(data) {\n\t      var i,\n\t          n = data.length,\n\t          x,\n\t          values = new Array(n);\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        values[i] = value(data[i], i, data);\n\t      }\n\t\n\t      var xz = domain(values),\n\t          x0 = xz[0],\n\t          x1 = xz[1],\n\t          tz = threshold(values, x0, x1);\n\t\n\t      // Convert number of thresholds into uniform thresholds.\n\t      if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\t\n\t      // Remove any thresholds outside the domain.\n\t      var m = tz.length;\n\t      while (tz[0] <= x0) tz.shift(), --m;\n\t      while (tz[m - 1] >= x1) tz.pop(), --m;\n\t\n\t      var bins = new Array(m + 1),\n\t          bin;\n\t\n\t      // Initialize bins.\n\t      for (i = 0; i <= m; ++i) {\n\t        bin = bins[i] = [];\n\t        bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t        bin.x1 = i < m ? tz[i] : x1;\n\t      }\n\t\n\t      // Assign data to bins by value, ignoring any outside the domain.\n\t      for (i = 0; i < n; ++i) {\n\t        x = values[i];\n\t        if (x0 <= x && x <= x1) {\n\t          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t        }\n\t      }\n\t\n\t      return bins;\n\t    }\n\t\n\t    histogram.value = function(_) {\n\t      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t    };\n\t\n\t    histogram.domain = function(_) {\n\t      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t    };\n\t\n\t    histogram.thresholds = function(_) {\n\t      return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t    };\n\t\n\t    return histogram;\n\t  }\n\t\n\t  function threshold(array, p, f) {\n\t    if (f == null) f = number;\n\t    if (!(n = array.length)) return;\n\t    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n\t    if (p >= 1) return +f(array[n - 1], n - 1, array);\n\t    var n,\n\t        h = (n - 1) * p,\n\t        i = Math.floor(h),\n\t        a = +f(array[i], i, array),\n\t        b = +f(array[i + 1], i + 1, array);\n\t    return a + (b - a) * (h - i);\n\t  }\n\t\n\t  function freedmanDiaconis(values, min, max) {\n\t    values = map.call(values, number).sort(ascending);\n\t    return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t  }\n\t\n\t  function scott(values, min, max) {\n\t    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t  }\n\t\n\t  function max(array, f) {\n\t    var i = -1,\n\t        n = array.length,\n\t        a,\n\t        b;\n\t\n\t    if (f == null) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n\t    }\n\t\n\t    return a;\n\t  }\n\t\n\t  function mean(array, f) {\n\t    var s = 0,\n\t        n = array.length,\n\t        a,\n\t        i = -1,\n\t        j = n;\n\t\n\t    if (f == null) {\n\t      while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n\t    }\n\t\n\t    if (j) return s / j;\n\t  }\n\t\n\t  function median(array, f) {\n\t    var numbers = [],\n\t        n = array.length,\n\t        a,\n\t        i = -1;\n\t\n\t    if (f == null) {\n\t      while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n\t    }\n\t\n\t    return threshold(numbers.sort(ascending), 0.5);\n\t  }\n\t\n\t  function merge(arrays) {\n\t    var n = arrays.length,\n\t        m,\n\t        i = -1,\n\t        j = 0,\n\t        merged,\n\t        array;\n\t\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t\n\t    return merged;\n\t  }\n\t\n\t  function min(array, f) {\n\t    var i = -1,\n\t        n = array.length,\n\t        a,\n\t        b;\n\t\n\t    if (f == null) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n\t    }\n\t\n\t    return a;\n\t  }\n\t\n\t  function pairs(array) {\n\t    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [p, p = array[++i]];\n\t    return pairs;\n\t  }\n\t\n\t  function permute(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  }\n\t\n\t  function scan(array, compare) {\n\t    if (!(n = array.length)) return;\n\t    var i = 0,\n\t        n,\n\t        j = 0,\n\t        xi,\n\t        xj = array[j];\n\t\n\t    if (!compare) compare = ascending;\n\t\n\t    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\t\n\t    if (compare(xj, xj) === 0) return j;\n\t  }\n\t\n\t  function shuffle(array, i0, i1) {\n\t    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t        t,\n\t        i;\n\t\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0];\n\t      array[m + i0] = array[i + i0];\n\t      array[i + i0] = t;\n\t    }\n\t\n\t    return array;\n\t  }\n\t\n\t  function sum(array, f) {\n\t    var s = 0,\n\t        n = array.length,\n\t        a,\n\t        i = -1;\n\t\n\t    if (f == null) {\n\t      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n\t    }\n\t\n\t    return s;\n\t  }\n\t\n\t  function transpose(matrix) {\n\t    if (!(n = matrix.length)) return [];\n\t    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t        row[j] = matrix[j][i];\n\t      }\n\t    }\n\t    return transpose;\n\t  }\n\t\n\t  function length(d) {\n\t    return d.length;\n\t  }\n\t\n\t  function zip() {\n\t    return transpose(arguments);\n\t  }\n\t\n\t  var prefix = \"$\";\n\t\n\t  function Map() {}\n\t\n\t  Map.prototype = map$1.prototype = {\n\t    constructor: Map,\n\t    has: function(key) {\n\t      return (prefix + key) in this;\n\t    },\n\t    get: function(key) {\n\t      return this[prefix + key];\n\t    },\n\t    set: function(key, value) {\n\t      this[prefix + key] = value;\n\t      return this;\n\t    },\n\t    remove: function(key) {\n\t      var property = prefix + key;\n\t      return property in this && delete this[property];\n\t    },\n\t    clear: function() {\n\t      for (var property in this) if (property[0] === prefix) delete this[property];\n\t    },\n\t    keys: function() {\n\t      var keys = [];\n\t      for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t      return keys;\n\t    },\n\t    values: function() {\n\t      var values = [];\n\t      for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t      return entries;\n\t    },\n\t    size: function() {\n\t      var size = 0;\n\t      for (var property in this) if (property[0] === prefix) ++size;\n\t      return size;\n\t    },\n\t    empty: function() {\n\t      for (var property in this) if (property[0] === prefix) return false;\n\t      return true;\n\t    },\n\t    each: function(f) {\n\t      for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t    }\n\t  };\n\t\n\t  function map$1(object, f) {\n\t    var map = new Map;\n\t\n\t    // Copy constructor.\n\t    if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t    // Index array by numeric index or specified key function.\n\t    else if (Array.isArray(object)) {\n\t      var i = -1,\n\t          n = object.length,\n\t          o;\n\t\n\t      if (f == null) while (++i < n) map.set(i, object[i]);\n\t      else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t    }\n\t\n\t    // Convert object to map.\n\t    else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t    return map;\n\t  }\n\t\n\t  function nest() {\n\t    var keys = [],\n\t        sortKeys = [],\n\t        sortValues,\n\t        rollup,\n\t        nest;\n\t\n\t    function apply(array, depth, createResult, setResult) {\n\t      if (depth >= keys.length) return rollup != null\n\t          ? rollup(array) : (sortValues != null\n\t          ? array.sort(sortValues)\n\t          : array);\n\t\n\t      var i = -1,\n\t          n = array.length,\n\t          key = keys[depth++],\n\t          keyValue,\n\t          value,\n\t          valuesByKey = map$1(),\n\t          values,\n\t          result = createResult();\n\t\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t          values.push(value);\n\t        } else {\n\t          valuesByKey.set(keyValue, [value]);\n\t        }\n\t      }\n\t\n\t      valuesByKey.each(function(values, key) {\n\t        setResult(result, key, apply(values, depth, createResult, setResult));\n\t      });\n\t\n\t      return result;\n\t    }\n\t\n\t    function entries(map, depth) {\n\t      if (++depth > keys.length) return map;\n\t      var array, sortKey = sortKeys[depth - 1];\n\t      if (rollup != null && depth >= keys.length) array = map.entries();\n\t      else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t      return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t    }\n\t\n\t    return nest = {\n\t      object: function(array) { return apply(array, 0, createObject, setObject); },\n\t      map: function(array) { return apply(array, 0, createMap, setMap); },\n\t      entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t      key: function(d) { keys.push(d); return nest; },\n\t      sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t      sortValues: function(order) { sortValues = order; return nest; },\n\t      rollup: function(f) { rollup = f; return nest; }\n\t    };\n\t  }\n\t\n\t  function createObject() {\n\t    return {};\n\t  }\n\t\n\t  function setObject(object, key, value) {\n\t    object[key] = value;\n\t  }\n\t\n\t  function createMap() {\n\t    return map$1();\n\t  }\n\t\n\t  function setMap(map, key, value) {\n\t    map.set(key, value);\n\t  }\n\t\n\t  function Set() {}\n\t\n\t  var proto = map$1.prototype;\n\t\n\t  Set.prototype = set.prototype = {\n\t    constructor: Set,\n\t    has: proto.has,\n\t    add: function(value) {\n\t      value += \"\";\n\t      this[prefix + value] = value;\n\t      return this;\n\t    },\n\t    remove: proto.remove,\n\t    clear: proto.clear,\n\t    values: proto.keys,\n\t    size: proto.size,\n\t    empty: proto.empty,\n\t    each: proto.each\n\t  };\n\t\n\t  function set(object, f) {\n\t    var set = new Set;\n\t\n\t    // Copy constructor.\n\t    if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t    // Otherwise, assume it’s an array.\n\t    else if (object) {\n\t      var i = -1, n = object.length;\n\t      if (f == null) while (++i < n) set.add(object[i]);\n\t      else while (++i < n) set.add(f(object[i], i, object));\n\t    }\n\t\n\t    return set;\n\t  }\n\t\n\t  function keys(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  }\n\t\n\t  function values(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  }\n\t\n\t  function entries(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({key: key, value: map[key]});\n\t    return entries;\n\t  }\n\t\n\t  function uniform(min, max) {\n\t    min = min == null ? 0 : +min;\n\t    max = max == null ? 1 : +max;\n\t    if (arguments.length === 1) max = min, min = 0;\n\t    else max -= min;\n\t    return function() {\n\t      return Math.random() * max + min;\n\t    };\n\t  }\n\t\n\t  function normal(mu, sigma) {\n\t    var x, r;\n\t    mu = mu == null ? 0 : +mu;\n\t    sigma = sigma == null ? 1 : +sigma;\n\t    return function() {\n\t      var y;\n\t\n\t      // If available, use the second previously-generated uniform random.\n\t      if (x != null) y = x, x = null;\n\t\n\t      // Otherwise, generate a new x and y.\n\t      else do {\n\t        x = Math.random() * 2 - 1;\n\t        y = Math.random() * 2 - 1;\n\t        r = x * x + y * y;\n\t      } while (!r || r > 1);\n\t\n\t      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t    };\n\t  }\n\t\n\t  function logNormal() {\n\t    var randomNormal = normal.apply(this, arguments);\n\t    return function() {\n\t      return Math.exp(randomNormal());\n\t    };\n\t  }\n\t\n\t  function irwinHall(n) {\n\t    return function() {\n\t      for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n\t      return sum;\n\t    };\n\t  }\n\t\n\t  function bates(n) {\n\t    var randomIrwinHall = irwinHall(n);\n\t    return function() {\n\t      return randomIrwinHall() / n;\n\t    };\n\t  }\n\t\n\t  function exponential(lambda) {\n\t    return function() {\n\t      return -Math.log(1 - Math.random()) / lambda;\n\t    };\n\t  }\n\t\n\t  function linear(t) {\n\t    return +t;\n\t  }\n\t\n\t  function quadIn(t) {\n\t    return t * t;\n\t  }\n\t\n\t  function quadOut(t) {\n\t    return t * (2 - t);\n\t  }\n\t\n\t  function quadInOut(t) {\n\t    return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t  }\n\t\n\t  function cubicIn(t) {\n\t    return t * t * t;\n\t  }\n\t\n\t  function cubicOut(t) {\n\t    return --t * t * t + 1;\n\t  }\n\t\n\t  function easeCubicInOut(t) {\n\t    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t  }\n\t\n\t  var exponent = 3;\n\t\n\t  var polyIn = (function custom(e) {\n\t    e = +e;\n\t\n\t    function polyIn(t) {\n\t      return Math.pow(t, e);\n\t    }\n\t\n\t    polyIn.exponent = custom;\n\t\n\t    return polyIn;\n\t  })(exponent);\n\t\n\t  var polyOut = (function custom(e) {\n\t    e = +e;\n\t\n\t    function polyOut(t) {\n\t      return 1 - Math.pow(1 - t, e);\n\t    }\n\t\n\t    polyOut.exponent = custom;\n\t\n\t    return polyOut;\n\t  })(exponent);\n\t\n\t  var polyInOut = (function custom(e) {\n\t    e = +e;\n\t\n\t    function polyInOut(t) {\n\t      return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t    }\n\t\n\t    polyInOut.exponent = custom;\n\t\n\t    return polyInOut;\n\t  })(exponent);\n\t\n\t  var pi = Math.PI;\n\t  var halfPi = pi / 2;\n\t  function sinIn(t) {\n\t    return 1 - Math.cos(t * halfPi);\n\t  }\n\t\n\t  function sinOut(t) {\n\t    return Math.sin(t * halfPi);\n\t  }\n\t\n\t  function sinInOut(t) {\n\t    return (1 - Math.cos(pi * t)) / 2;\n\t  }\n\t\n\t  function expIn(t) {\n\t    return Math.pow(2, 10 * t - 10);\n\t  }\n\t\n\t  function expOut(t) {\n\t    return 1 - Math.pow(2, -10 * t);\n\t  }\n\t\n\t  function expInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t  }\n\t\n\t  function circleIn(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t\n\t  function circleOut(t) {\n\t    return Math.sqrt(1 - --t * t);\n\t  }\n\t\n\t  function circleInOut(t) {\n\t    return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t  }\n\t\n\t  var b1 = 4 / 11;\n\t  var b2 = 6 / 11;\n\t  var b3 = 8 / 11;\n\t  var b4 = 3 / 4;\n\t  var b5 = 9 / 11;\n\t  var b6 = 10 / 11;\n\t  var b7 = 15 / 16;\n\t  var b8 = 21 / 22;\n\t  var b9 = 63 / 64;\n\t  var b0 = 1 / b1 / b1;\n\t  function bounceIn(t) {\n\t    return 1 - bounceOut(1 - t);\n\t  }\n\t\n\t  function bounceOut(t) {\n\t    return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t  }\n\t\n\t  function bounceInOut(t) {\n\t    return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t  }\n\t\n\t  var overshoot = 1.70158;\n\t\n\t  var backIn = (function custom(s) {\n\t    s = +s;\n\t\n\t    function backIn(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    }\n\t\n\t    backIn.overshoot = custom;\n\t\n\t    return backIn;\n\t  })(overshoot);\n\t\n\t  var backOut = (function custom(s) {\n\t    s = +s;\n\t\n\t    function backOut(t) {\n\t      return --t * t * ((s + 1) * t + s) + 1;\n\t    }\n\t\n\t    backOut.overshoot = custom;\n\t\n\t    return backOut;\n\t  })(overshoot);\n\t\n\t  var backInOut = (function custom(s) {\n\t    s = +s;\n\t\n\t    function backInOut(t) {\n\t      return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t    }\n\t\n\t    backInOut.overshoot = custom;\n\t\n\t    return backInOut;\n\t  })(overshoot);\n\t\n\t  var tau = 2 * Math.PI;\n\t  var amplitude = 1;\n\t  var period = 0.3;\n\t  var elasticIn = (function custom(a, p) {\n\t    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t    function elasticIn(t) {\n\t      return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t    }\n\t\n\t    elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t    elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t    return elasticIn;\n\t  })(amplitude, period);\n\t\n\t  var elasticOut = (function custom(a, p) {\n\t    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t    function elasticOut(t) {\n\t      return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t    }\n\t\n\t    elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t    elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t    return elasticOut;\n\t  })(amplitude, period);\n\t\n\t  var elasticInOut = (function custom(a, p) {\n\t    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t    function elasticInOut(t) {\n\t      return ((t = t * 2 - 1) < 0\n\t          ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t          : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t    }\n\t\n\t    elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t    elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t    return elasticInOut;\n\t  })(amplitude, period);\n\t\n\t  function area(polygon) {\n\t    var i = -1,\n\t        n = polygon.length,\n\t        a,\n\t        b = polygon[n - 1],\n\t        area = 0;\n\t\n\t    while (++i < n) {\n\t      a = b;\n\t      b = polygon[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t\n\t    return area / 2;\n\t  }\n\t\n\t  function centroid(polygon) {\n\t    var i = -1,\n\t        n = polygon.length,\n\t        x = 0,\n\t        y = 0,\n\t        a,\n\t        b = polygon[n - 1],\n\t        c,\n\t        k = 0;\n\t\n\t    while (++i < n) {\n\t      a = b;\n\t      b = polygon[i];\n\t      k += c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t\n\t    return k *= 3, [x / k, y / k];\n\t  }\n\t\n\t  // Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t  // the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t  // right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t  // negative if clockwise, and zero if the points are collinear.\n\t  function cross(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t\n\t  function lexicographicOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t\n\t  // Computes the upper convex hull per the monotone chain algorithm.\n\t  // Assumes points.length >= 3, is sorted by x, unique in y.\n\t  // Returns an array of indices into points in left-to-right order.\n\t  function computeUpperHullIndexes(points) {\n\t    var n = points.length,\n\t        indexes = [0, 1],\n\t        size = 2;\n\t\n\t    for (var i = 2; i < n; ++i) {\n\t      while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t      indexes[size++] = i;\n\t    }\n\t\n\t    return indexes.slice(0, size); // remove popped points\n\t  }\n\t\n\t  function hull(points) {\n\t    if ((n = points.length) < 3) return null;\n\t\n\t    var i,\n\t        n,\n\t        sortedPoints = new Array(n),\n\t        flippedPoints = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t    sortedPoints.sort(lexicographicOrder);\n\t    for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t    var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t        lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t    // Construct the hull polygon, removing possible duplicate endpoints.\n\t    var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t        skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t        hull = [];\n\t\n\t    // Add upper hull in right-to-l order.\n\t    // Then add lower hull in left-to-right order.\n\t    for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t    for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t    return hull;\n\t  }\n\t\n\t  function contains(polygon, point) {\n\t    var n = polygon.length,\n\t        p = polygon[n - 1],\n\t        x = point[0], y = point[1],\n\t        x0 = p[0], y0 = p[1],\n\t        x1, y1,\n\t        inside = false;\n\t\n\t    for (var i = 0; i < n; ++i) {\n\t      p = polygon[i], x1 = p[0], y1 = p[1];\n\t      if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t      x0 = x1, y0 = y1;\n\t    }\n\t\n\t    return inside;\n\t  }\n\t\n\t  function length$1(polygon) {\n\t    var i = -1,\n\t        n = polygon.length,\n\t        b = polygon[n - 1],\n\t        xa,\n\t        ya,\n\t        xb = b[0],\n\t        yb = b[1],\n\t        perimeter = 0;\n\t\n\t    while (++i < n) {\n\t      xa = xb;\n\t      ya = yb;\n\t      b = polygon[i];\n\t      xb = b[0];\n\t      yb = b[1];\n\t      xa -= xb;\n\t      ya -= yb;\n\t      perimeter += Math.sqrt(xa * xa + ya * ya);\n\t    }\n\t\n\t    return perimeter;\n\t  }\n\t\n\tvar   pi$1 = Math.PI;\n\tvar   tau$1 = 2 * pi$1;\n\t  var epsilon = 1e-6;\n\t  var tauEpsilon = tau$1 - epsilon;\n\t  function Path() {\n\t    this._x0 = this._y0 = // start of current subpath\n\t    this._x1 = this._y1 = null; // end of current subpath\n\t    this._ = [];\n\t  }\n\t\n\t  function path() {\n\t    return new Path;\n\t  }\n\t\n\t  Path.prototype = path.prototype = {\n\t    constructor: Path,\n\t    moveTo: function(x, y) {\n\t      this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n\t    },\n\t    closePath: function() {\n\t      if (this._x1 !== null) {\n\t        this._x1 = this._x0, this._y1 = this._y0;\n\t        this._.push(\"Z\");\n\t      }\n\t    },\n\t    lineTo: function(x, y) {\n\t      this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n\t    },\n\t    quadraticCurveTo: function(x1, y1, x, y) {\n\t      this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n\t    },\n\t    bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t      this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n\t    },\n\t    arcTo: function(x1, y1, x2, y2, r) {\n\t      x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t      var x0 = this._x1,\n\t          y0 = this._y1,\n\t          x21 = x2 - x1,\n\t          y21 = y2 - y1,\n\t          x01 = x0 - x1,\n\t          y01 = y0 - y1,\n\t          l01_2 = x01 * x01 + y01 * y01;\n\t\n\t      // Is the radius negative? Error.\n\t      if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t      // Is this path empty? Move to (x1,y1).\n\t      if (this._x1 === null) {\n\t        this._.push(\n\t          \"M\", this._x1 = x1, \",\", this._y1 = y1\n\t        );\n\t      }\n\t\n\t      // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t      else if (!(l01_2 > epsilon));\n\t\n\t      // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t      // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t      // Or, is the radius zero? Line to (x1,y1).\n\t      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n\t        this._.push(\n\t          \"L\", this._x1 = x1, \",\", this._y1 = y1\n\t        );\n\t      }\n\t\n\t      // Otherwise, draw an arc!\n\t      else {\n\t        var x20 = x2 - x0,\n\t            y20 = y2 - y0,\n\t            l21_2 = x21 * x21 + y21 * y21,\n\t            l20_2 = x20 * x20 + y20 * y20,\n\t            l21 = Math.sqrt(l21_2),\n\t            l01 = Math.sqrt(l01_2),\n\t            l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t            t01 = l / l01,\n\t            t21 = l / l21;\n\t\n\t        // If the start tangent is not coincident with (x0,y0), line to.\n\t        if (Math.abs(t01 - 1) > epsilon) {\n\t          this._.push(\n\t            \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n\t          );\n\t        }\n\t\n\t        this._.push(\n\t          \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n\t        );\n\t      }\n\t    },\n\t    arc: function(x, y, r, a0, a1, ccw) {\n\t      x = +x, y = +y, r = +r;\n\t      var dx = r * Math.cos(a0),\n\t          dy = r * Math.sin(a0),\n\t          x0 = x + dx,\n\t          y0 = y + dy,\n\t          cw = 1 ^ ccw,\n\t          da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t      // Is the radius negative? Error.\n\t      if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t      // Is this path empty? Move to (x0,y0).\n\t      if (this._x1 === null) {\n\t        this._.push(\n\t          \"M\", x0, \",\", y0\n\t        );\n\t      }\n\t\n\t      // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t      else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n\t        this._.push(\n\t          \"L\", x0, \",\", y0\n\t        );\n\t      }\n\t\n\t      // Is this arc empty? We’re done.\n\t      if (!r) return;\n\t\n\t      // Is this a complete circle? Draw two arcs to complete the circle.\n\t      if (da > tauEpsilon) {\n\t        this._.push(\n\t          \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n\t          \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n\t        );\n\t      }\n\t\n\t      // Otherwise, draw an arc!\n\t      else {\n\t        if (da < 0) da = da % tau$1 + tau$1;\n\t        this._.push(\n\t          \"A\", r, \",\", r, \",0,\", +(da >= pi$1), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n\t        );\n\t      }\n\t    },\n\t    rect: function(x, y, w, h) {\n\t      this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n\t    },\n\t    toString: function() {\n\t      return this._.join(\"\");\n\t    }\n\t  };\n\t\n\t  function tree_add(d) {\n\t    var x = +this._x.call(null, d),\n\t        y = +this._y.call(null, d);\n\t    return add(this.cover(x, y), x, y, d);\n\t  }\n\t\n\t  function add(tree, x, y, d) {\n\t    if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t    var parent,\n\t        node = tree._root,\n\t        leaf = {data: d},\n\t        x0 = tree._x0,\n\t        y0 = tree._y0,\n\t        x1 = tree._x1,\n\t        y1 = tree._y1,\n\t        xm,\n\t        ym,\n\t        xp,\n\t        yp,\n\t        right,\n\t        bottom,\n\t        i,\n\t        j;\n\t\n\t    // If the tree is empty, initialize the root as a leaf.\n\t    if (!node) return tree._root = leaf, tree;\n\t\n\t    // Find the existing leaf for the new point, or add it.\n\t    while (node.length) {\n\t      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t      if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t    }\n\t\n\t    // Is the new point is exactly coincident with the existing point?\n\t    xp = +tree._x.call(null, node.data);\n\t    yp = +tree._y.call(null, node.data);\n\t    if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t    // Otherwise, split the leaf node until the old and new point are separated.\n\t    do {\n\t      parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t    return parent[j] = node, parent[i] = leaf, tree;\n\t  }\n\t\n\t  function addAll(data) {\n\t    var d, i, n = data.length,\n\t        x,\n\t        y,\n\t        xz = new Array(n),\n\t        yz = new Array(n),\n\t        x0 = Infinity,\n\t        y0 = Infinity,\n\t        x1 = -Infinity,\n\t        y1 = -Infinity;\n\t\n\t    // Compute the points and their extent.\n\t    for (i = 0; i < n; ++i) {\n\t      if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t      xz[i] = x;\n\t      yz[i] = y;\n\t      if (x < x0) x0 = x;\n\t      if (x > x1) x1 = x;\n\t      if (y < y0) y0 = y;\n\t      if (y > y1) y1 = y;\n\t    }\n\t\n\t    // If there were no (valid) points, inherit the existing extent.\n\t    if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t    if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t    // Expand the tree to cover the new points.\n\t    this.cover(x0, y0).cover(x1, y1);\n\t\n\t    // Add the new points.\n\t    for (i = 0; i < n; ++i) {\n\t      add(this, xz[i], yz[i], data[i]);\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function tree_cover(x, y) {\n\t    if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t    var x0 = this._x0,\n\t        y0 = this._y0,\n\t        x1 = this._x1,\n\t        y1 = this._y1;\n\t\n\t    // If the quadtree has no extent, initialize them.\n\t    // Integer extent are necessary so that if we later double the extent,\n\t    // the existing quadrant boundaries don’t change due to floating point error!\n\t    if (isNaN(x0)) {\n\t      x1 = (x0 = Math.floor(x)) + 1;\n\t      y1 = (y0 = Math.floor(y)) + 1;\n\t    }\n\t\n\t    // Otherwise, double repeatedly to cover.\n\t    else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t      var z = x1 - x0,\n\t          node = this._root,\n\t          parent,\n\t          i;\n\t\n\t      switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t        case 0: {\n\t          do parent = new Array(4), parent[i] = node, node = parent;\n\t          while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t          break;\n\t        }\n\t        case 1: {\n\t          do parent = new Array(4), parent[i] = node, node = parent;\n\t          while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t          break;\n\t        }\n\t        case 2: {\n\t          do parent = new Array(4), parent[i] = node, node = parent;\n\t          while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t          break;\n\t        }\n\t        case 3: {\n\t          do parent = new Array(4), parent[i] = node, node = parent;\n\t          while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (this._root && this._root.length) this._root = node;\n\t    }\n\t\n\t    // If the quadtree covers the point already, just return.\n\t    else return this;\n\t\n\t    this._x0 = x0;\n\t    this._y0 = y0;\n\t    this._x1 = x1;\n\t    this._y1 = y1;\n\t    return this;\n\t  }\n\t\n\t  function tree_data() {\n\t    var data = [];\n\t    this.visit(function(node) {\n\t      if (!node.length) do data.push(node.data); while (node = node.next)\n\t    });\n\t    return data;\n\t  }\n\t\n\t  function tree_extent(_) {\n\t    return arguments.length\n\t        ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t        : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t  }\n\t\n\t  function Quad(node, x0, y0, x1, y1) {\n\t    this.node = node;\n\t    this.x0 = x0;\n\t    this.y0 = y0;\n\t    this.x1 = x1;\n\t    this.y1 = y1;\n\t  }\n\t\n\t  function tree_find(x, y, radius) {\n\t    var data,\n\t        x0 = this._x0,\n\t        y0 = this._y0,\n\t        x1,\n\t        y1,\n\t        x2,\n\t        y2,\n\t        x3 = this._x1,\n\t        y3 = this._y1,\n\t        quads = [],\n\t        node = this._root,\n\t        q,\n\t        i;\n\t\n\t    if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t    if (radius == null) radius = Infinity;\n\t    else {\n\t      x0 = x - radius, y0 = y - radius;\n\t      x3 = x + radius, y3 = y + radius;\n\t      radius *= radius;\n\t    }\n\t\n\t    while (q = quads.pop()) {\n\t\n\t      // Stop searching if this quadrant can’t contain a closer node.\n\t      if (!(node = q.node)\n\t          || (x1 = q.x0) > x3\n\t          || (y1 = q.y0) > y3\n\t          || (x2 = q.x1) < x0\n\t          || (y2 = q.y1) < y0) continue;\n\t\n\t      // Bisect the current quadrant.\n\t      if (node.length) {\n\t        var xm = (x1 + x2) / 2,\n\t            ym = (y1 + y2) / 2;\n\t\n\t        quads.push(\n\t          new Quad(node[3], xm, ym, x2, y2),\n\t          new Quad(node[2], x1, ym, xm, y2),\n\t          new Quad(node[1], xm, y1, x2, ym),\n\t          new Quad(node[0], x1, y1, xm, ym)\n\t        );\n\t\n\t        // Visit the closest quadrant first.\n\t        if (i = (y >= ym) << 1 | (x >= xm)) {\n\t          q = quads[quads.length - 1];\n\t          quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t          quads[quads.length - 1 - i] = q;\n\t        }\n\t      }\n\t\n\t      // Visit this point. (Visiting coincident points isn’t necessary!)\n\t      else {\n\t        var dx = x - +this._x.call(null, node.data),\n\t            dy = y - +this._y.call(null, node.data),\n\t            d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) {\n\t          var d = Math.sqrt(radius = d2);\n\t          x0 = x - d, y0 = y - d;\n\t          x3 = x + d, y3 = y + d;\n\t          data = node.data;\n\t        }\n\t      }\n\t    }\n\t\n\t    return data;\n\t  }\n\t\n\t  function tree_remove(d) {\n\t    if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t    var parent,\n\t        node = this._root,\n\t        retainer,\n\t        previous,\n\t        next,\n\t        x0 = this._x0,\n\t        y0 = this._y0,\n\t        x1 = this._x1,\n\t        y1 = this._y1,\n\t        x,\n\t        y,\n\t        xm,\n\t        ym,\n\t        right,\n\t        bottom,\n\t        i,\n\t        j;\n\t\n\t    // If the tree is empty, initialize the root as a leaf.\n\t    if (!node) return this;\n\t\n\t    // Find the leaf node for the point.\n\t    // While descending, also retain the deepest parent with a non-removed sibling.\n\t    if (node.length) while (true) {\n\t      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t      if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t      if (!node.length) break;\n\t      if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t    }\n\t\n\t    // Find the point to remove.\n\t    while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t    if (next = node.next) delete node.next;\n\t\n\t    // If there are multiple coincident points, remove just the point.\n\t    if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t    // If this is the root point, remove it.\n\t    if (!parent) return this._root = next, this;\n\t\n\t    // Remove this leaf.\n\t    next ? parent[i] = next : delete parent[i];\n\t\n\t    // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t    if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t        && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t        && !node.length) {\n\t      if (retainer) retainer[j] = node;\n\t      else this._root = node;\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function removeAll(data) {\n\t    for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t    return this;\n\t  }\n\t\n\t  function tree_root() {\n\t    return this._root;\n\t  }\n\t\n\t  function tree_size() {\n\t    var size = 0;\n\t    this.visit(function(node) {\n\t      if (!node.length) do ++size; while (node = node.next)\n\t    });\n\t    return size;\n\t  }\n\t\n\t  function tree_visit(callback) {\n\t    var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t    if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t    while (q = quads.pop()) {\n\t      if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t        var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      }\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function tree_visitAfter(callback) {\n\t    var quads = [], next = [], q;\n\t    if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t    while (q = quads.pop()) {\n\t      var node = q.node;\n\t      if (node.length) {\n\t        var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      }\n\t      next.push(q);\n\t    }\n\t    while (q = next.pop()) {\n\t      callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function defaultX(d) {\n\t    return d[0];\n\t  }\n\t\n\t  function tree_x(_) {\n\t    return arguments.length ? (this._x = _, this) : this._x;\n\t  }\n\t\n\t  function defaultY(d) {\n\t    return d[1];\n\t  }\n\t\n\t  function tree_y(_) {\n\t    return arguments.length ? (this._y = _, this) : this._y;\n\t  }\n\t\n\t  function quadtree(nodes, x, y) {\n\t    var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t    return nodes == null ? tree : tree.addAll(nodes);\n\t  }\n\t\n\t  function Quadtree(x, y, x0, y0, x1, y1) {\n\t    this._x = x;\n\t    this._y = y;\n\t    this._x0 = x0;\n\t    this._y0 = y0;\n\t    this._x1 = x1;\n\t    this._y1 = y1;\n\t    this._root = undefined;\n\t  }\n\t\n\t  function leaf_copy(leaf) {\n\t    var copy = {data: leaf.data}, next = copy;\n\t    while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t    return copy;\n\t  }\n\t\n\t  var treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\t  treeProto.copy = function() {\n\t    var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t        node = this._root,\n\t        nodes,\n\t        child;\n\t\n\t    if (!node) return copy;\n\t\n\t    if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t    nodes = [{source: node, target: copy._root = new Array(4)}];\n\t    while (node = nodes.pop()) {\n\t      for (var i = 0; i < 4; ++i) {\n\t        if (child = node.source[i]) {\n\t          if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t          else node.target[i] = leaf_copy(child);\n\t        }\n\t      }\n\t    }\n\t\n\t    return copy;\n\t  };\n\t\n\t  treeProto.add = tree_add;\n\t  treeProto.addAll = addAll;\n\t  treeProto.cover = tree_cover;\n\t  treeProto.data = tree_data;\n\t  treeProto.extent = tree_extent;\n\t  treeProto.find = tree_find;\n\t  treeProto.remove = tree_remove;\n\t  treeProto.removeAll = removeAll;\n\t  treeProto.root = tree_root;\n\t  treeProto.size = tree_size;\n\t  treeProto.visit = tree_visit;\n\t  treeProto.visitAfter = tree_visitAfter;\n\t  treeProto.x = tree_x;\n\t  treeProto.y = tree_y;\n\t\n\t  var slice$1 = [].slice;\n\t\n\t  var noabort = {};\n\t\n\t  function Queue(size) {\n\t    if (!(size >= 1)) throw new Error;\n\t    this._size = size;\n\t    this._call =\n\t    this._error = null;\n\t    this._tasks = [];\n\t    this._data = [];\n\t    this._waiting =\n\t    this._active =\n\t    this._ended =\n\t    this._start = 0; // inside a synchronous task callback?\n\t  }\n\t\n\t  Queue.prototype = queue.prototype = {\n\t    constructor: Queue,\n\t    defer: function(callback) {\n\t      if (typeof callback !== \"function\" || this._call) throw new Error;\n\t      if (this._error != null) return this;\n\t      var t = slice$1.call(arguments, 1);\n\t      t.push(callback);\n\t      ++this._waiting, this._tasks.push(t);\n\t      poke(this);\n\t      return this;\n\t    },\n\t    abort: function() {\n\t      if (this._error == null) abort(this, new Error(\"abort\"));\n\t      return this;\n\t    },\n\t    await: function(callback) {\n\t      if (typeof callback !== \"function\" || this._call) throw new Error;\n\t      this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t      maybeNotify(this);\n\t      return this;\n\t    },\n\t    awaitAll: function(callback) {\n\t      if (typeof callback !== \"function\" || this._call) throw new Error;\n\t      this._call = callback;\n\t      maybeNotify(this);\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function poke(q) {\n\t    if (!q._start) try { start(q); } // let the current task complete\n\t    catch (e) { if (q._tasks[q._ended + q._active - 1]) abort(q, e); } // task errored synchronously\n\t  }\n\t\n\t  function start(q) {\n\t    while (q._start = q._waiting && q._active < q._size) {\n\t      var i = q._ended + q._active,\n\t          t = q._tasks[i],\n\t          j = t.length - 1,\n\t          c = t[j];\n\t      t[j] = end(q, i);\n\t      --q._waiting, ++q._active;\n\t      t = c.apply(null, t);\n\t      if (!q._tasks[i]) continue; // task finished synchronously\n\t      q._tasks[i] = t || noabort;\n\t    }\n\t  }\n\t\n\t  function end(q, i) {\n\t    return function(e, r) {\n\t      if (!q._tasks[i]) return; // ignore multiple callbacks\n\t      --q._active, ++q._ended;\n\t      q._tasks[i] = null;\n\t      if (q._error != null) return; // ignore secondary errors\n\t      if (e != null) {\n\t        abort(q, e);\n\t      } else {\n\t        q._data[i] = r;\n\t        if (q._waiting) poke(q);\n\t        else maybeNotify(q);\n\t      }\n\t    };\n\t  }\n\t\n\t  function abort(q, e) {\n\t    var i = q._tasks.length, t;\n\t    q._error = e; // ignore active callbacks\n\t    q._data = undefined; // allow gc\n\t    q._waiting = NaN; // prevent starting\n\t\n\t    while (--i >= 0) {\n\t      if (t = q._tasks[i]) {\n\t        q._tasks[i] = null;\n\t        if (t.abort) try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t\n\t    q._active = NaN; // allow notification\n\t    maybeNotify(q);\n\t  }\n\t\n\t  function maybeNotify(q) {\n\t    if (!q._active && q._call) q._call(q._error, q._data);\n\t  }\n\t\n\t  function queue(concurrency) {\n\t    return new Queue(arguments.length ? +concurrency : Infinity);\n\t  }\n\t\n\t  function constant$1(x) {\n\t    return function constant() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  var epsilon$1 = 1e-12;\n\t  var pi$2 = Math.PI;\n\t  var halfPi$1 = pi$2 / 2;\n\t  var tau$2 = 2 * pi$2;\n\t\n\t  function arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t\n\t  function arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t\n\t  function arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t\n\t  function arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t\n\t  function arcPadAngle(d) {\n\t    return d && d.padAngle; // Note: optional!\n\t  }\n\t\n\t  function asin(x) {\n\t    return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n\t  }\n\t\n\t  function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t    var x10 = x1 - x0, y10 = y1 - y0,\n\t        x32 = x3 - x2, y32 = y3 - y2,\n\t        t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t    return [x0 + t * x10, y0 + t * y10];\n\t  }\n\t\n\t  // Compute perpendicular offset line of length rc.\n\t  // http://mathworld.wolfram.com/Circle-LineIntersection.html\n\t  function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t    var x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n\t        ox = lo * y01,\n\t        oy = -lo * x01,\n\t        x11 = x0 + ox,\n\t        y11 = y0 + oy,\n\t        x10 = x1 + ox,\n\t        y10 = y1 + oy,\n\t        x00 = (x11 + x10) / 2,\n\t        y00 = (y11 + y10) / 2,\n\t        dx = x10 - x11,\n\t        dy = y10 - y11,\n\t        d2 = dx * dx + dy * dy,\n\t        r = r1 - rc,\n\t        D = x11 * y10 - x10 * y11,\n\t        d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n\t        cx0 = (D * dy - dx * d) / d2,\n\t        cy0 = (-D * dx - dy * d) / d2,\n\t        cx1 = (D * dy + dx * d) / d2,\n\t        cy1 = (-D * dx + dy * d) / d2,\n\t        dx0 = cx0 - x00,\n\t        dy0 = cy0 - y00,\n\t        dx1 = cx1 - x00,\n\t        dy1 = cy1 - y00;\n\t\n\t    // Pick the closer of the two intersection points.\n\t    // TODO Is there a faster way to determine which intersection to use?\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t    return {\n\t      cx: cx0,\n\t      cy: cy0,\n\t      x01: -ox,\n\t      y01: -oy,\n\t      x11: cx0 * (r1 / r - 1),\n\t      y11: cy0 * (r1 / r - 1)\n\t    };\n\t  }\n\t\n\t  function arc() {\n\t    var innerRadius = arcInnerRadius,\n\t        outerRadius = arcOuterRadius,\n\t        cornerRadius = constant$1(0),\n\t        padRadius = null,\n\t        startAngle = arcStartAngle,\n\t        endAngle = arcEndAngle,\n\t        padAngle = arcPadAngle,\n\t        context = null;\n\t\n\t    function arc() {\n\t      var buffer,\n\t          r,\n\t          r0 = +innerRadius.apply(this, arguments),\n\t          r1 = +outerRadius.apply(this, arguments),\n\t          a0 = startAngle.apply(this, arguments) - halfPi$1,\n\t          a1 = endAngle.apply(this, arguments) - halfPi$1,\n\t          da = Math.abs(a1 - a0),\n\t          cw = a1 > a0;\n\t\n\t      if (!context) context = buffer = path();\n\t\n\t      // Ensure that the outer radius is always larger than the inner radius.\n\t      if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t      // Is it a point?\n\t      if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\t\n\t      // Or is it a circle or annulus?\n\t      else if (da > tau$2 - epsilon$1) {\n\t        context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n\t        context.arc(0, 0, r1, a0, a1, !cw);\n\t        if (r0 > epsilon$1) {\n\t          context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n\t          context.arc(0, 0, r0, a1, a0, cw);\n\t        }\n\t      }\n\t\n\t      // Or is it a circular or annular sector?\n\t      else {\n\t        var a01 = a0,\n\t            a11 = a1,\n\t            a00 = a0,\n\t            a10 = a1,\n\t            da0 = da,\n\t            da1 = da,\n\t            ap = padAngle.apply(this, arguments) / 2,\n\t            rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n\t            rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t            rc0 = rc,\n\t            rc1 = rc,\n\t            t0,\n\t            t1;\n\t\n\t        // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t        if (rp > epsilon$1) {\n\t          var p0 = asin(rp / r0 * Math.sin(ap)),\n\t              p1 = asin(rp / r1 * Math.sin(ap));\n\t          if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t          else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t          if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t          else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t        }\n\t\n\t        var x01 = r1 * Math.cos(a01),\n\t            y01 = r1 * Math.sin(a01),\n\t            x10 = r0 * Math.cos(a10),\n\t            y10 = r0 * Math.sin(a10);\n\t\n\t        // Apply rounded corners?\n\t        if (rc > epsilon$1) {\n\t          var x11 = r1 * Math.cos(a11),\n\t              y11 = r1 * Math.sin(a11),\n\t              x00 = r0 * Math.cos(a00),\n\t              y00 = r0 * Math.sin(a00);\n\t\n\t          // Restrict the corner radius according to the sector angle.\n\t          if (da < pi$2) {\n\t            var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t                ax = x01 - oc[0],\n\t                ay = y01 - oc[1],\n\t                bx = x11 - oc[0],\n\t                by = y11 - oc[1],\n\t                kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n\t                lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t            rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t            rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t          }\n\t        }\n\t\n\t        // Is the sector collapsed to a line?\n\t        if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\t\n\t        // Does the sector’s outer ring have rounded corners?\n\t        else if (rc1 > epsilon$1) {\n\t          t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t          t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t          context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t          // Have the corners merged?\n\t          if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t          // Otherwise, draw the two corners and the ring.\n\t          else {\n\t            context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t            context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t            context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t          }\n\t        }\n\t\n\t        // Or is the outer ring just a circular arc?\n\t        else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t        // Is there no inner ring, and it’s a circular sector?\n\t        // Or perhaps it’s an annular sector collapsed due to padding?\n\t        if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\t\n\t        // Does the sector’s inner ring (or point) have rounded corners?\n\t        else if (rc0 > epsilon$1) {\n\t          t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t          t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t          context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t          // Have the corners merged?\n\t          if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t          // Otherwise, draw the two corners and the ring.\n\t          else {\n\t            context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t            context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t            context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t          }\n\t        }\n\t\n\t        // Or is the inner ring just a circular arc?\n\t        else context.arc(0, 0, r0, a10, a00, cw);\n\t      }\n\t\n\t      context.closePath();\n\t\n\t      if (buffer) return context = null, buffer + \"\" || null;\n\t    }\n\t\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t          a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n\t      return [Math.cos(a) * r, Math.sin(a) * r];\n\t    };\n\t\n\t    arc.innerRadius = function(_) {\n\t      return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$1(+_), arc) : innerRadius;\n\t    };\n\t\n\t    arc.outerRadius = function(_) {\n\t      return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$1(+_), arc) : outerRadius;\n\t    };\n\t\n\t    arc.cornerRadius = function(_) {\n\t      return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$1(+_), arc) : cornerRadius;\n\t    };\n\t\n\t    arc.padRadius = function(_) {\n\t      return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$1(+_), arc) : padRadius;\n\t    };\n\t\n\t    arc.startAngle = function(_) {\n\t      return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$1(+_), arc) : startAngle;\n\t    };\n\t\n\t    arc.endAngle = function(_) {\n\t      return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$1(+_), arc) : endAngle;\n\t    };\n\t\n\t    arc.padAngle = function(_) {\n\t      return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$1(+_), arc) : padAngle;\n\t    };\n\t\n\t    arc.context = function(_) {\n\t      return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t    };\n\t\n\t    return arc;\n\t  }\n\t\n\t  function Linear(context) {\n\t    this._context = context;\n\t  }\n\t\n\t  Linear.prototype = {\n\t    areaStart: function() {\n\t      this._line = 0;\n\t    },\n\t    areaEnd: function() {\n\t      this._line = NaN;\n\t    },\n\t    lineStart: function() {\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t      this._line = 1 - this._line;\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t      switch (this._point) {\n\t        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t        case 1: this._point = 2; // proceed\n\t        default: this._context.lineTo(x, y); break;\n\t      }\n\t    }\n\t  };\n\t\n\t  function curveLinear(context) {\n\t    return new Linear(context);\n\t  }\n\t\n\t  function x(p) {\n\t    return p[0];\n\t  }\n\t\n\t  function y(p) {\n\t    return p[1];\n\t  }\n\t\n\t  function line() {\n\t    var x$$ = x,\n\t        y$$ = y,\n\t        defined = constant$1(true),\n\t        context = null,\n\t        curve = curveLinear,\n\t        output = null;\n\t\n\t    function line(data) {\n\t      var i,\n\t          n = data.length,\n\t          d,\n\t          defined0 = false,\n\t          buffer;\n\t\n\t      if (context == null) output = curve(buffer = path());\n\t\n\t      for (i = 0; i <= n; ++i) {\n\t        if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t          if (defined0 = !defined0) output.lineStart();\n\t          else output.lineEnd();\n\t        }\n\t        if (defined0) output.point(+x$$(d, i, data), +y$$(d, i, data));\n\t      }\n\t\n\t      if (buffer) return output = null, buffer + \"\" || null;\n\t    }\n\t\n\t    line.x = function(_) {\n\t      return arguments.length ? (x$$ = typeof _ === \"function\" ? _ : constant$1(+_), line) : x$$;\n\t    };\n\t\n\t    line.y = function(_) {\n\t      return arguments.length ? (y$$ = typeof _ === \"function\" ? _ : constant$1(+_), line) : y$$;\n\t    };\n\t\n\t    line.defined = function(_) {\n\t      return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$1(!!_), line) : defined;\n\t    };\n\t\n\t    line.curve = function(_) {\n\t      return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t    };\n\t\n\t    line.context = function(_) {\n\t      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t    };\n\t\n\t    return line;\n\t  }\n\t\n\t  function area$1() {\n\t    var x0 = x,\n\t        x1 = null,\n\t        y0 = constant$1(0),\n\t        y1 = y,\n\t        defined = constant$1(true),\n\t        context = null,\n\t        curve = curveLinear,\n\t        output = null;\n\t\n\t    function area(data) {\n\t      var i,\n\t          j,\n\t          k,\n\t          n = data.length,\n\t          d,\n\t          defined0 = false,\n\t          buffer,\n\t          x0z = new Array(n),\n\t          y0z = new Array(n);\n\t\n\t      if (context == null) output = curve(buffer = path());\n\t\n\t      for (i = 0; i <= n; ++i) {\n\t        if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t          if (defined0 = !defined0) {\n\t            j = i;\n\t            output.areaStart();\n\t            output.lineStart();\n\t          } else {\n\t            output.lineEnd();\n\t            output.lineStart();\n\t            for (k = i - 1; k >= j; --k) {\n\t              output.point(x0z[k], y0z[k]);\n\t            }\n\t            output.lineEnd();\n\t            output.areaEnd();\n\t          }\n\t        }\n\t        if (defined0) {\n\t          x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t          output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t        }\n\t      }\n\t\n\t      if (buffer) return output = null, buffer + \"\" || null;\n\t    }\n\t\n\t    function arealine() {\n\t      return line().defined(defined).curve(curve).context(context);\n\t    }\n\t\n\t    area.x = function(_) {\n\t      return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$1(+_), x1 = null, area) : x0;\n\t    };\n\t\n\t    area.x0 = function(_) {\n\t      return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$1(+_), area) : x0;\n\t    };\n\t\n\t    area.x1 = function(_) {\n\t      return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$1(+_), area) : x1;\n\t    };\n\t\n\t    area.y = function(_) {\n\t      return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$1(+_), y1 = null, area) : y0;\n\t    };\n\t\n\t    area.y0 = function(_) {\n\t      return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$1(+_), area) : y0;\n\t    };\n\t\n\t    area.y1 = function(_) {\n\t      return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$1(+_), area) : y1;\n\t    };\n\t\n\t    area.lineX0 =\n\t    area.lineY0 = function() {\n\t      return arealine().x(x0).y(y0);\n\t    };\n\t\n\t    area.lineY1 = function() {\n\t      return arealine().x(x0).y(y1);\n\t    };\n\t\n\t    area.lineX1 = function() {\n\t      return arealine().x(x1).y(y0);\n\t    };\n\t\n\t    area.defined = function(_) {\n\t      return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$1(!!_), area) : defined;\n\t    };\n\t\n\t    area.curve = function(_) {\n\t      return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t    };\n\t\n\t    area.context = function(_) {\n\t      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t    };\n\t\n\t    return area;\n\t  }\n\t\n\t  function descending$1(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  }\n\t\n\t  function identity$1(d) {\n\t    return d;\n\t  }\n\t\n\t  function pie() {\n\t    var value = identity$1,\n\t        sortValues = descending$1,\n\t        sort = null,\n\t        startAngle = constant$1(0),\n\t        endAngle = constant$1(tau$2),\n\t        padAngle = constant$1(0);\n\t\n\t    function pie(data) {\n\t      var i,\n\t          n = data.length,\n\t          j,\n\t          k,\n\t          sum = 0,\n\t          index = new Array(n),\n\t          arcs = new Array(n),\n\t          a0 = +startAngle.apply(this, arguments),\n\t          da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n\t          a1,\n\t          p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t          pa = p * (da < 0 ? -1 : 1),\n\t          v;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t          sum += v;\n\t        }\n\t      }\n\t\n\t      // Optionally sort the arcs by previously-computed values or by data.\n\t      if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t      else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t      // Compute the arcs! They are stored in the original data's order.\n\t      for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t        j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t          data: data[j],\n\t          index: i,\n\t          value: v,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          padAngle: p\n\t        };\n\t      }\n\t\n\t      return arcs;\n\t    }\n\t\n\t    pie.value = function(_) {\n\t      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(+_), pie) : value;\n\t    };\n\t\n\t    pie.sortValues = function(_) {\n\t      return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t    };\n\t\n\t    pie.sort = function(_) {\n\t      return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t    };\n\t\n\t    pie.startAngle = function(_) {\n\t      return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$1(+_), pie) : startAngle;\n\t    };\n\t\n\t    pie.endAngle = function(_) {\n\t      return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$1(+_), pie) : endAngle;\n\t    };\n\t\n\t    pie.padAngle = function(_) {\n\t      return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$1(+_), pie) : padAngle;\n\t    };\n\t\n\t    return pie;\n\t  }\n\t\n\t  var curveRadialLinear = curveRadial(curveLinear);\n\t\n\t  function Radial(curve) {\n\t    this._curve = curve;\n\t  }\n\t\n\t  Radial.prototype = {\n\t    areaStart: function() {\n\t      this._curve.areaStart();\n\t    },\n\t    areaEnd: function() {\n\t      this._curve.areaEnd();\n\t    },\n\t    lineStart: function() {\n\t      this._curve.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this._curve.lineEnd();\n\t    },\n\t    point: function(a, r) {\n\t      this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t    }\n\t  };\n\t\n\t  function curveRadial(curve) {\n\t\n\t    function radial(context) {\n\t      return new Radial(curve(context));\n\t    }\n\t\n\t    radial._curve = curve;\n\t\n\t    return radial;\n\t  }\n\t\n\t  function radialLine(l) {\n\t    var c = l.curve;\n\t\n\t    l.angle = l.x, delete l.x;\n\t    l.radius = l.y, delete l.y;\n\t\n\t    l.curve = function(_) {\n\t      return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t    };\n\t\n\t    return l;\n\t  }\n\t\n\t  function radialLine$1() {\n\t    return radialLine(line().curve(curveRadialLinear));\n\t  }\n\t\n\t  function radialArea() {\n\t    var a = area$1().curve(curveRadialLinear),\n\t        c = a.curve,\n\t        x0 = a.lineX0,\n\t        x1 = a.lineX1,\n\t        y0 = a.lineY0,\n\t        y1 = a.lineY1;\n\t\n\t    a.angle = a.x, delete a.x;\n\t    a.startAngle = a.x0, delete a.x0;\n\t    a.endAngle = a.x1, delete a.x1;\n\t    a.radius = a.y, delete a.y;\n\t    a.innerRadius = a.y0, delete a.y0;\n\t    a.outerRadius = a.y1, delete a.y1;\n\t    a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n\t    a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n\t    a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n\t    a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\t\n\t    a.curve = function(_) {\n\t      return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t    };\n\t\n\t    return a;\n\t  }\n\t\n\t  var circle = {\n\t    draw: function(context, size) {\n\t      var r = Math.sqrt(size / pi$2);\n\t      context.moveTo(r, 0);\n\t      context.arc(0, 0, r, 0, tau$2);\n\t    }\n\t  };\n\t\n\t  var cross$1 = {\n\t    draw: function(context, size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      context.moveTo(-3 * r, -r);\n\t      context.lineTo(-r, -r);\n\t      context.lineTo(-r, -3 * r);\n\t      context.lineTo(r, -3 * r);\n\t      context.lineTo(r, -r);\n\t      context.lineTo(3 * r, -r);\n\t      context.lineTo(3 * r, r);\n\t      context.lineTo(r, r);\n\t      context.lineTo(r, 3 * r);\n\t      context.lineTo(-r, 3 * r);\n\t      context.lineTo(-r, r);\n\t      context.lineTo(-3 * r, r);\n\t      context.closePath();\n\t    }\n\t  };\n\t\n\t  var tan30 = Math.sqrt(1 / 3);\n\t  var tan30_2 = tan30 * 2;\n\t  var diamond = {\n\t    draw: function(context, size) {\n\t      var y = Math.sqrt(size / tan30_2),\n\t          x = y * tan30;\n\t      context.moveTo(0, -y);\n\t      context.lineTo(x, 0);\n\t      context.lineTo(0, y);\n\t      context.lineTo(-x, 0);\n\t      context.closePath();\n\t    }\n\t  };\n\t\n\t  var ka = 0.89081309152928522810;\n\t  var kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\n\t  var kx = Math.sin(tau$2 / 10) * kr;\n\t  var ky = -Math.cos(tau$2 / 10) * kr;\n\t  var star = {\n\t    draw: function(context, size) {\n\t      var r = Math.sqrt(size * ka),\n\t          x = kx * r,\n\t          y = ky * r;\n\t      context.moveTo(0, -r);\n\t      context.lineTo(x, y);\n\t      for (var i = 1; i < 5; ++i) {\n\t        var a = tau$2 * i / 5,\n\t            c = Math.cos(a),\n\t            s = Math.sin(a);\n\t        context.lineTo(s * r, -c * r);\n\t        context.lineTo(c * x - s * y, s * x + c * y);\n\t      }\n\t      context.closePath();\n\t    }\n\t  };\n\t\n\t  var square = {\n\t    draw: function(context, size) {\n\t      var w = Math.sqrt(size),\n\t          x = -w / 2;\n\t      context.rect(x, x, w, w);\n\t    }\n\t  };\n\t\n\t  var sqrt3 = Math.sqrt(3);\n\t\n\t  var triangle = {\n\t    draw: function(context, size) {\n\t      var y = -Math.sqrt(size / (sqrt3 * 3));\n\t      context.moveTo(0, y * 2);\n\t      context.lineTo(-sqrt3 * y, -y);\n\t      context.lineTo(sqrt3 * y, -y);\n\t      context.closePath();\n\t    }\n\t  };\n\t\n\t  var c = -0.5;\n\t  var s = Math.sqrt(3) / 2;\n\t  var k = 1 / Math.sqrt(12);\n\t  var a = (k / 2 + 1) * 3;\n\t  var wye = {\n\t    draw: function(context, size) {\n\t      var r = Math.sqrt(size / a),\n\t          x0 = r / 2,\n\t          y0 = r * k,\n\t          x1 = x0,\n\t          y1 = r * k + r,\n\t          x2 = -x1,\n\t          y2 = y1;\n\t      context.moveTo(x0, y0);\n\t      context.lineTo(x1, y1);\n\t      context.lineTo(x2, y2);\n\t      context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t      context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t      context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t      context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t      context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t      context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t      context.closePath();\n\t    }\n\t  };\n\t\n\t  var symbols = [\n\t    circle,\n\t    cross$1,\n\t    diamond,\n\t    square,\n\t    star,\n\t    triangle,\n\t    wye\n\t  ];\n\t\n\t  function symbol() {\n\t    var type = constant$1(circle),\n\t        size = constant$1(64),\n\t        context = null;\n\t\n\t    function symbol() {\n\t      var buffer;\n\t      if (!context) context = buffer = path();\n\t      type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t      if (buffer) return context = null, buffer + \"\" || null;\n\t    }\n\t\n\t    symbol.type = function(_) {\n\t      return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$1(_), symbol) : type;\n\t    };\n\t\n\t    symbol.size = function(_) {\n\t      return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$1(+_), symbol) : size;\n\t    };\n\t\n\t    symbol.context = function(_) {\n\t      return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t    };\n\t\n\t    return symbol;\n\t  }\n\t\n\t  function noop() {}\n\t\n\t  function point(that, x, y) {\n\t    that._context.bezierCurveTo(\n\t      (2 * that._x0 + that._x1) / 3,\n\t      (2 * that._y0 + that._y1) / 3,\n\t      (that._x0 + 2 * that._x1) / 3,\n\t      (that._y0 + 2 * that._y1) / 3,\n\t      (that._x0 + 4 * that._x1 + x) / 6,\n\t      (that._y0 + 4 * that._y1 + y) / 6\n\t    );\n\t  }\n\t\n\t  function Basis(context) {\n\t    this._context = context;\n\t  }\n\t\n\t  Basis.prototype = {\n\t    areaStart: function() {\n\t      this._line = 0;\n\t    },\n\t    areaEnd: function() {\n\t      this._line = NaN;\n\t    },\n\t    lineStart: function() {\n\t      this._x0 = this._x1 =\n\t      this._y0 = this._y1 = NaN;\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      switch (this._point) {\n\t        case 3: point(this, this._x1, this._y1); // proceed\n\t        case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      }\n\t      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t      this._line = 1 - this._line;\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t      switch (this._point) {\n\t        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t        case 1: this._point = 2; break;\n\t        case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t        default: point(this, x, y); break;\n\t      }\n\t      this._x0 = this._x1, this._x1 = x;\n\t      this._y0 = this._y1, this._y1 = y;\n\t    }\n\t  };\n\t\n\t  function basis(context) {\n\t    return new Basis(context);\n\t  }\n\t\n\t  function BasisClosed(context) {\n\t    this._context = context;\n\t  }\n\t\n\t  BasisClosed.prototype = {\n\t    areaStart: noop,\n\t    areaEnd: noop,\n\t    lineStart: function() {\n\t      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      switch (this._point) {\n\t        case 1: {\n\t          this._context.moveTo(this._x2, this._y2);\n\t          this._context.closePath();\n\t          break;\n\t        }\n\t        case 2: {\n\t          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t          this._context.closePath();\n\t          break;\n\t        }\n\t        case 3: {\n\t          this.point(this._x2, this._y2);\n\t          this.point(this._x3, this._y3);\n\t          this.point(this._x4, this._y4);\n\t          break;\n\t        }\n\t      }\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t      switch (this._point) {\n\t        case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t        case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t        case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t        default: point(this, x, y); break;\n\t      }\n\t      this._x0 = this._x1, this._x1 = x;\n\t      this._y0 = this._y1, this._y1 = y;\n\t    }\n\t  };\n\t\n\t  function basisClosed(context) {\n\t    return new BasisClosed(context);\n\t  }\n\t\n\t  function BasisOpen(context) {\n\t    this._context = context;\n\t  }\n\t\n\t  BasisOpen.prototype = {\n\t    areaStart: function() {\n\t      this._line = 0;\n\t    },\n\t    areaEnd: function() {\n\t      this._line = NaN;\n\t    },\n\t    lineStart: function() {\n\t      this._x0 = this._x1 =\n\t      this._y0 = this._y1 = NaN;\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t      this._line = 1 - this._line;\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t      switch (this._point) {\n\t        case 0: this._point = 1; break;\n\t        case 1: this._point = 2; break;\n\t        case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t        case 3: this._point = 4; // proceed\n\t        default: point(this, x, y); break;\n\t      }\n\t      this._x0 = this._x1, this._x1 = x;\n\t      this._y0 = this._y1, this._y1 = y;\n\t    }\n\t  };\n\t\n\t  function basisOpen(context) {\n\t    return new BasisOpen(context);\n\t  }\n\t\n\t  function Bundle(context, beta) {\n\t    this._basis = new Basis(context);\n\t    this._beta = beta;\n\t  }\n\t\n\t  Bundle.prototype = {\n\t    lineStart: function() {\n\t      this._x = [];\n\t      this._y = [];\n\t      this._basis.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      var x = this._x,\n\t          y = this._y,\n\t          j = x.length - 1;\n\t\n\t      if (j > 0) {\n\t        var x0 = x[0],\n\t            y0 = y[0],\n\t            dx = x[j] - x0,\n\t            dy = y[j] - y0,\n\t            i = -1,\n\t            t;\n\t\n\t        while (++i <= j) {\n\t          t = i / j;\n\t          this._basis.point(\n\t            this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t            this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t          );\n\t        }\n\t      }\n\t\n\t      this._x = this._y = null;\n\t      this._basis.lineEnd();\n\t    },\n\t    point: function(x, y) {\n\t      this._x.push(+x);\n\t      this._y.push(+y);\n\t    }\n\t  };\n\t\n\t  var bundle = (function custom(beta) {\n\t\n\t    function bundle(context) {\n\t      return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t    }\n\t\n\t    bundle.beta = function(beta) {\n\t      return custom(+beta);\n\t    };\n\t\n\t    return bundle;\n\t  })(0.85);\n\t\n\t  function point$1(that, x, y) {\n\t    that._context.bezierCurveTo(\n\t      that._x1 + that._k * (that._x2 - that._x0),\n\t      that._y1 + that._k * (that._y2 - that._y0),\n\t      that._x2 + that._k * (that._x1 - x),\n\t      that._y2 + that._k * (that._y1 - y),\n\t      that._x2,\n\t      that._y2\n\t    );\n\t  }\n\t\n\t  function Cardinal(context, tension) {\n\t    this._context = context;\n\t    this._k = (1 - tension) / 6;\n\t  }\n\t\n\t  Cardinal.prototype = {\n\t    areaStart: function() {\n\t      this._line = 0;\n\t    },\n\t    areaEnd: function() {\n\t      this._line = NaN;\n\t    },\n\t    lineStart: function() {\n\t      this._x0 = this._x1 = this._x2 =\n\t      this._y0 = this._y1 = this._y2 = NaN;\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      switch (this._point) {\n\t        case 2: this._context.lineTo(this._x2, this._y2); break;\n\t        case 3: point$1(this, this._x1, this._y1); break;\n\t      }\n\t      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t      this._line = 1 - this._line;\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t      switch (this._point) {\n\t        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t        case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t        case 2: this._point = 3; // proceed\n\t        default: point$1(this, x, y); break;\n\t      }\n\t      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t    }\n\t  };\n\t\n\t  var cardinal = (function custom(tension) {\n\t\n\t    function cardinal(context) {\n\t      return new Cardinal(context, tension);\n\t    }\n\t\n\t    cardinal.tension = function(tension) {\n\t      return custom(+tension);\n\t    };\n\t\n\t    return cardinal;\n\t  })(0);\n\t\n\t  function CardinalClosed(context, tension) {\n\t    this._context = context;\n\t    this._k = (1 - tension) / 6;\n\t  }\n\t\n\t  CardinalClosed.prototype = {\n\t    areaStart: noop,\n\t    areaEnd: noop,\n\t    lineStart: function() {\n\t      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      switch (this._point) {\n\t        case 1: {\n\t          this._context.moveTo(this._x3, this._y3);\n\t          this._context.closePath();\n\t          break;\n\t        }\n\t        case 2: {\n\t          this._context.lineTo(this._x3, this._y3);\n\t          this._context.closePath();\n\t          break;\n\t        }\n\t        case 3: {\n\t          this.point(this._x3, this._y3);\n\t          this.point(this._x4, this._y4);\n\t          this.point(this._x5, this._y5);\n\t          break;\n\t        }\n\t      }\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t      switch (this._point) {\n\t        case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t        case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t        case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t        default: point$1(this, x, y); break;\n\t      }\n\t      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t    }\n\t  };\n\t\n\t  var cardinalClosed = (function custom(tension) {\n\t\n\t    function cardinal(context) {\n\t      return new CardinalClosed(context, tension);\n\t    }\n\t\n\t    cardinal.tension = function(tension) {\n\t      return custom(+tension);\n\t    };\n\t\n\t    return cardinal;\n\t  })(0);\n\t\n\t  function CardinalOpen(context, tension) {\n\t    this._context = context;\n\t    this._k = (1 - tension) / 6;\n\t  }\n\t\n\t  CardinalOpen.prototype = {\n\t    areaStart: function() {\n\t      this._line = 0;\n\t    },\n\t    areaEnd: function() {\n\t      this._line = NaN;\n\t    },\n\t    lineStart: function() {\n\t      this._x0 = this._x1 = this._x2 =\n\t      this._y0 = this._y1 = this._y2 = NaN;\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t      this._line = 1 - this._line;\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t      switch (this._point) {\n\t        case 0: this._point = 1; break;\n\t        case 1: this._point = 2; break;\n\t        case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t        case 3: this._point = 4; // proceed\n\t        default: point$1(this, x, y); break;\n\t      }\n\t      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t    }\n\t  };\n\t\n\t  var cardinalOpen = (function custom(tension) {\n\t\n\t    function cardinal(context) {\n\t      return new CardinalOpen(context, tension);\n\t    }\n\t\n\t    cardinal.tension = function(tension) {\n\t      return custom(+tension);\n\t    };\n\t\n\t    return cardinal;\n\t  })(0);\n\t\n\t  function point$2(that, x, y) {\n\t    var x1 = that._x1,\n\t        y1 = that._y1,\n\t        x2 = that._x2,\n\t        y2 = that._y2;\n\t\n\t    if (that._l01_a > epsilon$1) {\n\t      var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t          n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t      x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t      y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t    }\n\t\n\t    if (that._l23_a > epsilon$1) {\n\t      var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t          m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t      x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t      y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t    }\n\t\n\t    that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t  }\n\t\n\t  function CatmullRom(context, alpha) {\n\t    this._context = context;\n\t    this._alpha = alpha;\n\t  }\n\t\n\t  CatmullRom.prototype = {\n\t    areaStart: function() {\n\t      this._line = 0;\n\t    },\n\t    areaEnd: function() {\n\t      this._line = NaN;\n\t    },\n\t    lineStart: function() {\n\t      this._x0 = this._x1 = this._x2 =\n\t      this._y0 = this._y1 = this._y2 = NaN;\n\t      this._l01_a = this._l12_a = this._l23_a =\n\t      this._l01_2a = this._l12_2a = this._l23_2a =\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      switch (this._point) {\n\t        case 2: this._context.lineTo(this._x2, this._y2); break;\n\t        case 3: this.point(this, this._x2, this._y2); break;\n\t      }\n\t      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t      this._line = 1 - this._line;\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t\n\t      if (this._point) {\n\t        var x23 = this._x2 - x,\n\t            y23 = this._y2 - y;\n\t        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t      }\n\t\n\t      switch (this._point) {\n\t        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t        case 1: this._point = 2; break;\n\t        case 2: this._point = 3; // proceed\n\t        default: point$2(this, x, y); break;\n\t      }\n\t\n\t      this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t    }\n\t  };\n\t\n\t  var catmullRom = (function custom(alpha) {\n\t\n\t    function catmullRom(context) {\n\t      return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t    }\n\t\n\t    catmullRom.alpha = function(alpha) {\n\t      return custom(+alpha);\n\t    };\n\t\n\t    return catmullRom;\n\t  })(0.5);\n\t\n\t  function CatmullRomClosed(context, alpha) {\n\t    this._context = context;\n\t    this._alpha = alpha;\n\t  }\n\t\n\t  CatmullRomClosed.prototype = {\n\t    areaStart: noop,\n\t    areaEnd: noop,\n\t    lineStart: function() {\n\t      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t      this._l01_a = this._l12_a = this._l23_a =\n\t      this._l01_2a = this._l12_2a = this._l23_2a =\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      switch (this._point) {\n\t        case 1: {\n\t          this._context.moveTo(this._x3, this._y3);\n\t          this._context.closePath();\n\t          break;\n\t        }\n\t        case 2: {\n\t          this._context.lineTo(this._x3, this._y3);\n\t          this._context.closePath();\n\t          break;\n\t        }\n\t        case 3: {\n\t          this.point(this._x3, this._y3);\n\t          this.point(this._x4, this._y4);\n\t          this.point(this._x5, this._y5);\n\t          break;\n\t        }\n\t      }\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t\n\t      if (this._point) {\n\t        var x23 = this._x2 - x,\n\t            y23 = this._y2 - y;\n\t        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t      }\n\t\n\t      switch (this._point) {\n\t        case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t        case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t        case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t        default: point$2(this, x, y); break;\n\t      }\n\t\n\t      this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t    }\n\t  };\n\t\n\t  var catmullRomClosed = (function custom(alpha) {\n\t\n\t    function catmullRom(context) {\n\t      return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t    }\n\t\n\t    catmullRom.alpha = function(alpha) {\n\t      return custom(+alpha);\n\t    };\n\t\n\t    return catmullRom;\n\t  })(0.5);\n\t\n\t  function CatmullRomOpen(context, alpha) {\n\t    this._context = context;\n\t    this._alpha = alpha;\n\t  }\n\t\n\t  CatmullRomOpen.prototype = {\n\t    areaStart: function() {\n\t      this._line = 0;\n\t    },\n\t    areaEnd: function() {\n\t      this._line = NaN;\n\t    },\n\t    lineStart: function() {\n\t      this._x0 = this._x1 = this._x2 =\n\t      this._y0 = this._y1 = this._y2 = NaN;\n\t      this._l01_a = this._l12_a = this._l23_a =\n\t      this._l01_2a = this._l12_2a = this._l23_2a =\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t      this._line = 1 - this._line;\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t\n\t      if (this._point) {\n\t        var x23 = this._x2 - x,\n\t            y23 = this._y2 - y;\n\t        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t      }\n\t\n\t      switch (this._point) {\n\t        case 0: this._point = 1; break;\n\t        case 1: this._point = 2; break;\n\t        case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t        case 3: this._point = 4; // proceed\n\t        default: point$2(this, x, y); break;\n\t      }\n\t\n\t      this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t    }\n\t  };\n\t\n\t  var catmullRomOpen = (function custom(alpha) {\n\t\n\t    function catmullRom(context) {\n\t      return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t    }\n\t\n\t    catmullRom.alpha = function(alpha) {\n\t      return custom(+alpha);\n\t    };\n\t\n\t    return catmullRom;\n\t  })(0.5);\n\t\n\t  function LinearClosed(context) {\n\t    this._context = context;\n\t  }\n\t\n\t  LinearClosed.prototype = {\n\t    areaStart: noop,\n\t    areaEnd: noop,\n\t    lineStart: function() {\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      if (this._point) this._context.closePath();\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t      if (this._point) this._context.lineTo(x, y);\n\t      else this._point = 1, this._context.moveTo(x, y);\n\t    }\n\t  };\n\t\n\t  function linearClosed(context) {\n\t    return new LinearClosed(context);\n\t  }\n\t\n\t  function sign(x) {\n\t    return x < 0 ? -1 : 1;\n\t  }\n\t\n\t  // Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t  // the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t  // Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t  // NOV(II), P. 443, 1990.\n\t  function slope3(that, x2, y2) {\n\t    var h0 = that._x1 - that._x0,\n\t        h1 = x2 - that._x1,\n\t        s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t        s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t        p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t    return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t  }\n\t\n\t  // Calculate a one-sided slope.\n\t  function slope2(that, t) {\n\t    var h = that._x1 - that._x0;\n\t    return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t  }\n\t\n\t  // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t  // \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t  // with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\t  function point$3(that, t0, t1) {\n\t    var x0 = that._x0,\n\t        y0 = that._y0,\n\t        x1 = that._x1,\n\t        y1 = that._y1,\n\t        dx = (x1 - x0) / 3;\n\t    that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t  }\n\t\n\t  function MonotoneX(context) {\n\t    this._context = context;\n\t  }\n\t\n\t  MonotoneX.prototype = {\n\t    areaStart: function() {\n\t      this._line = 0;\n\t    },\n\t    areaEnd: function() {\n\t      this._line = NaN;\n\t    },\n\t    lineStart: function() {\n\t      this._x0 = this._x1 =\n\t      this._y0 = this._y1 =\n\t      this._t0 = NaN;\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      switch (this._point) {\n\t        case 2: this._context.lineTo(this._x1, this._y1); break;\n\t        case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n\t      }\n\t      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t      this._line = 1 - this._line;\n\t    },\n\t    point: function(x, y) {\n\t      var t1 = NaN;\n\t\n\t      x = +x, y = +y;\n\t      if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t      switch (this._point) {\n\t        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t        case 1: this._point = 2; break;\n\t        case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t        default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n\t      }\n\t\n\t      this._x0 = this._x1, this._x1 = x;\n\t      this._y0 = this._y1, this._y1 = y;\n\t      this._t0 = t1;\n\t    }\n\t  }\n\t\n\t  function MonotoneY(context) {\n\t    this._context = new ReflectContext(context);\n\t  }\n\t\n\t  (MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t    MonotoneX.prototype.point.call(this, y, x);\n\t  };\n\t\n\t  function ReflectContext(context) {\n\t    this._context = context;\n\t  }\n\t\n\t  ReflectContext.prototype = {\n\t    moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t    closePath: function() { this._context.closePath(); },\n\t    lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t    bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t  };\n\t\n\t  function monotoneX(context) {\n\t    return new MonotoneX(context);\n\t  }\n\t\n\t  function monotoneY(context) {\n\t    return new MonotoneY(context);\n\t  }\n\t\n\t  function Natural(context) {\n\t    this._context = context;\n\t  }\n\t\n\t  Natural.prototype = {\n\t    areaStart: function() {\n\t      this._line = 0;\n\t    },\n\t    areaEnd: function() {\n\t      this._line = NaN;\n\t    },\n\t    lineStart: function() {\n\t      this._x = [];\n\t      this._y = [];\n\t    },\n\t    lineEnd: function() {\n\t      var x = this._x,\n\t          y = this._y,\n\t          n = x.length;\n\t\n\t      if (n) {\n\t        this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t        if (n === 2) {\n\t          this._context.lineTo(x[1], y[1]);\n\t        } else {\n\t          var px = controlPoints(x),\n\t              py = controlPoints(y);\n\t          for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t            this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t          }\n\t        }\n\t      }\n\t\n\t      if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t      this._line = 1 - this._line;\n\t      this._x = this._y = null;\n\t    },\n\t    point: function(x, y) {\n\t      this._x.push(+x);\n\t      this._y.push(+y);\n\t    }\n\t  };\n\t\n\t  // See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\t  function controlPoints(x) {\n\t    var i,\n\t        n = x.length - 1,\n\t        m,\n\t        a = new Array(n),\n\t        b = new Array(n),\n\t        r = new Array(n);\n\t    a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t    for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t    a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t    for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t    a[n - 1] = r[n - 1] / b[n - 1];\n\t    for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t    b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t    for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t    return [a, b];\n\t  }\n\t\n\t  function natural(context) {\n\t    return new Natural(context);\n\t  }\n\t\n\t  function Step(context, t) {\n\t    this._context = context;\n\t    this._t = t;\n\t  }\n\t\n\t  Step.prototype = {\n\t    areaStart: function() {\n\t      this._line = 0;\n\t    },\n\t    areaEnd: function() {\n\t      this._line = NaN;\n\t    },\n\t    lineStart: function() {\n\t      this._x = this._y = NaN;\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t      if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t      switch (this._point) {\n\t        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t        case 1: this._point = 2; // proceed\n\t        default: {\n\t          if (this._t <= 0) {\n\t            this._context.lineTo(this._x, y);\n\t            this._context.lineTo(x, y);\n\t          } else {\n\t            var x1 = this._x * (1 - this._t) + x * this._t;\n\t            this._context.lineTo(x1, this._y);\n\t            this._context.lineTo(x1, y);\n\t          }\n\t          break;\n\t        }\n\t      }\n\t      this._x = x, this._y = y;\n\t    }\n\t  };\n\t\n\t  function step(context) {\n\t    return new Step(context, 0.5);\n\t  }\n\t\n\t  function stepBefore(context) {\n\t    return new Step(context, 0);\n\t  }\n\t\n\t  function stepAfter(context) {\n\t    return new Step(context, 1);\n\t  }\n\t\n\t  var slice$2 = Array.prototype.slice;\n\t\n\t  function none(series, order) {\n\t    if (!((n = series.length) > 1)) return;\n\t    for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t      s0 = s1, s1 = series[order[i]];\n\t      for (var j = 0; j < m; ++j) {\n\t        s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t      }\n\t    }\n\t  }\n\t\n\t  function none$1(series) {\n\t    var n = series.length, o = new Array(n);\n\t    while (--n >= 0) o[n] = n;\n\t    return o;\n\t  }\n\t\n\t  function stackValue(d, key) {\n\t    return d[key];\n\t  }\n\t\n\t  function stack() {\n\t    var keys = constant$1([]),\n\t        order = none$1,\n\t        offset = none,\n\t        value = stackValue;\n\t\n\t    function stack(data) {\n\t      var kz = keys.apply(this, arguments),\n\t          i,\n\t          m = data.length,\n\t          n = kz.length,\n\t          sz = new Array(n),\n\t          oz;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t          si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t          sij.data = data[j];\n\t        }\n\t        si.key = ki;\n\t      }\n\t\n\t      for (i = 0, oz = order(sz); i < n; ++i) {\n\t        sz[oz[i]].index = i;\n\t      }\n\t\n\t      offset(sz, oz);\n\t      return sz;\n\t    }\n\t\n\t    stack.keys = function(_) {\n\t      return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$1(slice$2.call(_)), stack) : keys;\n\t    };\n\t\n\t    stack.value = function(_) {\n\t      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(+_), stack) : value;\n\t    };\n\t\n\t    stack.order = function(_) {\n\t      return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$1(slice$2.call(_)), stack) : order;\n\t    };\n\t\n\t    stack.offset = function(_) {\n\t      return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n\t    };\n\t\n\t    return stack;\n\t  }\n\t\n\t  function expand(series, order) {\n\t    if (!((n = series.length) > 0)) return;\n\t    for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t      for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t      if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t    }\n\t    none(series, order);\n\t  }\n\t\n\t  function silhouette(series, order) {\n\t    if (!((n = series.length) > 0)) return;\n\t    for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t      for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t      s0[j][1] += s0[j][0] = -y / 2;\n\t    }\n\t    none(series, order);\n\t  }\n\t\n\t  function wiggle(series, order) {\n\t    if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t    for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t      for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t        var si = series[order[i]],\n\t            sij0 = si[j][1] || 0,\n\t            sij1 = si[j - 1][1] || 0,\n\t            s3 = (sij0 - sij1) / 2;\n\t        for (var k = 0; k < i; ++k) {\n\t          var sk = series[order[k]],\n\t              skj0 = sk[j][1] || 0,\n\t              skj1 = sk[j - 1][1] || 0;\n\t          s3 += skj0 - skj1;\n\t        }\n\t        s1 += sij0, s2 += s3 * sij0;\n\t      }\n\t      s0[j - 1][1] += s0[j - 1][0] = y;\n\t      if (s1) y -= s2 / s1;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    none(series, order);\n\t  }\n\t\n\t  function ascending$1(series) {\n\t    var sums = series.map(sum$1);\n\t    return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t  }\n\t\n\t  function sum$1(series) {\n\t    var s = 0, i = -1, n = series.length, v;\n\t    while (++i < n) if (v = +series[i][1]) s += v;\n\t    return s;\n\t  }\n\t\n\t  function descending$2(series) {\n\t    return ascending$1(series).reverse();\n\t  }\n\t\n\t  function insideOut(series) {\n\t    var n = series.length,\n\t        i,\n\t        j,\n\t        sums = series.map(sum$1),\n\t        order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t        top = 0,\n\t        bottom = 0,\n\t        tops = [],\n\t        bottoms = [];\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      j = order[i];\n\t      if (top < bottom) {\n\t        top += sums[j];\n\t        tops.push(j);\n\t      } else {\n\t        bottom += sums[j];\n\t        bottoms.push(j);\n\t      }\n\t    }\n\t\n\t    return bottoms.reverse().concat(tops);\n\t  }\n\t\n\t  function reverse(series) {\n\t    return none$1(series).reverse();\n\t  }\n\t\n\t  function define(constructor, factory, prototype) {\n\t    constructor.prototype = factory.prototype = prototype;\n\t    prototype.constructor = constructor;\n\t  }\n\t\n\t  function extend(parent, definition) {\n\t    var prototype = Object.create(parent.prototype);\n\t    for (var key in definition) prototype[key] = definition[key];\n\t    return prototype;\n\t  }\n\t\n\t  function Color() {}\n\t\n\t  var darker = 0.7;\n\t  var brighter = 1 / darker;\n\t\n\t  var reHex3 = /^#([0-9a-f]{3})$/;\n\t  var reHex6 = /^#([0-9a-f]{6})$/;\n\t  var reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n\t  var reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\t  var reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\t  var reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\t  var reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\t  var reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\t  var named = {\n\t    aliceblue: 0xf0f8ff,\n\t    antiquewhite: 0xfaebd7,\n\t    aqua: 0x00ffff,\n\t    aquamarine: 0x7fffd4,\n\t    azure: 0xf0ffff,\n\t    beige: 0xf5f5dc,\n\t    bisque: 0xffe4c4,\n\t    black: 0x000000,\n\t    blanchedalmond: 0xffebcd,\n\t    blue: 0x0000ff,\n\t    blueviolet: 0x8a2be2,\n\t    brown: 0xa52a2a,\n\t    burlywood: 0xdeb887,\n\t    cadetblue: 0x5f9ea0,\n\t    chartreuse: 0x7fff00,\n\t    chocolate: 0xd2691e,\n\t    coral: 0xff7f50,\n\t    cornflowerblue: 0x6495ed,\n\t    cornsilk: 0xfff8dc,\n\t    crimson: 0xdc143c,\n\t    cyan: 0x00ffff,\n\t    darkblue: 0x00008b,\n\t    darkcyan: 0x008b8b,\n\t    darkgoldenrod: 0xb8860b,\n\t    darkgray: 0xa9a9a9,\n\t    darkgreen: 0x006400,\n\t    darkgrey: 0xa9a9a9,\n\t    darkkhaki: 0xbdb76b,\n\t    darkmagenta: 0x8b008b,\n\t    darkolivegreen: 0x556b2f,\n\t    darkorange: 0xff8c00,\n\t    darkorchid: 0x9932cc,\n\t    darkred: 0x8b0000,\n\t    darksalmon: 0xe9967a,\n\t    darkseagreen: 0x8fbc8f,\n\t    darkslateblue: 0x483d8b,\n\t    darkslategray: 0x2f4f4f,\n\t    darkslategrey: 0x2f4f4f,\n\t    darkturquoise: 0x00ced1,\n\t    darkviolet: 0x9400d3,\n\t    deeppink: 0xff1493,\n\t    deepskyblue: 0x00bfff,\n\t    dimgray: 0x696969,\n\t    dimgrey: 0x696969,\n\t    dodgerblue: 0x1e90ff,\n\t    firebrick: 0xb22222,\n\t    floralwhite: 0xfffaf0,\n\t    forestgreen: 0x228b22,\n\t    fuchsia: 0xff00ff,\n\t    gainsboro: 0xdcdcdc,\n\t    ghostwhite: 0xf8f8ff,\n\t    gold: 0xffd700,\n\t    goldenrod: 0xdaa520,\n\t    gray: 0x808080,\n\t    green: 0x008000,\n\t    greenyellow: 0xadff2f,\n\t    grey: 0x808080,\n\t    honeydew: 0xf0fff0,\n\t    hotpink: 0xff69b4,\n\t    indianred: 0xcd5c5c,\n\t    indigo: 0x4b0082,\n\t    ivory: 0xfffff0,\n\t    khaki: 0xf0e68c,\n\t    lavender: 0xe6e6fa,\n\t    lavenderblush: 0xfff0f5,\n\t    lawngreen: 0x7cfc00,\n\t    lemonchiffon: 0xfffacd,\n\t    lightblue: 0xadd8e6,\n\t    lightcoral: 0xf08080,\n\t    lightcyan: 0xe0ffff,\n\t    lightgoldenrodyellow: 0xfafad2,\n\t    lightgray: 0xd3d3d3,\n\t    lightgreen: 0x90ee90,\n\t    lightgrey: 0xd3d3d3,\n\t    lightpink: 0xffb6c1,\n\t    lightsalmon: 0xffa07a,\n\t    lightseagreen: 0x20b2aa,\n\t    lightskyblue: 0x87cefa,\n\t    lightslategray: 0x778899,\n\t    lightslategrey: 0x778899,\n\t    lightsteelblue: 0xb0c4de,\n\t    lightyellow: 0xffffe0,\n\t    lime: 0x00ff00,\n\t    limegreen: 0x32cd32,\n\t    linen: 0xfaf0e6,\n\t    magenta: 0xff00ff,\n\t    maroon: 0x800000,\n\t    mediumaquamarine: 0x66cdaa,\n\t    mediumblue: 0x0000cd,\n\t    mediumorchid: 0xba55d3,\n\t    mediumpurple: 0x9370db,\n\t    mediumseagreen: 0x3cb371,\n\t    mediumslateblue: 0x7b68ee,\n\t    mediumspringgreen: 0x00fa9a,\n\t    mediumturquoise: 0x48d1cc,\n\t    mediumvioletred: 0xc71585,\n\t    midnightblue: 0x191970,\n\t    mintcream: 0xf5fffa,\n\t    mistyrose: 0xffe4e1,\n\t    moccasin: 0xffe4b5,\n\t    navajowhite: 0xffdead,\n\t    navy: 0x000080,\n\t    oldlace: 0xfdf5e6,\n\t    olive: 0x808000,\n\t    olivedrab: 0x6b8e23,\n\t    orange: 0xffa500,\n\t    orangered: 0xff4500,\n\t    orchid: 0xda70d6,\n\t    palegoldenrod: 0xeee8aa,\n\t    palegreen: 0x98fb98,\n\t    paleturquoise: 0xafeeee,\n\t    palevioletred: 0xdb7093,\n\t    papayawhip: 0xffefd5,\n\t    peachpuff: 0xffdab9,\n\t    peru: 0xcd853f,\n\t    pink: 0xffc0cb,\n\t    plum: 0xdda0dd,\n\t    powderblue: 0xb0e0e6,\n\t    purple: 0x800080,\n\t    rebeccapurple: 0x663399,\n\t    red: 0xff0000,\n\t    rosybrown: 0xbc8f8f,\n\t    royalblue: 0x4169e1,\n\t    saddlebrown: 0x8b4513,\n\t    salmon: 0xfa8072,\n\t    sandybrown: 0xf4a460,\n\t    seagreen: 0x2e8b57,\n\t    seashell: 0xfff5ee,\n\t    sienna: 0xa0522d,\n\t    silver: 0xc0c0c0,\n\t    skyblue: 0x87ceeb,\n\t    slateblue: 0x6a5acd,\n\t    slategray: 0x708090,\n\t    slategrey: 0x708090,\n\t    snow: 0xfffafa,\n\t    springgreen: 0x00ff7f,\n\t    steelblue: 0x4682b4,\n\t    tan: 0xd2b48c,\n\t    teal: 0x008080,\n\t    thistle: 0xd8bfd8,\n\t    tomato: 0xff6347,\n\t    turquoise: 0x40e0d0,\n\t    violet: 0xee82ee,\n\t    wheat: 0xf5deb3,\n\t    white: 0xffffff,\n\t    whitesmoke: 0xf5f5f5,\n\t    yellow: 0xffff00,\n\t    yellowgreen: 0x9acd32\n\t  };\n\t\n\t  define(Color, color, {\n\t    displayable: function() {\n\t      return this.rgb().displayable();\n\t    },\n\t    toString: function() {\n\t      return this.rgb() + \"\";\n\t    }\n\t  });\n\t\n\t  function color(format) {\n\t    var m;\n\t    format = (format + \"\").trim().toLowerCase();\n\t    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t        : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t        : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t        : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t        : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t        : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t        : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t        : named.hasOwnProperty(format) ? rgbn(named[format])\n\t        : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t        : null;\n\t  }\n\t\n\t  function rgbn(n) {\n\t    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t  }\n\t\n\t  function rgba(r, g, b, a) {\n\t    if (a <= 0) r = g = b = NaN;\n\t    return new Rgb(r, g, b, a);\n\t  }\n\t\n\t  function rgbConvert(o) {\n\t    if (!(o instanceof Color)) o = color(o);\n\t    if (!o) return new Rgb;\n\t    o = o.rgb();\n\t    return new Rgb(o.r, o.g, o.b, o.opacity);\n\t  }\n\t\n\t  function colorRgb(r, g, b, opacity) {\n\t    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t  }\n\t\n\t  function Rgb(r, g, b, opacity) {\n\t    this.r = +r;\n\t    this.g = +g;\n\t    this.b = +b;\n\t    this.opacity = +opacity;\n\t  }\n\t\n\t  define(Rgb, colorRgb, extend(Color, {\n\t    brighter: function(k) {\n\t      k = k == null ? brighter : Math.pow(brighter, k);\n\t      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t    },\n\t    darker: function(k) {\n\t      k = k == null ? darker : Math.pow(darker, k);\n\t      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t    },\n\t    rgb: function() {\n\t      return this;\n\t    },\n\t    displayable: function() {\n\t      return (0 <= this.r && this.r <= 255)\n\t          && (0 <= this.g && this.g <= 255)\n\t          && (0 <= this.b && this.b <= 255)\n\t          && (0 <= this.opacity && this.opacity <= 1);\n\t    },\n\t    toString: function() {\n\t      var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t      return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t          + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t          + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t          + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t          + (a === 1 ? \")\" : \", \" + a + \")\");\n\t    }\n\t  }));\n\t\n\t  function hsla(h, s, l, a) {\n\t    if (a <= 0) h = s = l = NaN;\n\t    else if (l <= 0 || l >= 1) h = s = NaN;\n\t    else if (s <= 0) h = NaN;\n\t    return new Hsl(h, s, l, a);\n\t  }\n\t\n\t  function hslConvert(o) {\n\t    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t    if (!(o instanceof Color)) o = color(o);\n\t    if (!o) return new Hsl;\n\t    if (o instanceof Hsl) return o;\n\t    o = o.rgb();\n\t    var r = o.r / 255,\n\t        g = o.g / 255,\n\t        b = o.b / 255,\n\t        min = Math.min(r, g, b),\n\t        max = Math.max(r, g, b),\n\t        h = NaN,\n\t        s = max - min,\n\t        l = (max + min) / 2;\n\t    if (s) {\n\t      if (r === max) h = (g - b) / s + (g < b) * 6;\n\t      else if (g === max) h = (b - r) / s + 2;\n\t      else h = (r - g) / s + 4;\n\t      s /= l < 0.5 ? max + min : 2 - max - min;\n\t      h *= 60;\n\t    } else {\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new Hsl(h, s, l, o.opacity);\n\t  }\n\t\n\t  function colorHsl(h, s, l, opacity) {\n\t    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t  }\n\t\n\t  function Hsl(h, s, l, opacity) {\n\t    this.h = +h;\n\t    this.s = +s;\n\t    this.l = +l;\n\t    this.opacity = +opacity;\n\t  }\n\t\n\t  define(Hsl, colorHsl, extend(Color, {\n\t    brighter: function(k) {\n\t      k = k == null ? brighter : Math.pow(brighter, k);\n\t      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t    },\n\t    darker: function(k) {\n\t      k = k == null ? darker : Math.pow(darker, k);\n\t      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t    },\n\t    rgb: function() {\n\t      var h = this.h % 360 + (this.h < 0) * 360,\n\t          s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t          l = this.l,\n\t          m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t          m1 = 2 * l - m2;\n\t      return new Rgb(\n\t        hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t        hsl2rgb(h, m1, m2),\n\t        hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t        this.opacity\n\t      );\n\t    },\n\t    displayable: function() {\n\t      return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t          && (0 <= this.l && this.l <= 1)\n\t          && (0 <= this.opacity && this.opacity <= 1);\n\t    }\n\t  }));\n\t\n\t  /* From FvD 13.37, CSS Color Module Level 3 */\n\t  function hsl2rgb(h, m1, m2) {\n\t    return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t        : h < 180 ? m2\n\t        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t        : m1) * 255;\n\t  }\n\t\n\t  var deg2rad = Math.PI / 180;\n\t  var rad2deg = 180 / Math.PI;\n\t\n\t  var Kn = 18;\n\t  var Xn = 0.950470;\n\t  var Yn = 1;\n\t  var Zn = 1.088830;\n\t  var t0 = 4 / 29;\n\t  var t1 = 6 / 29;\n\t  var t2 = 3 * t1 * t1;\n\t  var t3 = t1 * t1 * t1;\n\t  function labConvert(o) {\n\t    if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t    if (o instanceof Hcl) {\n\t      var h = o.h * deg2rad;\n\t      return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t    }\n\t    if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t    var b = rgb2xyz(o.r),\n\t        a = rgb2xyz(o.g),\n\t        l = rgb2xyz(o.b),\n\t        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t    return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t  }\n\t\n\t  function lab(l, a, b, opacity) {\n\t    return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t  }\n\t\n\t  function Lab(l, a, b, opacity) {\n\t    this.l = +l;\n\t    this.a = +a;\n\t    this.b = +b;\n\t    this.opacity = +opacity;\n\t  }\n\t\n\t  define(Lab, lab, extend(Color, {\n\t    brighter: function(k) {\n\t      return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t    },\n\t    darker: function(k) {\n\t      return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t    },\n\t    rgb: function() {\n\t      var y = (this.l + 16) / 116,\n\t          x = isNaN(this.a) ? y : y + this.a / 500,\n\t          z = isNaN(this.b) ? y : y - this.b / 200;\n\t      y = Yn * lab2xyz(y);\n\t      x = Xn * lab2xyz(x);\n\t      z = Zn * lab2xyz(z);\n\t      return new Rgb(\n\t        xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t        xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t        this.opacity\n\t      );\n\t    }\n\t  }));\n\t\n\t  function xyz2lab(t) {\n\t    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t  }\n\t\n\t  function lab2xyz(t) {\n\t    return t > t1 ? t * t * t : t2 * (t - t0);\n\t  }\n\t\n\t  function xyz2rgb(x) {\n\t    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t  }\n\t\n\t  function rgb2xyz(x) {\n\t    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t  }\n\t\n\t  function hclConvert(o) {\n\t    if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t    if (!(o instanceof Lab)) o = labConvert(o);\n\t    var h = Math.atan2(o.b, o.a) * rad2deg;\n\t    return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t  }\n\t\n\t  function colorHcl(h, c, l, opacity) {\n\t    return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t  }\n\t\n\t  function Hcl(h, c, l, opacity) {\n\t    this.h = +h;\n\t    this.c = +c;\n\t    this.l = +l;\n\t    this.opacity = +opacity;\n\t  }\n\t\n\t  define(Hcl, colorHcl, extend(Color, {\n\t    brighter: function(k) {\n\t      return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t    },\n\t    darker: function(k) {\n\t      return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t    },\n\t    rgb: function() {\n\t      return labConvert(this).rgb();\n\t    }\n\t  }));\n\t\n\t  var A = -0.14861;\n\t  var B = +1.78277;\n\t  var C = -0.29227;\n\t  var D = -0.90649;\n\t  var E = +1.97294;\n\t  var ED = E * D;\n\t  var EB = E * B;\n\t  var BC_DA = B * C - D * A;\n\t  function cubehelixConvert(o) {\n\t    if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t    if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t    var r = o.r / 255,\n\t        g = o.g / 255,\n\t        b = o.b / 255,\n\t        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t        bl = b - l,\n\t        k = (E * (g - l) - C * bl) / D,\n\t        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t    return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t  }\n\t\n\t  function cubehelix(h, s, l, opacity) {\n\t    return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t  }\n\t\n\t  function Cubehelix(h, s, l, opacity) {\n\t    this.h = +h;\n\t    this.s = +s;\n\t    this.l = +l;\n\t    this.opacity = +opacity;\n\t  }\n\t\n\t  define(Cubehelix, cubehelix, extend(Color, {\n\t    brighter: function(k) {\n\t      k = k == null ? brighter : Math.pow(brighter, k);\n\t      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t    },\n\t    darker: function(k) {\n\t      k = k == null ? darker : Math.pow(darker, k);\n\t      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t    },\n\t    rgb: function() {\n\t      var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t          l = +this.l,\n\t          a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t          cosh = Math.cos(h),\n\t          sinh = Math.sin(h);\n\t      return new Rgb(\n\t        255 * (l + a * (A * cosh + B * sinh)),\n\t        255 * (l + a * (C * cosh + D * sinh)),\n\t        255 * (l + a * (E * cosh)),\n\t        this.opacity\n\t      );\n\t    }\n\t  }));\n\t\n\t  function basis$1(t1, v0, v1, v2, v3) {\n\t    var t2 = t1 * t1, t3 = t2 * t1;\n\t    return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t        + (4 - 6 * t2 + 3 * t3) * v1\n\t        + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t        + t3 * v3) / 6;\n\t  }\n\t\n\t  function basis$2(values) {\n\t    var n = values.length - 1;\n\t    return function(t) {\n\t      var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t          v1 = values[i],\n\t          v2 = values[i + 1],\n\t          v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t          v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t      return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t    };\n\t  }\n\t\n\t  function basisClosed$1(values) {\n\t    var n = values.length;\n\t    return function(t) {\n\t      var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t          v0 = values[(i + n - 1) % n],\n\t          v1 = values[i % n],\n\t          v2 = values[(i + 1) % n],\n\t          v3 = values[(i + 2) % n];\n\t      return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t    };\n\t  }\n\t\n\t  function constant$2(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function linear$1(a, d) {\n\t    return function(t) {\n\t      return a + t * d;\n\t    };\n\t  }\n\t\n\t  function exponential$1(a, b, y) {\n\t    return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t      return Math.pow(a + t * b, y);\n\t    };\n\t  }\n\t\n\t  function hue(a, b) {\n\t    var d = b - a;\n\t    return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$2(isNaN(a) ? b : a);\n\t  }\n\t\n\t  function gamma(y) {\n\t    return (y = +y) === 1 ? nogamma : function(a, b) {\n\t      return b - a ? exponential$1(a, b, y) : constant$2(isNaN(a) ? b : a);\n\t    };\n\t  }\n\t\n\t  function nogamma(a, b) {\n\t    var d = b - a;\n\t    return d ? linear$1(a, d) : constant$2(isNaN(a) ? b : a);\n\t  }\n\t\n\t  var interpolateRgb = (function rgbGamma(y) {\n\t    var color = gamma(y);\n\t\n\t    function rgb(start, end) {\n\t      var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n\t          g = color(start.g, end.g),\n\t          b = color(start.b, end.b),\n\t          opacity = color(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.r = r(t);\n\t        start.g = g(t);\n\t        start.b = b(t);\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    rgb.gamma = rgbGamma;\n\t\n\t    return rgb;\n\t  })(1);\n\t\n\t  function rgbSpline(spline) {\n\t    return function(colors) {\n\t      var n = colors.length,\n\t          r = new Array(n),\n\t          g = new Array(n),\n\t          b = new Array(n),\n\t          i, color;\n\t      for (i = 0; i < n; ++i) {\n\t        color = colorRgb(colors[i]);\n\t        r[i] = color.r || 0;\n\t        g[i] = color.g || 0;\n\t        b[i] = color.b || 0;\n\t      }\n\t      r = spline(r);\n\t      g = spline(g);\n\t      b = spline(b);\n\t      color.opacity = 1;\n\t      return function(t) {\n\t        color.r = r(t);\n\t        color.g = g(t);\n\t        color.b = b(t);\n\t        return color + \"\";\n\t      };\n\t    };\n\t  }\n\t\n\t  var rgbBasis = rgbSpline(basis$2);\n\t  var rgbBasisClosed = rgbSpline(basisClosed$1);\n\t\n\t  function array$1(a, b) {\n\t    var nb = b ? b.length : 0,\n\t        na = a ? Math.min(nb, a.length) : 0,\n\t        x = new Array(nb),\n\t        c = new Array(nb),\n\t        i;\n\t\n\t    for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n\t    for (; i < nb; ++i) c[i] = b[i];\n\t\n\t    return function(t) {\n\t      for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t\n\t  function date(a, b) {\n\t    var d = new Date;\n\t    return a = +a, b -= a, function(t) {\n\t      return d.setTime(a + b * t), d;\n\t    };\n\t  }\n\t\n\t  function interpolateNumber(a, b) {\n\t    return a = +a, b -= a, function(t) {\n\t      return a + b * t;\n\t    };\n\t  }\n\t\n\t  function object(a, b) {\n\t    var i = {},\n\t        c = {},\n\t        k;\n\t\n\t    if (a === null || typeof a !== \"object\") a = {};\n\t    if (b === null || typeof b !== \"object\") b = {};\n\t\n\t    for (k in b) {\n\t      if (k in a) {\n\t        i[k] = interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t\n\t  var reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\t  var reB = new RegExp(reA.source, \"g\");\n\t  function zero(b) {\n\t    return function() {\n\t      return b;\n\t    };\n\t  }\n\t\n\t  function one(b) {\n\t    return function(t) {\n\t      return b(t) + \"\";\n\t    };\n\t  }\n\t\n\t  function interpolateString(a, b) {\n\t    var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t        am, // current match in a\n\t        bm, // current match in b\n\t        bs, // string preceding current number in b, if any\n\t        i = -1, // index in s\n\t        s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t\n\t    // Coerce inputs to strings.\n\t    a = a + \"\", b = b + \"\";\n\t\n\t    // Interpolate pairs of numbers in a & b.\n\t    while ((am = reA.exec(a))\n\t        && (bm = reB.exec(b))) {\n\t      if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; // coalesce with previous string\n\t        else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t        if (s[i]) s[i] += bm; // coalesce with previous string\n\t        else s[++i] = bm;\n\t      } else { // interpolate non-matching numbers\n\t        s[++i] = null;\n\t        q.push({i: i, x: interpolateNumber(am, bm)});\n\t      }\n\t      bi = reB.lastIndex;\n\t    }\n\t\n\t    // Add remains of b.\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t\n\t    // Special optimization for only a single match.\n\t    // Otherwise, interpolate each of the numbers and rejoin the string.\n\t    return s.length < 2 ? (q[0]\n\t        ? one(q[0].x)\n\t        : zero(b))\n\t        : (b = q.length, function(t) {\n\t            for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t            return s.join(\"\");\n\t          });\n\t  }\n\t\n\t  function interpolate(a, b) {\n\t    var t = typeof b, c;\n\t    return b == null || t === \"boolean\" ? constant$2(b)\n\t        : (t === \"number\" ? interpolateNumber\n\t        : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t        : b instanceof color ? interpolateRgb\n\t        : b instanceof Date ? date\n\t        : Array.isArray(b) ? array$1\n\t        : isNaN(b) ? object\n\t        : interpolateNumber)(a, b);\n\t  }\n\t\n\t  function interpolateRound(a, b) {\n\t    return a = +a, b -= a, function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t\n\t  var degrees = 180 / Math.PI;\n\t\n\t  var identity$2 = {\n\t    translateX: 0,\n\t    translateY: 0,\n\t    rotate: 0,\n\t    skewX: 0,\n\t    scaleX: 1,\n\t    scaleY: 1\n\t  };\n\t\n\t  function decompose(a, b, c, d, e, f) {\n\t    var scaleX, scaleY, skewX;\n\t    if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t    if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t    if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t    if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t    return {\n\t      translateX: e,\n\t      translateY: f,\n\t      rotate: Math.atan2(b, a) * degrees,\n\t      skewX: Math.atan(skewX) * degrees,\n\t      scaleX: scaleX,\n\t      scaleY: scaleY\n\t    };\n\t  }\n\t\n\t  var cssNode;\n\t  var cssRoot;\n\t  var cssView;\n\t  var svgNode;\n\t  function parseCss(value) {\n\t    if (value === \"none\") return identity$2;\n\t    if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t    cssNode.style.transform = value;\n\t    value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t    cssRoot.removeChild(cssNode);\n\t    value = value.slice(7, -1).split(\",\");\n\t    return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t  }\n\t\n\t  function parseSvg(value) {\n\t    if (value == null) return identity$2;\n\t    if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t    svgNode.setAttribute(\"transform\", value);\n\t    if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t    value = value.matrix;\n\t    return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t  }\n\t\n\t  function interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t    function pop(s) {\n\t      return s.length ? s.pop() + \" \" : \"\";\n\t    }\n\t\n\t    function translate(xa, ya, xb, yb, s, q) {\n\t      if (xa !== xb || ya !== yb) {\n\t        var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t        q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t      } else if (xb || yb) {\n\t        s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t      }\n\t    }\n\t\n\t    function rotate(a, b, s, q) {\n\t      if (a !== b) {\n\t        if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t        q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t      } else if (b) {\n\t        s.push(pop(s) + \"rotate(\" + b + degParen);\n\t      }\n\t    }\n\t\n\t    function skewX(a, b, s, q) {\n\t      if (a !== b) {\n\t        q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t      } else if (b) {\n\t        s.push(pop(s) + \"skewX(\" + b + degParen);\n\t      }\n\t    }\n\t\n\t    function scale(xa, ya, xb, yb, s, q) {\n\t      if (xa !== xb || ya !== yb) {\n\t        var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t        q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t      } else if (xb !== 1 || yb !== 1) {\n\t        s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t      }\n\t    }\n\t\n\t    return function(a, b) {\n\t      var s = [], // string constants and placeholders\n\t          q = []; // number interpolators\n\t      a = parse(a), b = parse(b);\n\t      translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t      rotate(a.rotate, b.rotate, s, q);\n\t      skewX(a.skewX, b.skewX, s, q);\n\t      scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t      a = b = null; // gc\n\t      return function(t) {\n\t        var i = -1, n = q.length, o;\n\t        while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t        return s.join(\"\");\n\t      };\n\t    };\n\t  }\n\t\n\t  var interpolateTransform$1 = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\t  var interpolateTransform$2 = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\t  var rho = Math.SQRT2;\n\t  var rho2 = 2;\n\t  var rho4 = 4;\n\t  var epsilon2 = 1e-12;\n\t  function cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t\n\t  function sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t\n\t  function tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t\n\t  // p0 = [ux0, uy0, w0]\n\t  // p1 = [ux1, uy1, w1]\n\t  function interpolateZoom(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t        dx = ux1 - ux0,\n\t        dy = uy1 - uy0,\n\t        d2 = dx * dx + dy * dy,\n\t        i,\n\t        S;\n\t\n\t    // Special case for u0 ≅ u1.\n\t    if (d2 < epsilon2) {\n\t      S = Math.log(w1 / w0) / rho;\n\t      i = function(t) {\n\t        return [\n\t          ux0 + t * dx,\n\t          uy0 + t * dy,\n\t          w0 * Math.exp(rho * t * S)\n\t        ];\n\t      }\n\t    }\n\t\n\t    // General case.\n\t    else {\n\t      var d1 = Math.sqrt(d2),\n\t          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / rho;\n\t      i = function(t) {\n\t        var s = t * S,\n\t            coshr0 = cosh(r0),\n\t            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t        return [\n\t          ux0 + u * dx,\n\t          uy0 + u * dy,\n\t          w0 * coshr0 / cosh(rho * s + r0)\n\t        ];\n\t      }\n\t    }\n\t\n\t    i.duration = S * 1000;\n\t\n\t    return i;\n\t  }\n\t\n\t  function hsl(hue) {\n\t    return function(start, end) {\n\t      var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(t);\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t  }\n\t\n\t  var hsl$1 = hsl(hue);\n\t  var hslLong = hsl(nogamma);\n\t\n\t  function lab$1(start, end) {\n\t    var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t        a = nogamma(start.a, end.a),\n\t        b = nogamma(start.b, end.b),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.l = l(t);\n\t      start.a = a(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  function hcl(hue) {\n\t    return function(start, end) {\n\t      var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n\t          c = nogamma(start.c, end.c),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.c = c(t);\n\t        start.l = l(t);\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t  }\n\t\n\t  var hcl$1 = hcl(hue);\n\t  var hclLong = hcl(nogamma);\n\t\n\t  function cubehelix$1(hue) {\n\t    return (function cubehelixGamma(y) {\n\t      y = +y;\n\t\n\t      function cubehelix$$(start, end) {\n\t        var h = hue((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t            s = nogamma(start.s, end.s),\n\t            l = nogamma(start.l, end.l),\n\t            opacity = nogamma(start.opacity, end.opacity);\n\t        return function(t) {\n\t          start.h = h(t);\n\t          start.s = s(t);\n\t          start.l = l(Math.pow(t, y));\n\t          start.opacity = opacity(t);\n\t          return start + \"\";\n\t        };\n\t      }\n\t\n\t      cubehelix$$.gamma = cubehelixGamma;\n\t\n\t      return cubehelix$$;\n\t    })(1);\n\t  }\n\t\n\t  var cubehelix$2 = cubehelix$1(hue);\n\t  var interpolateCubehelixLong = cubehelix$1(nogamma);\n\t\n\t  function quantize(interpolator, n) {\n\t    var samples = new Array(n);\n\t    for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t    return samples;\n\t  }\n\t\n\t  var noop$1 = {value: function() {}};\n\t\n\t  function dispatch() {\n\t    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t      if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t      _[t] = [];\n\t    }\n\t    return new Dispatch(_);\n\t  }\n\t\n\t  function Dispatch(_) {\n\t    this._ = _;\n\t  }\n\t\n\t  function parseTypenames(typenames, types) {\n\t    return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t      var name = \"\", i = t.indexOf(\".\");\n\t      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t      if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t      return {type: t, name: name};\n\t    });\n\t  }\n\t\n\t  Dispatch.prototype = dispatch.prototype = {\n\t    constructor: Dispatch,\n\t    on: function(typename, callback) {\n\t      var _ = this._,\n\t          T = parseTypenames(typename + \"\", _),\n\t          t,\n\t          i = -1,\n\t          n = T.length;\n\t\n\t      // If no callback was specified, return the callback of the given type and name.\n\t      if (arguments.length < 2) {\n\t        while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t        return;\n\t      }\n\t\n\t      // If a type was specified, set the callback for the given type and name.\n\t      // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t      if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      while (++i < n) {\n\t        if (t = (typename = T[i]).type) _[t] = set$1(_[t], typename.name, callback);\n\t        else if (callback == null) for (t in _) _[t] = set$1(_[t], typename.name, null);\n\t      }\n\t\n\t      return this;\n\t    },\n\t    copy: function() {\n\t      var copy = {}, _ = this._;\n\t      for (var t in _) copy[t] = _[t].slice();\n\t      return new Dispatch(copy);\n\t    },\n\t    call: function(type, that) {\n\t      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t      for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t    },\n\t    apply: function(type, that, args) {\n\t      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t      for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t    }\n\t  };\n\t\n\t  function get(type, name) {\n\t    for (var i = 0, n = type.length, c; i < n; ++i) {\n\t      if ((c = type[i]).name === name) {\n\t        return c.value;\n\t      }\n\t    }\n\t  }\n\t\n\t  function set$1(type, name, callback) {\n\t    for (var i = 0, n = type.length; i < n; ++i) {\n\t      if (type[i].name === name) {\n\t        type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n\t        break;\n\t      }\n\t    }\n\t    if (callback != null) type.push({name: name, value: callback});\n\t    return type;\n\t  }\n\t\n\t  function objectConverter(columns) {\n\t    return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t      return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t    }).join(\",\") + \"}\");\n\t  }\n\t\n\t  function customConverter(columns, f) {\n\t    var object = objectConverter(columns);\n\t    return function(row, i) {\n\t      return f(object(row), i, columns);\n\t    };\n\t  }\n\t\n\t  // Compute unique columns in order of discovery.\n\t  function inferColumns(rows) {\n\t    var columnSet = Object.create(null),\n\t        columns = [];\n\t\n\t    rows.forEach(function(row) {\n\t      for (var column in row) {\n\t        if (!(column in columnSet)) {\n\t          columns.push(columnSet[column] = column);\n\t        }\n\t      }\n\t    });\n\t\n\t    return columns;\n\t  }\n\t\n\t  function dsv(delimiter) {\n\t    var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n\t        delimiterCode = delimiter.charCodeAt(0);\n\t\n\t    function parse(text, f) {\n\t      var convert, columns, rows = parseRows(text, function(row, i) {\n\t        if (convert) return convert(row, i - 1);\n\t        columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t      });\n\t      rows.columns = columns;\n\t      return rows;\n\t    }\n\t\n\t    function parseRows(text, f) {\n\t      var EOL = {}, // sentinel value for end-of-line\n\t          EOF = {}, // sentinel value for end-of-file\n\t          rows = [], // output rows\n\t          N = text.length,\n\t          I = 0, // current character index\n\t          n = 0, // the current line number\n\t          t, // the current token\n\t          eol; // is the current token followed by EOL?\n\t\n\t      function token() {\n\t        if (I >= N) return EOF; // special case: end of file\n\t        if (eol) return eol = false, EOL; // special case: end of line\n\t\n\t        // special case: quotes\n\t        var j = I, c;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n\t        }\n\t\n\t        // common case: find next delimiter or newline\n\t        while (I < N) {\n\t          var k = 1;\n\t          c = text.charCodeAt(I++);\n\t          if (c === 10) eol = true; // \\n\n\t          else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n\t          else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t\n\t        // special case: last token before EOF\n\t        return text.slice(j);\n\t      }\n\t\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t\n\t      return rows;\n\t    }\n\t\n\t    function format(rows, columns) {\n\t      if (columns == null) columns = inferColumns(rows);\n\t      return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t        return columns.map(function(column) {\n\t          return formatValue(row[column]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    }\n\t\n\t    function formatRows(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    }\n\t\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t\n\t    function formatValue(text) {\n\t      return text == null ? \"\"\n\t          : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t          : text;\n\t    }\n\t\n\t    return {\n\t      parse: parse,\n\t      parseRows: parseRows,\n\t      format: format,\n\t      formatRows: formatRows\n\t    };\n\t  }\n\t\n\t  var csv = dsv(\",\");\n\t\n\t  var csvParse = csv.parse;\n\t  var csvParseRows = csv.parseRows;\n\t  var csvFormat = csv.format;\n\t  var csvFormatRows = csv.formatRows;\n\t\n\t  var tsv = dsv(\"\\t\");\n\t\n\t  var tsvParse = tsv.parse;\n\t  var tsvParseRows = tsv.parseRows;\n\t  var tsvFormat = tsv.format;\n\t  var tsvFormatRows = tsv.formatRows;\n\t\n\t  function request(url, callback) {\n\t    var request,\n\t        event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t        mimeType,\n\t        headers = map$1(),\n\t        xhr = new XMLHttpRequest,\n\t        user = null,\n\t        password = null,\n\t        response,\n\t        responseType,\n\t        timeout = 0;\n\t\n\t    // If IE does not support CORS, use XDomainRequest.\n\t    if (typeof XDomainRequest !== \"undefined\"\n\t        && !(\"withCredentials\" in xhr)\n\t        && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t    \"onload\" in xhr\n\t        ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t        : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t    function respond(o) {\n\t      var status = xhr.status, result;\n\t      if (!status && hasResponse(xhr)\n\t          || status >= 200 && status < 300\n\t          || status === 304) {\n\t        if (response) {\n\t          try {\n\t            result = response.call(request, xhr);\n\t          } catch (e) {\n\t            event.call(\"error\", request, e);\n\t            return;\n\t          }\n\t        } else {\n\t          result = xhr;\n\t        }\n\t        event.call(\"load\", request, result);\n\t      } else {\n\t        event.call(\"error\", request, o);\n\t      }\n\t    }\n\t\n\t    xhr.onprogress = function(e) {\n\t      event.call(\"progress\", request, e);\n\t    };\n\t\n\t    request = {\n\t      header: function(name, value) {\n\t        name = (name + \"\").toLowerCase();\n\t        if (arguments.length < 2) return headers.get(name);\n\t        if (value == null) headers.remove(name);\n\t        else headers.set(name, value + \"\");\n\t        return request;\n\t      },\n\t\n\t      // If mimeType is non-null and no Accept header is set, a default is used.\n\t      mimeType: function(value) {\n\t        if (!arguments.length) return mimeType;\n\t        mimeType = value == null ? null : value + \"\";\n\t        return request;\n\t      },\n\t\n\t      // Specifies what type the response value should take;\n\t      // for instance, arraybuffer, blob, document, or text.\n\t      responseType: function(value) {\n\t        if (!arguments.length) return responseType;\n\t        responseType = value;\n\t        return request;\n\t      },\n\t\n\t      timeout: function(value) {\n\t        if (!arguments.length) return timeout;\n\t        timeout = +value;\n\t        return request;\n\t      },\n\t\n\t      user: function(value) {\n\t        return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t      },\n\t\n\t      password: function(value) {\n\t        return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t      },\n\t\n\t      // Specify how to convert the response content to a specific type;\n\t      // changes the callback value on \"load\" events.\n\t      response: function(value) {\n\t        response = value;\n\t        return request;\n\t      },\n\t\n\t      // Alias for send(\"GET\", …).\n\t      get: function(data, callback) {\n\t        return request.send(\"GET\", data, callback);\n\t      },\n\t\n\t      // Alias for send(\"POST\", …).\n\t      post: function(data, callback) {\n\t        return request.send(\"POST\", data, callback);\n\t      },\n\t\n\t      // If callback is non-null, it will be used for error and load events.\n\t      send: function(method, data, callback) {\n\t        xhr.open(method, url, true, user, password);\n\t        if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t        if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t        if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t        if (responseType != null) xhr.responseType = responseType;\n\t        if (timeout > 0) xhr.timeout = timeout;\n\t        if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t        if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t        if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t        event.call(\"beforesend\", request, xhr);\n\t        xhr.send(data == null ? null : data);\n\t        return request;\n\t      },\n\t\n\t      abort: function() {\n\t        xhr.abort();\n\t        return request;\n\t      },\n\t\n\t      on: function() {\n\t        var value = event.on.apply(event, arguments);\n\t        return value === event ? request : value;\n\t      }\n\t    };\n\t\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return request.get(callback);\n\t    }\n\t\n\t    return request;\n\t  }\n\t\n\t  function fixCallback(callback) {\n\t    return function(error, xhr) {\n\t      callback(error == null ? xhr : null);\n\t    };\n\t  }\n\t\n\t  function hasResponse(xhr) {\n\t    var type = xhr.responseType;\n\t    return type && type !== \"text\"\n\t        ? xhr.response // null on error\n\t        : xhr.responseText; // \"\" on error\n\t  }\n\t\n\t  function type(defaultMimeType, response) {\n\t    return function(url, callback) {\n\t      var r = request(url).mimeType(defaultMimeType).response(response);\n\t      if (callback != null) {\n\t        if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t        return r.get(callback);\n\t      }\n\t      return r;\n\t    };\n\t  }\n\t\n\t  var html = type(\"text/html\", function(xhr) {\n\t    return document.createRange().createContextualFragment(xhr.responseText);\n\t  });\n\t\n\t  var json = type(\"application/json\", function(xhr) {\n\t    return JSON.parse(xhr.responseText);\n\t  });\n\t\n\t  var text = type(\"text/plain\", function(xhr) {\n\t    return xhr.responseText;\n\t  });\n\t\n\t  var xml = type(\"application/xml\", function(xhr) {\n\t    var xml = xhr.responseXML;\n\t    if (!xml) throw new Error(\"parse error\");\n\t    return xml;\n\t  });\n\t\n\t  function dsv$1(defaultMimeType, parse) {\n\t    return function(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var r = request(url).mimeType(defaultMimeType);\n\t      r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t      r.row(row);\n\t      return callback ? r.get(callback) : r;\n\t    };\n\t  }\n\t\n\t  function responseOf(parse, row) {\n\t    return function(request) {\n\t      return parse(request.responseText, row);\n\t    };\n\t  }\n\t\n\t  var csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\t  var tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\t  var frame = 0;\n\t  var timeout = 0;\n\t  var interval = 0;\n\t  var pokeDelay = 1000;\n\t  var taskHead;\n\t  var taskTail;\n\t  var clockLast = 0;\n\t  var clockNow = 0;\n\t  var clockSkew = 0;\n\t  var clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\t  var setFrame = typeof requestAnimationFrame === \"function\"\n\t          ? (clock === Date ? function(f) { requestAnimationFrame(function() { f(clock.now()); }); } : requestAnimationFrame)\n\t          : function(f) { setTimeout(f, 17); };\n\t  function now() {\n\t    return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t  }\n\t\n\t  function clearNow() {\n\t    clockNow = 0;\n\t  }\n\t\n\t  function Timer() {\n\t    this._call =\n\t    this._time =\n\t    this._next = null;\n\t  }\n\t\n\t  Timer.prototype = timer.prototype = {\n\t    constructor: Timer,\n\t    restart: function(callback, delay, time) {\n\t      if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t      time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t      if (!this._next && taskTail !== this) {\n\t        if (taskTail) taskTail._next = this;\n\t        else taskHead = this;\n\t        taskTail = this;\n\t      }\n\t      this._call = callback;\n\t      this._time = time;\n\t      sleep();\n\t    },\n\t    stop: function() {\n\t      if (this._call) {\n\t        this._call = null;\n\t        this._time = Infinity;\n\t        sleep();\n\t      }\n\t    }\n\t  };\n\t\n\t  function timer(callback, delay, time) {\n\t    var t = new Timer;\n\t    t.restart(callback, delay, time);\n\t    return t;\n\t  }\n\t\n\t  function timerFlush() {\n\t    now(); // Get the current time, if not already set.\n\t    ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t    var t = taskHead, e;\n\t    while (t) {\n\t      if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t      t = t._next;\n\t    }\n\t    --frame;\n\t  }\n\t\n\t  function wake(time) {\n\t    clockNow = (clockLast = time || clock.now()) + clockSkew;\n\t    frame = timeout = 0;\n\t    try {\n\t      timerFlush();\n\t    } finally {\n\t      frame = 0;\n\t      nap();\n\t      clockNow = 0;\n\t    }\n\t  }\n\t\n\t  function poke$1() {\n\t    var now = clock.now(), delay = now - clockLast;\n\t    if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t  }\n\t\n\t  function nap() {\n\t    var t0, t1 = taskHead, t2, time = Infinity;\n\t    while (t1) {\n\t      if (t1._call) {\n\t        if (time > t1._time) time = t1._time;\n\t        t0 = t1, t1 = t1._next;\n\t      } else {\n\t        t2 = t1._next, t1._next = null;\n\t        t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t      }\n\t    }\n\t    taskTail = t0;\n\t    sleep(time);\n\t  }\n\t\n\t  function sleep(time) {\n\t    if (frame) return; // Soonest alarm already set, or will be.\n\t    if (timeout) timeout = clearTimeout(timeout);\n\t    var delay = time - clockNow;\n\t    if (delay > 24) {\n\t      if (time < Infinity) timeout = setTimeout(wake, delay);\n\t      if (interval) interval = clearInterval(interval);\n\t    } else {\n\t      if (!interval) interval = setInterval(poke$1, pokeDelay);\n\t      frame = 1, setFrame(wake);\n\t    }\n\t  }\n\t\n\t  function timeout$1(callback, delay, time) {\n\t    var t = new Timer;\n\t    delay = delay == null ? 0 : +delay;\n\t    t.restart(function(elapsed) {\n\t      t.stop();\n\t      callback(elapsed + delay);\n\t    }, delay, time);\n\t    return t;\n\t  }\n\t\n\t  function interval$1(callback, delay, time) {\n\t    var t = new Timer, total = delay;\n\t    if (delay == null) return t.restart(callback, delay, time), t;\n\t    delay = +delay, time = time == null ? now() : +time;\n\t    t.restart(function tick(elapsed) {\n\t      elapsed += total;\n\t      t.restart(tick, total += delay, time);\n\t      callback(elapsed);\n\t    }, delay, time);\n\t    return t;\n\t  }\n\t\n\tvar   t0$1 = new Date;\n\tvar   t1$1 = new Date;\n\t  function newInterval(floori, offseti, count, field) {\n\t\n\t    function interval(date) {\n\t      return floori(date = new Date(+date)), date;\n\t    }\n\t\n\t    interval.floor = interval;\n\t\n\t    interval.ceil = function(date) {\n\t      return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t    };\n\t\n\t    interval.round = function(date) {\n\t      var d0 = interval(date),\n\t          d1 = interval.ceil(date);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    };\n\t\n\t    interval.offset = function(date, step) {\n\t      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t    };\n\t\n\t    interval.range = function(start, stop, step) {\n\t      var range = [];\n\t      start = interval.ceil(start);\n\t      step = step == null ? 1 : Math.floor(step);\n\t      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t      do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t      return range;\n\t    };\n\t\n\t    interval.filter = function(test) {\n\t      return newInterval(function(date) {\n\t        while (floori(date), !test(date)) date.setTime(date - 1);\n\t      }, function(date, step) {\n\t        while (--step >= 0) while (offseti(date, 1), !test(date));\n\t      });\n\t    };\n\t\n\t    if (count) {\n\t      interval.count = function(start, end) {\n\t        t0$1.setTime(+start), t1$1.setTime(+end);\n\t        floori(t0$1), floori(t1$1);\n\t        return Math.floor(count(t0$1, t1$1));\n\t      };\n\t\n\t      interval.every = function(step) {\n\t        step = Math.floor(step);\n\t        return !isFinite(step) || !(step > 0) ? null\n\t            : !(step > 1) ? interval\n\t            : interval.filter(field\n\t                ? function(d) { return field(d) % step === 0; }\n\t                : function(d) { return interval.count(0, d) % step === 0; });\n\t      };\n\t    }\n\t\n\t    return interval;\n\t  }\n\t\n\t  var millisecond = newInterval(function() {\n\t    // noop\n\t  }, function(date, step) {\n\t    date.setTime(+date + step);\n\t  }, function(start, end) {\n\t    return end - start;\n\t  });\n\t\n\t  // An optimized implementation for this simple case.\n\t  millisecond.every = function(k) {\n\t    k = Math.floor(k);\n\t    if (!isFinite(k) || !(k > 0)) return null;\n\t    if (!(k > 1)) return millisecond;\n\t    return newInterval(function(date) {\n\t      date.setTime(Math.floor(date / k) * k);\n\t    }, function(date, step) {\n\t      date.setTime(+date + step * k);\n\t    }, function(start, end) {\n\t      return (end - start) / k;\n\t    });\n\t  };\n\t\n\t  var milliseconds = millisecond.range;\n\t\n\t  var durationSecond = 1e3;\n\t  var durationMinute = 6e4;\n\t  var durationHour = 36e5;\n\t  var durationDay = 864e5;\n\t  var durationWeek = 6048e5;\n\t\n\t  var second = newInterval(function(date) {\n\t    date.setTime(Math.floor(date / durationSecond) * durationSecond);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * durationSecond);\n\t  }, function(start, end) {\n\t    return (end - start) / durationSecond;\n\t  }, function(date) {\n\t    return date.getUTCSeconds();\n\t  });\n\t\n\t  var seconds = second.range;\n\t\n\t  var minute = newInterval(function(date) {\n\t    date.setTime(Math.floor(date / durationMinute) * durationMinute);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * durationMinute);\n\t  }, function(start, end) {\n\t    return (end - start) / durationMinute;\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t\n\t  var minutes = minute.range;\n\t\n\t  var hour = newInterval(function(date) {\n\t    var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n\t    if (offset < 0) offset += durationHour;\n\t    date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * durationHour);\n\t  }, function(start, end) {\n\t    return (end - start) / durationHour;\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t\n\t  var hours = hour.range;\n\t\n\t  var day = newInterval(function(date) {\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t\n\t  var days = day.range;\n\t\n\t  function weekday(i) {\n\t    return newInterval(function(date) {\n\t      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t      date.setHours(0, 0, 0, 0);\n\t    }, function(date, step) {\n\t      date.setDate(date.getDate() + step * 7);\n\t    }, function(start, end) {\n\t      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n\t    });\n\t  }\n\t\n\t  var timeWeek = weekday(0);\n\t  var timeMonday = weekday(1);\n\t  var tuesday = weekday(2);\n\t  var wednesday = weekday(3);\n\t  var thursday = weekday(4);\n\t  var friday = weekday(5);\n\t  var saturday = weekday(6);\n\t\n\t  var sundays = timeWeek.range;\n\t  var mondays = timeMonday.range;\n\t  var tuesdays = tuesday.range;\n\t  var wednesdays = wednesday.range;\n\t  var thursdays = thursday.range;\n\t  var fridays = friday.range;\n\t  var saturdays = saturday.range;\n\t\n\t  var month = newInterval(function(date) {\n\t    date.setDate(1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setMonth(date.getMonth() + step);\n\t  }, function(start, end) {\n\t    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t\n\t  var months = month.range;\n\t\n\t  var year = newInterval(function(date) {\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step);\n\t  }, function(start, end) {\n\t    return end.getFullYear() - start.getFullYear();\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t\n\t  // An optimized implementation for this simple case.\n\t  year.every = function(k) {\n\t    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t      date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t      date.setMonth(0, 1);\n\t      date.setHours(0, 0, 0, 0);\n\t    }, function(date, step) {\n\t      date.setFullYear(date.getFullYear() + step * k);\n\t    });\n\t  };\n\t\n\t  var years = year.range;\n\t\n\t  var utcMinute = newInterval(function(date) {\n\t    date.setUTCSeconds(0, 0);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * durationMinute);\n\t  }, function(start, end) {\n\t    return (end - start) / durationMinute;\n\t  }, function(date) {\n\t    return date.getUTCMinutes();\n\t  });\n\t\n\t  var utcMinutes = utcMinute.range;\n\t\n\t  var utcHour = newInterval(function(date) {\n\t    date.setUTCMinutes(0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * durationHour);\n\t  }, function(start, end) {\n\t    return (end - start) / durationHour;\n\t  }, function(date) {\n\t    return date.getUTCHours();\n\t  });\n\t\n\t  var utcHours = utcHour.range;\n\t\n\t  var utcDay = newInterval(function(date) {\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step);\n\t  }, function(start, end) {\n\t    return (end - start) / durationDay;\n\t  }, function(date) {\n\t    return date.getUTCDate() - 1;\n\t  });\n\t\n\t  var utcDays = utcDay.range;\n\t\n\t  function utcWeekday(i) {\n\t    return newInterval(function(date) {\n\t      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t      date.setUTCHours(0, 0, 0, 0);\n\t    }, function(date, step) {\n\t      date.setUTCDate(date.getUTCDate() + step * 7);\n\t    }, function(start, end) {\n\t      return (end - start) / durationWeek;\n\t    });\n\t  }\n\t\n\t  var utcWeek = utcWeekday(0);\n\t  var utcMonday = utcWeekday(1);\n\t  var utcTuesday = utcWeekday(2);\n\t  var utcWednesday = utcWeekday(3);\n\t  var utcThursday = utcWeekday(4);\n\t  var utcFriday = utcWeekday(5);\n\t  var utcSaturday = utcWeekday(6);\n\t\n\t  var utcSundays = utcWeek.range;\n\t  var utcMondays = utcMonday.range;\n\t  var utcTuesdays = utcTuesday.range;\n\t  var utcWednesdays = utcWednesday.range;\n\t  var utcThursdays = utcThursday.range;\n\t  var utcFridays = utcFriday.range;\n\t  var utcSaturdays = utcSaturday.range;\n\t\n\t  var utcMonth = newInterval(function(date) {\n\t    date.setUTCDate(1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCMonth(date.getUTCMonth() + step);\n\t  }, function(start, end) {\n\t    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t  }, function(date) {\n\t    return date.getUTCMonth();\n\t  });\n\t\n\t  var utcMonths = utcMonth.range;\n\t\n\t  var utcYear = newInterval(function(date) {\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step);\n\t  }, function(start, end) {\n\t    return end.getUTCFullYear() - start.getUTCFullYear();\n\t  }, function(date) {\n\t    return date.getUTCFullYear();\n\t  });\n\t\n\t  // An optimized implementation for this simple case.\n\t  utcYear.every = function(k) {\n\t    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t      date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t      date.setUTCMonth(0, 1);\n\t      date.setUTCHours(0, 0, 0, 0);\n\t    }, function(date, step) {\n\t      date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t    });\n\t  };\n\t\n\t  var utcYears = utcYear.range;\n\t\n\t  // Computes the decimal coefficient and exponent of the specified number x with\n\t  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t  // For example, formatDecimal(1.23) returns [\"123\", 0].\n\t  function formatDecimal(x, p) {\n\t    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t    var i, coefficient = x.slice(0, i);\n\t\n\t    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t    return [\n\t      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t      +x.slice(i + 1)\n\t    ];\n\t  }\n\t\n\t  function exponent$1(x) {\n\t    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t  }\n\t\n\t  function formatGroup(grouping, thousands) {\n\t    return function(value, width) {\n\t      var i = value.length,\n\t          t = [],\n\t          j = 0,\n\t          g = grouping[0],\n\t          length = 0;\n\t\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = grouping[j = (j + 1) % grouping.length];\n\t      }\n\t\n\t      return t.reverse().join(thousands);\n\t    };\n\t  }\n\t\n\t  function formatDefault(x, p) {\n\t    x = x.toPrecision(p);\n\t\n\t    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t      switch (x[i]) {\n\t        case \".\": i0 = i1 = i; break;\n\t        case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t        case \"e\": break out;\n\t        default: if (i0 > 0) i0 = 0; break;\n\t      }\n\t    }\n\t\n\t    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t  }\n\t\n\t  var prefixExponent;\n\t\n\t  function formatPrefixAuto(x, p) {\n\t    var d = formatDecimal(x, p);\n\t    if (!d) return x + \"\";\n\t    var coefficient = d[0],\n\t        exponent = d[1],\n\t        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t        n = coefficient.length;\n\t    return i === n ? coefficient\n\t        : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t        : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t        : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t  }\n\t\n\t  function formatRounded(x, p) {\n\t    var d = formatDecimal(x, p);\n\t    if (!d) return x + \"\";\n\t    var coefficient = d[0],\n\t        exponent = d[1];\n\t    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t        : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t  }\n\t\n\t  var formatTypes = {\n\t    \"\": formatDefault,\n\t    \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t    \"b\": function(x) { return Math.round(x).toString(2); },\n\t    \"c\": function(x) { return x + \"\"; },\n\t    \"d\": function(x) { return Math.round(x).toString(10); },\n\t    \"e\": function(x, p) { return x.toExponential(p); },\n\t    \"f\": function(x, p) { return x.toFixed(p); },\n\t    \"g\": function(x, p) { return x.toPrecision(p); },\n\t    \"o\": function(x) { return Math.round(x).toString(8); },\n\t    \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t    \"r\": formatRounded,\n\t    \"s\": formatPrefixAuto,\n\t    \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t    \"x\": function(x) { return Math.round(x).toString(16); }\n\t  };\n\t\n\t  // [[fill]align][sign][symbol][0][width][,][.precision][type]\n\t  var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\t  function formatSpecifier(specifier) {\n\t    return new FormatSpecifier(specifier);\n\t  }\n\t\n\t  function FormatSpecifier(specifier) {\n\t    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t    var match,\n\t        fill = match[1] || \" \",\n\t        align = match[2] || \">\",\n\t        sign = match[3] || \"-\",\n\t        symbol = match[4] || \"\",\n\t        zero = !!match[5],\n\t        width = match[6] && +match[6],\n\t        comma = !!match[7],\n\t        precision = match[8] && +match[8].slice(1),\n\t        type = match[9] || \"\";\n\t\n\t    // The \"n\" type is an alias for \",g\".\n\t    if (type === \"n\") comma = true, type = \"g\";\n\t\n\t    // Map invalid types to the default format.\n\t    else if (!formatTypes[type]) type = \"\";\n\t\n\t    // If zero fill is specified, padding goes after sign and before digits.\n\t    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t    this.fill = fill;\n\t    this.align = align;\n\t    this.sign = sign;\n\t    this.symbol = symbol;\n\t    this.zero = zero;\n\t    this.width = width;\n\t    this.comma = comma;\n\t    this.precision = precision;\n\t    this.type = type;\n\t  }\n\t\n\t  FormatSpecifier.prototype.toString = function() {\n\t    return this.fill\n\t        + this.align\n\t        + this.sign\n\t        + this.symbol\n\t        + (this.zero ? \"0\" : \"\")\n\t        + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t        + (this.comma ? \",\" : \"\")\n\t        + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t        + this.type;\n\t  };\n\t\n\t  var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\t  function identity$3(x) {\n\t    return x;\n\t  }\n\t\n\t  function formatLocale(locale) {\n\t    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t        currency = locale.currency,\n\t        decimal = locale.decimal;\n\t\n\t    function newFormat(specifier) {\n\t      specifier = formatSpecifier(specifier);\n\t\n\t      var fill = specifier.fill,\n\t          align = specifier.align,\n\t          sign = specifier.sign,\n\t          symbol = specifier.symbol,\n\t          zero = specifier.zero,\n\t          width = specifier.width,\n\t          comma = specifier.comma,\n\t          precision = specifier.precision,\n\t          type = specifier.type;\n\t\n\t      // Compute the prefix and suffix.\n\t      // For SI-prefix, the suffix is lazily computed.\n\t      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\t\n\t      // What format function should we use?\n\t      // Is this an integer type?\n\t      // Can this type generate exponential notation?\n\t      var formatType = formatTypes[type],\n\t          maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t      // Set the default precision if not specified,\n\t      // or clamp the specified precision to the supported range.\n\t      // For significant precision, it must be in [1, 21].\n\t      // For fixed precision, it must be in [0, 20].\n\t      precision = precision == null ? (type ? 6 : 12)\n\t          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t          : Math.max(0, Math.min(20, precision));\n\t\n\t      function format(value) {\n\t        var valuePrefix = prefix,\n\t            valueSuffix = suffix,\n\t            i, n, c;\n\t\n\t        if (type === \"c\") {\n\t          valueSuffix = formatType(value) + valueSuffix;\n\t          value = \"\";\n\t        } else {\n\t          value = +value;\n\t\n\t          // Convert negative to positive, and compute the prefix.\n\t          // Note that -0 is not less than 0, but 1 / -0 is!\n\t          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\t\n\t          // Perform the initial formatting.\n\t          value = formatType(value, precision);\n\t\n\t          // If the original value was negative, it may be rounded to zero during\n\t          // formatting; treat this as (positive) zero.\n\t          if (valueNegative) {\n\t            i = -1, n = value.length;\n\t            valueNegative = false;\n\t            while (++i < n) {\n\t              if (c = value.charCodeAt(i), (48 < c && c < 58)\n\t                  || (type === \"x\" && 96 < c && c < 103)\n\t                  || (type === \"X\" && 64 < c && c < 71)) {\n\t                valueNegative = true;\n\t                break;\n\t              }\n\t            }\n\t          }\n\t\n\t          // Compute the prefix and suffix.\n\t          valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t          valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t          // Break the formatted value into the integer “value” part that can be\n\t          // grouped, and fractional or exponential “suffix” part that is not.\n\t          if (maybeSuffix) {\n\t            i = -1, n = value.length;\n\t            while (++i < n) {\n\t              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t                value = value.slice(0, i);\n\t                break;\n\t              }\n\t            }\n\t          }\n\t        }\n\t\n\t        // If the fill character is not \"0\", grouping is applied before padding.\n\t        if (comma && !zero) value = group(value, Infinity);\n\t\n\t        // Compute the padding.\n\t        var length = valuePrefix.length + value.length + valueSuffix.length,\n\t            padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t        // If the fill character is \"0\", grouping is applied after padding.\n\t        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t        // Reconstruct the final output based on the desired alignment.\n\t        switch (align) {\n\t          case \"<\": return valuePrefix + value + valueSuffix + padding;\n\t          case \"=\": return valuePrefix + padding + value + valueSuffix;\n\t          case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n\t        }\n\t        return padding + valuePrefix + value + valueSuffix;\n\t      }\n\t\n\t      format.toString = function() {\n\t        return specifier + \"\";\n\t      };\n\t\n\t      return format;\n\t    }\n\t\n\t    function formatPrefix(specifier, value) {\n\t      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t          e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t          k = Math.pow(10, -e),\n\t          prefix = prefixes[8 + e / 3];\n\t      return function(value) {\n\t        return f(k * value) + prefix;\n\t      };\n\t    }\n\t\n\t    return {\n\t      format: newFormat,\n\t      formatPrefix: formatPrefix\n\t    };\n\t  }\n\t\n\t  var locale;\n\t  exports.format;\n\t  exports.formatPrefix;\n\t\n\t  defaultLocale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [3],\n\t    currency: [\"$\", \"\"]\n\t  });\n\t\n\t  function defaultLocale(definition) {\n\t    locale = formatLocale(definition);\n\t    exports.format = locale.format;\n\t    exports.formatPrefix = locale.formatPrefix;\n\t    return locale;\n\t  }\n\t\n\t  function precisionFixed(step) {\n\t    return Math.max(0, -exponent$1(Math.abs(step)));\n\t  }\n\t\n\t  function precisionPrefix(step, value) {\n\t    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t  }\n\t\n\t  function precisionRound(step, max) {\n\t    step = Math.abs(step), max = Math.abs(max) - step;\n\t    return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t  }\n\t\n\t  function localDate(d) {\n\t    if (0 <= d.y && d.y < 100) {\n\t      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t      date.setFullYear(d.y);\n\t      return date;\n\t    }\n\t    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t  }\n\t\n\t  function utcDate(d) {\n\t    if (0 <= d.y && d.y < 100) {\n\t      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t      date.setUTCFullYear(d.y);\n\t      return date;\n\t    }\n\t    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t  }\n\t\n\t  function newYear(y) {\n\t    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t  }\n\t\n\t  function formatLocale$1(locale) {\n\t    var locale_dateTime = locale.dateTime,\n\t        locale_date = locale.date,\n\t        locale_time = locale.time,\n\t        locale_periods = locale.periods,\n\t        locale_weekdays = locale.days,\n\t        locale_shortWeekdays = locale.shortDays,\n\t        locale_months = locale.months,\n\t        locale_shortMonths = locale.shortMonths;\n\t\n\t    var periodRe = formatRe(locale_periods),\n\t        periodLookup = formatLookup(locale_periods),\n\t        weekdayRe = formatRe(locale_weekdays),\n\t        weekdayLookup = formatLookup(locale_weekdays),\n\t        shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t        shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t        monthRe = formatRe(locale_months),\n\t        monthLookup = formatLookup(locale_months),\n\t        shortMonthRe = formatRe(locale_shortMonths),\n\t        shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t    var formats = {\n\t      \"a\": formatShortWeekday,\n\t      \"A\": formatWeekday,\n\t      \"b\": formatShortMonth,\n\t      \"B\": formatMonth,\n\t      \"c\": null,\n\t      \"d\": formatDayOfMonth,\n\t      \"e\": formatDayOfMonth,\n\t      \"H\": formatHour24,\n\t      \"I\": formatHour12,\n\t      \"j\": formatDayOfYear,\n\t      \"L\": formatMilliseconds,\n\t      \"m\": formatMonthNumber,\n\t      \"M\": formatMinutes,\n\t      \"p\": formatPeriod,\n\t      \"S\": formatSeconds,\n\t      \"U\": formatWeekNumberSunday,\n\t      \"w\": formatWeekdayNumber,\n\t      \"W\": formatWeekNumberMonday,\n\t      \"x\": null,\n\t      \"X\": null,\n\t      \"y\": formatYear,\n\t      \"Y\": formatFullYear,\n\t      \"Z\": formatZone,\n\t      \"%\": formatLiteralPercent\n\t    };\n\t\n\t    var utcFormats = {\n\t      \"a\": formatUTCShortWeekday,\n\t      \"A\": formatUTCWeekday,\n\t      \"b\": formatUTCShortMonth,\n\t      \"B\": formatUTCMonth,\n\t      \"c\": null,\n\t      \"d\": formatUTCDayOfMonth,\n\t      \"e\": formatUTCDayOfMonth,\n\t      \"H\": formatUTCHour24,\n\t      \"I\": formatUTCHour12,\n\t      \"j\": formatUTCDayOfYear,\n\t      \"L\": formatUTCMilliseconds,\n\t      \"m\": formatUTCMonthNumber,\n\t      \"M\": formatUTCMinutes,\n\t      \"p\": formatUTCPeriod,\n\t      \"S\": formatUTCSeconds,\n\t      \"U\": formatUTCWeekNumberSunday,\n\t      \"w\": formatUTCWeekdayNumber,\n\t      \"W\": formatUTCWeekNumberMonday,\n\t      \"x\": null,\n\t      \"X\": null,\n\t      \"y\": formatUTCYear,\n\t      \"Y\": formatUTCFullYear,\n\t      \"Z\": formatUTCZone,\n\t      \"%\": formatLiteralPercent\n\t    };\n\t\n\t    var parses = {\n\t      \"a\": parseShortWeekday,\n\t      \"A\": parseWeekday,\n\t      \"b\": parseShortMonth,\n\t      \"B\": parseMonth,\n\t      \"c\": parseLocaleDateTime,\n\t      \"d\": parseDayOfMonth,\n\t      \"e\": parseDayOfMonth,\n\t      \"H\": parseHour24,\n\t      \"I\": parseHour24,\n\t      \"j\": parseDayOfYear,\n\t      \"L\": parseMilliseconds,\n\t      \"m\": parseMonthNumber,\n\t      \"M\": parseMinutes,\n\t      \"p\": parsePeriod,\n\t      \"S\": parseSeconds,\n\t      \"U\": parseWeekNumberSunday,\n\t      \"w\": parseWeekdayNumber,\n\t      \"W\": parseWeekNumberMonday,\n\t      \"x\": parseLocaleDate,\n\t      \"X\": parseLocaleTime,\n\t      \"y\": parseYear,\n\t      \"Y\": parseFullYear,\n\t      \"Z\": parseZone,\n\t      \"%\": parseLiteralPercent\n\t    };\n\t\n\t    // These recursive directive definitions must be deferred.\n\t    formats.x = newFormat(locale_date, formats);\n\t    formats.X = newFormat(locale_time, formats);\n\t    formats.c = newFormat(locale_dateTime, formats);\n\t    utcFormats.x = newFormat(locale_date, utcFormats);\n\t    utcFormats.X = newFormat(locale_time, utcFormats);\n\t    utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t    function newFormat(specifier, formats) {\n\t      return function(date) {\n\t        var string = [],\n\t            i = -1,\n\t            j = 0,\n\t            n = specifier.length,\n\t            c,\n\t            pad,\n\t            format;\n\t\n\t        if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t        while (++i < n) {\n\t          if (specifier.charCodeAt(i) === 37) {\n\t            string.push(specifier.slice(j, i));\n\t            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t            else pad = c === \"e\" ? \" \" : \"0\";\n\t            if (format = formats[c]) c = format(date, pad);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t\n\t        string.push(specifier.slice(j, i));\n\t        return string.join(\"\");\n\t      };\n\t    }\n\t\n\t    function newParse(specifier, newDate) {\n\t      return function(string) {\n\t        var d = newYear(1900),\n\t            i = parseSpecifier(d, specifier, string += \"\", 0);\n\t        if (i != string.length) return null;\n\t\n\t        // The am-pm flag is 0 for AM, and 1 for PM.\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t        // Convert day-of-week and week-of-year to day-of-year.\n\t        if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t          d.m = 0;\n\t          d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n\t        }\n\t\n\t        // If a time zone is specified, all fields are interpreted as UTC and then\n\t        // offset according to the specified time zone.\n\t        if (\"Z\" in d) {\n\t          d.H += d.Z / 100 | 0;\n\t          d.M += d.Z % 100;\n\t          return utcDate(d);\n\t        }\n\t\n\t        // Otherwise, all fields are in local time.\n\t        return newDate(d);\n\t      };\n\t    }\n\t\n\t    function parseSpecifier(d, specifier, string, j) {\n\t      var i = 0,\n\t          n = specifier.length,\n\t          m = string.length,\n\t          c,\n\t          parse;\n\t\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = specifier.charCodeAt(i++);\n\t        if (c === 37) {\n\t          c = specifier.charAt(i++);\n\t          parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t\n\t      return j;\n\t    }\n\t\n\t    function parsePeriod(d, string, i) {\n\t      var n = periodRe.exec(string.slice(i));\n\t      return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t    }\n\t\n\t    function parseShortWeekday(d, string, i) {\n\t      var n = shortWeekdayRe.exec(string.slice(i));\n\t      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t    }\n\t\n\t    function parseWeekday(d, string, i) {\n\t      var n = weekdayRe.exec(string.slice(i));\n\t      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t    }\n\t\n\t    function parseShortMonth(d, string, i) {\n\t      var n = shortMonthRe.exec(string.slice(i));\n\t      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t    }\n\t\n\t    function parseMonth(d, string, i) {\n\t      var n = monthRe.exec(string.slice(i));\n\t      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t    }\n\t\n\t    function parseLocaleDateTime(d, string, i) {\n\t      return parseSpecifier(d, locale_dateTime, string, i);\n\t    }\n\t\n\t    function parseLocaleDate(d, string, i) {\n\t      return parseSpecifier(d, locale_date, string, i);\n\t    }\n\t\n\t    function parseLocaleTime(d, string, i) {\n\t      return parseSpecifier(d, locale_time, string, i);\n\t    }\n\t\n\t    function formatShortWeekday(d) {\n\t      return locale_shortWeekdays[d.getDay()];\n\t    }\n\t\n\t    function formatWeekday(d) {\n\t      return locale_weekdays[d.getDay()];\n\t    }\n\t\n\t    function formatShortMonth(d) {\n\t      return locale_shortMonths[d.getMonth()];\n\t    }\n\t\n\t    function formatMonth(d) {\n\t      return locale_months[d.getMonth()];\n\t    }\n\t\n\t    function formatPeriod(d) {\n\t      return locale_periods[+(d.getHours() >= 12)];\n\t    }\n\t\n\t    function formatUTCShortWeekday(d) {\n\t      return locale_shortWeekdays[d.getUTCDay()];\n\t    }\n\t\n\t    function formatUTCWeekday(d) {\n\t      return locale_weekdays[d.getUTCDay()];\n\t    }\n\t\n\t    function formatUTCShortMonth(d) {\n\t      return locale_shortMonths[d.getUTCMonth()];\n\t    }\n\t\n\t    function formatUTCMonth(d) {\n\t      return locale_months[d.getUTCMonth()];\n\t    }\n\t\n\t    function formatUTCPeriod(d) {\n\t      return locale_periods[+(d.getUTCHours() >= 12)];\n\t    }\n\t\n\t    return {\n\t      format: function(specifier) {\n\t        var f = newFormat(specifier += \"\", formats);\n\t        f.toString = function() { return specifier; };\n\t        return f;\n\t      },\n\t      parse: function(specifier) {\n\t        var p = newParse(specifier += \"\", localDate);\n\t        p.toString = function() { return specifier; };\n\t        return p;\n\t      },\n\t      utcFormat: function(specifier) {\n\t        var f = newFormat(specifier += \"\", utcFormats);\n\t        f.toString = function() { return specifier; };\n\t        return f;\n\t      },\n\t      utcParse: function(specifier) {\n\t        var p = newParse(specifier, utcDate);\n\t        p.toString = function() { return specifier; };\n\t        return p;\n\t      }\n\t    };\n\t  }\n\t\n\t  var pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\t  var numberRe = /^\\s*\\d+/;\n\t  var percentRe = /^%/;\n\t  var requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  function pad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\",\n\t        string = (sign ? -value : value) + \"\",\n\t        length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t\n\t  function requote(s) {\n\t    return s.replace(requoteRe, \"\\\\$&\");\n\t  }\n\t\n\t  function formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t\n\t  function formatLookup(names) {\n\t    var map = {}, i = -1, n = names.length;\n\t    while (++i < n) map[names[i].toLowerCase()] = i;\n\t    return map;\n\t  }\n\t\n\t  function parseWeekdayNumber(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekNumberSunday(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i));\n\t    return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekNumberMonday(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i));\n\t    return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseFullYear(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseYear(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseZone(d, string, i) {\n\t    var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonthNumber(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseDayOfMonth(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseDayOfYear(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseHour24(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMinutes(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseSeconds(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMilliseconds(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLiteralPercent(d, string, i) {\n\t    var n = percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t\n\t  function formatDayOfMonth(d, p) {\n\t    return pad(d.getDate(), p, 2);\n\t  }\n\t\n\t  function formatHour24(d, p) {\n\t    return pad(d.getHours(), p, 2);\n\t  }\n\t\n\t  function formatHour12(d, p) {\n\t    return pad(d.getHours() % 12 || 12, p, 2);\n\t  }\n\t\n\t  function formatDayOfYear(d, p) {\n\t    return pad(1 + day.count(year(d), d), p, 3);\n\t  }\n\t\n\t  function formatMilliseconds(d, p) {\n\t    return pad(d.getMilliseconds(), p, 3);\n\t  }\n\t\n\t  function formatMonthNumber(d, p) {\n\t    return pad(d.getMonth() + 1, p, 2);\n\t  }\n\t\n\t  function formatMinutes(d, p) {\n\t    return pad(d.getMinutes(), p, 2);\n\t  }\n\t\n\t  function formatSeconds(d, p) {\n\t    return pad(d.getSeconds(), p, 2);\n\t  }\n\t\n\t  function formatWeekNumberSunday(d, p) {\n\t    return pad(timeWeek.count(year(d), d), p, 2);\n\t  }\n\t\n\t  function formatWeekdayNumber(d) {\n\t    return d.getDay();\n\t  }\n\t\n\t  function formatWeekNumberMonday(d, p) {\n\t    return pad(timeMonday.count(year(d), d), p, 2);\n\t  }\n\t\n\t  function formatYear(d, p) {\n\t    return pad(d.getFullYear() % 100, p, 2);\n\t  }\n\t\n\t  function formatFullYear(d, p) {\n\t    return pad(d.getFullYear() % 10000, p, 4);\n\t  }\n\t\n\t  function formatZone(d) {\n\t    var z = d.getTimezoneOffset();\n\t    return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t        + pad(z / 60 | 0, \"0\", 2)\n\t        + pad(z % 60, \"0\", 2);\n\t  }\n\t\n\t  function formatUTCDayOfMonth(d, p) {\n\t    return pad(d.getUTCDate(), p, 2);\n\t  }\n\t\n\t  function formatUTCHour24(d, p) {\n\t    return pad(d.getUTCHours(), p, 2);\n\t  }\n\t\n\t  function formatUTCHour12(d, p) {\n\t    return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t  }\n\t\n\t  function formatUTCDayOfYear(d, p) {\n\t    return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t  }\n\t\n\t  function formatUTCMilliseconds(d, p) {\n\t    return pad(d.getUTCMilliseconds(), p, 3);\n\t  }\n\t\n\t  function formatUTCMonthNumber(d, p) {\n\t    return pad(d.getUTCMonth() + 1, p, 2);\n\t  }\n\t\n\t  function formatUTCMinutes(d, p) {\n\t    return pad(d.getUTCMinutes(), p, 2);\n\t  }\n\t\n\t  function formatUTCSeconds(d, p) {\n\t    return pad(d.getUTCSeconds(), p, 2);\n\t  }\n\t\n\t  function formatUTCWeekNumberSunday(d, p) {\n\t    return pad(utcWeek.count(utcYear(d), d), p, 2);\n\t  }\n\t\n\t  function formatUTCWeekdayNumber(d) {\n\t    return d.getUTCDay();\n\t  }\n\t\n\t  function formatUTCWeekNumberMonday(d, p) {\n\t    return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t  }\n\t\n\t  function formatUTCYear(d, p) {\n\t    return pad(d.getUTCFullYear() % 100, p, 2);\n\t  }\n\t\n\t  function formatUTCFullYear(d, p) {\n\t    return pad(d.getUTCFullYear() % 10000, p, 4);\n\t  }\n\t\n\t  function formatUTCZone() {\n\t    return \"+0000\";\n\t  }\n\t\n\t  function formatLiteralPercent() {\n\t    return \"%\";\n\t  }\n\t\n\t  var locale$1;\n\t  exports.timeFormat;\n\t  exports.timeParse;\n\t  exports.utcFormat;\n\t  exports.utcParse;\n\t\n\t  defaultLocale$1({\n\t    dateTime: \"%x, %X\",\n\t    date: \"%-m/%-d/%Y\",\n\t    time: \"%-I:%M:%S %p\",\n\t    periods: [\"AM\", \"PM\"],\n\t    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t  });\n\t\n\t  function defaultLocale$1(definition) {\n\t    locale$1 = formatLocale$1(definition);\n\t    exports.timeFormat = locale$1.format;\n\t    exports.timeParse = locale$1.parse;\n\t    exports.utcFormat = locale$1.utcFormat;\n\t    exports.utcParse = locale$1.utcParse;\n\t    return locale$1;\n\t  }\n\t\n\t  var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\t  function formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t\n\t  var formatIso = Date.prototype.toISOString\n\t      ? formatIsoNative\n\t      : exports.utcFormat(isoSpecifier);\n\t\n\t  function parseIsoNative(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  }\n\t\n\t  var parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t      ? parseIsoNative\n\t      : exports.utcParse(isoSpecifier);\n\t\n\t  var array$2 = Array.prototype;\n\t\n\t  var map$2 = array$2.map;\n\t  var slice$3 = array$2.slice;\n\t\n\t  var implicit = {name: \"implicit\"};\n\t\n\t  function ordinal(range) {\n\t    var index = map$1(),\n\t        domain = [],\n\t        unknown = implicit;\n\t\n\t    range = range == null ? [] : slice$3.call(range);\n\t\n\t    function scale(d) {\n\t      var key = d + \"\", i = index.get(key);\n\t      if (!i) {\n\t        if (unknown !== implicit) return unknown;\n\t        index.set(key, i = domain.push(d));\n\t      }\n\t      return range[(i - 1) % range.length];\n\t    }\n\t\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain.slice();\n\t      domain = [], index = map$1();\n\t      var i = -1, n = _.length, d, key;\n\t      while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t      return scale;\n\t    };\n\t\n\t    scale.range = function(_) {\n\t      return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n\t    };\n\t\n\t    scale.unknown = function(_) {\n\t      return arguments.length ? (unknown = _, scale) : unknown;\n\t    };\n\t\n\t    scale.copy = function() {\n\t      return ordinal()\n\t          .domain(domain)\n\t          .range(range)\n\t          .unknown(unknown);\n\t    };\n\t\n\t    return scale;\n\t  }\n\t\n\t  function band() {\n\t    var scale = ordinal().unknown(undefined),\n\t        domain = scale.domain,\n\t        ordinalRange = scale.range,\n\t        range$$ = [0, 1],\n\t        step,\n\t        bandwidth,\n\t        round = false,\n\t        paddingInner = 0,\n\t        paddingOuter = 0,\n\t        align = 0.5;\n\t\n\t    delete scale.unknown;\n\t\n\t    function rescale() {\n\t      var n = domain().length,\n\t          reverse = range$$[1] < range$$[0],\n\t          start = range$$[reverse - 0],\n\t          stop = range$$[1 - reverse];\n\t      step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t      if (round) step = Math.floor(step);\n\t      start += (stop - start - step * (n - paddingInner)) * align;\n\t      bandwidth = step * (1 - paddingInner);\n\t      if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t      var values = range(n).map(function(i) { return start + step * i; });\n\t      return ordinalRange(reverse ? values.reverse() : values);\n\t    }\n\t\n\t    scale.domain = function(_) {\n\t      return arguments.length ? (domain(_), rescale()) : domain();\n\t    };\n\t\n\t    scale.range = function(_) {\n\t      return arguments.length ? (range$$ = [+_[0], +_[1]], rescale()) : range$$.slice();\n\t    };\n\t\n\t    scale.rangeRound = function(_) {\n\t      return range$$ = [+_[0], +_[1]], round = true, rescale();\n\t    };\n\t\n\t    scale.bandwidth = function() {\n\t      return bandwidth;\n\t    };\n\t\n\t    scale.step = function() {\n\t      return step;\n\t    };\n\t\n\t    scale.round = function(_) {\n\t      return arguments.length ? (round = !!_, rescale()) : round;\n\t    };\n\t\n\t    scale.padding = function(_) {\n\t      return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t    };\n\t\n\t    scale.paddingInner = function(_) {\n\t      return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t    };\n\t\n\t    scale.paddingOuter = function(_) {\n\t      return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t    };\n\t\n\t    scale.align = function(_) {\n\t      return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t    };\n\t\n\t    scale.copy = function() {\n\t      return band()\n\t          .domain(domain())\n\t          .range(range$$)\n\t          .round(round)\n\t          .paddingInner(paddingInner)\n\t          .paddingOuter(paddingOuter)\n\t          .align(align);\n\t    };\n\t\n\t    return rescale();\n\t  }\n\t\n\t  function pointish(scale) {\n\t    var copy = scale.copy;\n\t\n\t    scale.padding = scale.paddingOuter;\n\t    delete scale.paddingInner;\n\t    delete scale.paddingOuter;\n\t\n\t    scale.copy = function() {\n\t      return pointish(copy());\n\t    };\n\t\n\t    return scale;\n\t  }\n\t\n\t  function point$4() {\n\t    return pointish(band().paddingInner(1));\n\t  }\n\t\n\t  function constant$3(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function number$1(x) {\n\t    return +x;\n\t  }\n\t\n\t  var unit = [0, 1];\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b -= (a = +a))\n\t        ? function(x) { return (x - a) / b; }\n\t        : constant$3(b);\n\t  }\n\t\n\t  function deinterpolateClamp(deinterpolate) {\n\t    return function(a, b) {\n\t      var d = deinterpolate(a = +a, b = +b);\n\t      return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t    };\n\t  }\n\t\n\t  function reinterpolateClamp(reinterpolate) {\n\t    return function(a, b) {\n\t      var r = reinterpolate(a = +a, b = +b);\n\t      return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t    };\n\t  }\n\t\n\t  function bimap(domain, range, deinterpolate, reinterpolate) {\n\t    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n\t    if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t    else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t    return function(x) { return r0(d0(x)); };\n\t  }\n\t\n\t  function polymap(domain, range, deinterpolate, reinterpolate) {\n\t    var j = Math.min(domain.length, range.length) - 1,\n\t        d = new Array(j),\n\t        r = new Array(j),\n\t        i = -1;\n\t\n\t    // Reverse descending domains.\n\t    if (domain[j] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t\n\t    while (++i < j) {\n\t      d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t      r[i] = reinterpolate(range[i], range[i + 1]);\n\t    }\n\t\n\t    return function(x) {\n\t      var i = bisectRight(domain, x, 1, j) - 1;\n\t      return r[i](d[i](x));\n\t    };\n\t  }\n\t\n\t  function copy(source, target) {\n\t    return target\n\t        .domain(source.domain())\n\t        .range(source.range())\n\t        .interpolate(source.interpolate())\n\t        .clamp(source.clamp());\n\t  }\n\t\n\t  // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t  // reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\t  function continuous(deinterpolate$$, reinterpolate) {\n\t    var domain = unit,\n\t        range = unit,\n\t        interpolate$$ = interpolate,\n\t        clamp = false,\n\t        piecewise,\n\t        output,\n\t        input;\n\t\n\t    function rescale() {\n\t      piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n\t      output = input = null;\n\t      return scale;\n\t    }\n\t\n\t    function scale(x) {\n\t      return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate$$) : deinterpolate$$, interpolate$$)))(+x);\n\t    }\n\t\n\t    scale.invert = function(y) {\n\t      return (input || (input = piecewise(range, domain, deinterpolate, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t    };\n\t\n\t    scale.domain = function(_) {\n\t      return arguments.length ? (domain = map$2.call(_, number$1), rescale()) : domain.slice();\n\t    };\n\t\n\t    scale.range = function(_) {\n\t      return arguments.length ? (range = slice$3.call(_), rescale()) : range.slice();\n\t    };\n\t\n\t    scale.rangeRound = function(_) {\n\t      return range = slice$3.call(_), interpolate$$ = interpolateRound, rescale();\n\t    };\n\t\n\t    scale.clamp = function(_) {\n\t      return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t    };\n\t\n\t    scale.interpolate = function(_) {\n\t      return arguments.length ? (interpolate$$ = _, rescale()) : interpolate$$;\n\t    };\n\t\n\t    return rescale();\n\t  }\n\t\n\t  function tickFormat(domain, count, specifier) {\n\t    var start = domain[0],\n\t        stop = domain[domain.length - 1],\n\t        step = tickStep(start, stop, count == null ? 10 : count),\n\t        precision;\n\t    specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t    switch (specifier.type) {\n\t      case \"s\": {\n\t        var value = Math.max(Math.abs(start), Math.abs(stop));\n\t        if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t        return exports.formatPrefix(specifier, value);\n\t      }\n\t      case \"\":\n\t      case \"e\":\n\t      case \"g\":\n\t      case \"p\":\n\t      case \"r\": {\n\t        if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t        break;\n\t      }\n\t      case \"f\":\n\t      case \"%\": {\n\t        if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t        break;\n\t      }\n\t    }\n\t    return exports.format(specifier);\n\t  }\n\t\n\t  function linearish(scale) {\n\t    var domain = scale.domain;\n\t\n\t    scale.ticks = function(count) {\n\t      var d = domain();\n\t      return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t    };\n\t\n\t    scale.tickFormat = function(count, specifier) {\n\t      return tickFormat(domain(), count, specifier);\n\t    };\n\t\n\t    scale.nice = function(count) {\n\t      var d = domain(),\n\t          i = d.length - 1,\n\t          n = count == null ? 10 : count,\n\t          start = d[0],\n\t          stop = d[i],\n\t          step = tickStep(start, stop, n);\n\t\n\t      if (step) {\n\t        step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n\t        d[0] = Math.floor(start / step) * step;\n\t        d[i] = Math.ceil(stop / step) * step;\n\t        domain(d);\n\t      }\n\t\n\t      return scale;\n\t    };\n\t\n\t    return scale;\n\t  }\n\t\n\t  function linear$2() {\n\t    var scale = continuous(deinterpolate, interpolateNumber);\n\t\n\t    scale.copy = function() {\n\t      return copy(scale, linear$2());\n\t    };\n\t\n\t    return linearish(scale);\n\t  }\n\t\n\t  function identity$4() {\n\t    var domain = [0, 1];\n\t\n\t    function scale(x) {\n\t      return +x;\n\t    }\n\t\n\t    scale.invert = scale;\n\t\n\t    scale.domain = scale.range = function(_) {\n\t      return arguments.length ? (domain = map$2.call(_, number$1), scale) : domain.slice();\n\t    };\n\t\n\t    scale.copy = function() {\n\t      return identity$4().domain(domain);\n\t    };\n\t\n\t    return linearish(scale);\n\t  }\n\t\n\t  function nice(domain, interval) {\n\t    domain = domain.slice();\n\t\n\t    var i0 = 0,\n\t        i1 = domain.length - 1,\n\t        x0 = domain[i0],\n\t        x1 = domain[i1],\n\t        t;\n\t\n\t    if (x1 < x0) {\n\t      t = i0, i0 = i1, i1 = t;\n\t      t = x0, x0 = x1, x1 = t;\n\t    }\n\t\n\t    domain[i0] = interval.floor(x0);\n\t    domain[i1] = interval.ceil(x1);\n\t    return domain;\n\t  }\n\t\n\t  function deinterpolate$1(a, b) {\n\t    return (b = Math.log(b / a))\n\t        ? function(x) { return Math.log(x / a) / b; }\n\t        : constant$3(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    return a < 0\n\t        ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t        : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t  }\n\t\n\t  function pow10(x) {\n\t    return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t  }\n\t\n\t  function powp(base) {\n\t    return base === 10 ? pow10\n\t        : base === Math.E ? Math.exp\n\t        : function(x) { return Math.pow(base, x); };\n\t  }\n\t\n\t  function logp(base) {\n\t    return base === Math.E ? Math.log\n\t        : base === 10 && Math.log10\n\t        || base === 2 && Math.log2\n\t        || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t  }\n\t\n\t  function reflect(f) {\n\t    return function(x) {\n\t      return -f(-x);\n\t    };\n\t  }\n\t\n\t  function log() {\n\t    var scale = continuous(deinterpolate$1, reinterpolate).domain([1, 10]),\n\t        domain = scale.domain,\n\t        base = 10,\n\t        logs = logp(10),\n\t        pows = powp(10);\n\t\n\t    function rescale() {\n\t      logs = logp(base), pows = powp(base);\n\t      if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t      return scale;\n\t    }\n\t\n\t    scale.base = function(_) {\n\t      return arguments.length ? (base = +_, rescale()) : base;\n\t    };\n\t\n\t    scale.domain = function(_) {\n\t      return arguments.length ? (domain(_), rescale()) : domain();\n\t    };\n\t\n\t    scale.ticks = function(count) {\n\t      var d = domain(),\n\t          u = d[0],\n\t          v = d[d.length - 1],\n\t          r;\n\t\n\t      if (r = v < u) i = u, u = v, v = i;\n\t\n\t      var i = logs(u),\n\t          j = logs(v),\n\t          p,\n\t          k,\n\t          t,\n\t          n = count == null ? 10 : +count,\n\t          z = [];\n\t\n\t      if (!(base % 1) && j - i < n) {\n\t        i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t        if (u > 0) for (; i < j; ++i) {\n\t          for (k = 1, p = pows(i); k < base; ++k) {\n\t            t = p * k;\n\t            if (t < u) continue;\n\t            if (t > v) break;\n\t            z.push(t);\n\t          }\n\t        } else for (; i < j; ++i) {\n\t          for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t            t = p * k;\n\t            if (t < u) continue;\n\t            if (t > v) break;\n\t            z.push(t);\n\t          }\n\t        }\n\t      } else {\n\t        z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t      }\n\t\n\t      return r ? z.reverse() : z;\n\t    };\n\t\n\t    scale.tickFormat = function(count, specifier) {\n\t      if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t      if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t      if (count === Infinity) return specifier;\n\t      if (count == null) count = 10;\n\t      var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t      return function(d) {\n\t        var i = d / pows(Math.round(logs(d)));\n\t        if (i * base < base - 0.5) i *= base;\n\t        return i <= k ? specifier(d) : \"\";\n\t      };\n\t    };\n\t\n\t    scale.nice = function() {\n\t      return domain(nice(domain(), {\n\t        floor: function(x) { return pows(Math.floor(logs(x))); },\n\t        ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t      }));\n\t    };\n\t\n\t    scale.copy = function() {\n\t      return copy(scale, log().base(base));\n\t    };\n\t\n\t    return scale;\n\t  }\n\t\n\t  function raise(x, exponent) {\n\t    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t  }\n\t\n\t  function pow() {\n\t    var exponent = 1,\n\t        scale = continuous(deinterpolate, reinterpolate),\n\t        domain = scale.domain;\n\t\n\t    function deinterpolate(a, b) {\n\t      return (b = raise(b, exponent) - (a = raise(a, exponent)))\n\t          ? function(x) { return (raise(x, exponent) - a) / b; }\n\t          : constant$3(b);\n\t    }\n\t\n\t    function reinterpolate(a, b) {\n\t      b = raise(b, exponent) - (a = raise(a, exponent));\n\t      return function(t) { return raise(a + b * t, 1 / exponent); };\n\t    }\n\t\n\t    scale.exponent = function(_) {\n\t      return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t    };\n\t\n\t    scale.copy = function() {\n\t      return copy(scale, pow().exponent(exponent));\n\t    };\n\t\n\t    return linearish(scale);\n\t  }\n\t\n\t  function sqrt() {\n\t    return pow().exponent(0.5);\n\t  }\n\t\n\t  function quantile() {\n\t    var domain = [],\n\t        range = [],\n\t        thresholds = [];\n\t\n\t    function rescale() {\n\t      var i = 0, n = Math.max(1, range.length);\n\t      thresholds = new Array(n - 1);\n\t      while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t      return scale;\n\t    }\n\t\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n\t    }\n\t\n\t    scale.invertExtent = function(y) {\n\t      var i = range.indexOf(y);\n\t      return i < 0 ? [NaN, NaN] : [\n\t        i > 0 ? thresholds[i - 1] : domain[0],\n\t        i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t      ];\n\t    };\n\t\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain.slice();\n\t      domain = [];\n\t      for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t      domain.sort(ascending);\n\t      return rescale();\n\t    };\n\t\n\t    scale.range = function(_) {\n\t      return arguments.length ? (range = slice$3.call(_), rescale()) : range.slice();\n\t    };\n\t\n\t    scale.quantiles = function() {\n\t      return thresholds.slice();\n\t    };\n\t\n\t    scale.copy = function() {\n\t      return quantile()\n\t          .domain(domain)\n\t          .range(range);\n\t    };\n\t\n\t    return scale;\n\t  }\n\t\n\t  function quantize$1() {\n\t    var x0 = 0,\n\t        x1 = 1,\n\t        n = 1,\n\t        domain = [0.5],\n\t        range = [0, 1];\n\t\n\t    function scale(x) {\n\t      if (x <= x) return range[bisectRight(domain, x, 0, n)];\n\t    }\n\t\n\t    function rescale() {\n\t      var i = -1;\n\t      domain = new Array(n);\n\t      while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t      return scale;\n\t    }\n\t\n\t    scale.domain = function(_) {\n\t      return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t    };\n\t\n\t    scale.range = function(_) {\n\t      return arguments.length ? (n = (range = slice$3.call(_)).length - 1, rescale()) : range.slice();\n\t    };\n\t\n\t    scale.invertExtent = function(y) {\n\t      var i = range.indexOf(y);\n\t      return i < 0 ? [NaN, NaN]\n\t          : i < 1 ? [x0, domain[0]]\n\t          : i >= n ? [domain[n - 1], x1]\n\t          : [domain[i - 1], domain[i]];\n\t    };\n\t\n\t    scale.copy = function() {\n\t      return quantize$1()\n\t          .domain([x0, x1])\n\t          .range(range);\n\t    };\n\t\n\t    return linearish(scale);\n\t  }\n\t\n\t  function threshold$1() {\n\t    var domain = [0.5],\n\t        range = [0, 1],\n\t        n = 1;\n\t\n\t    function scale(x) {\n\t      if (x <= x) return range[bisectRight(domain, x, 0, n)];\n\t    }\n\t\n\t    scale.domain = function(_) {\n\t      return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n\t    };\n\t\n\t    scale.range = function(_) {\n\t      return arguments.length ? (range = slice$3.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n\t    };\n\t\n\t    scale.invertExtent = function(y) {\n\t      var i = range.indexOf(y);\n\t      return [domain[i - 1], domain[i]];\n\t    };\n\t\n\t    scale.copy = function() {\n\t      return threshold$1()\n\t          .domain(domain)\n\t          .range(range);\n\t    };\n\t\n\t    return scale;\n\t  }\n\t\n\tvar   durationSecond$1 = 1000;\n\tvar   durationMinute$1 = durationSecond$1 * 60;\n\tvar   durationHour$1 = durationMinute$1 * 60;\n\tvar   durationDay$1 = durationHour$1 * 24;\n\tvar   durationWeek$1 = durationDay$1 * 7;\n\t  var durationMonth = durationDay$1 * 30;\n\t  var durationYear = durationDay$1 * 365;\n\t  function date$1(t) {\n\t    return new Date(t);\n\t  }\n\t\n\t  function number$2(t) {\n\t    return t instanceof Date ? +t : +new Date(+t);\n\t  }\n\t\n\t  function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n\t    var scale = continuous(deinterpolate, interpolateNumber),\n\t        invert = scale.invert,\n\t        domain = scale.domain;\n\t\n\t    var formatMillisecond = format(\".%L\"),\n\t        formatSecond = format(\":%S\"),\n\t        formatMinute = format(\"%I:%M\"),\n\t        formatHour = format(\"%I %p\"),\n\t        formatDay = format(\"%a %d\"),\n\t        formatWeek = format(\"%b %d\"),\n\t        formatMonth = format(\"%B\"),\n\t        formatYear = format(\"%Y\");\n\t\n\t    var tickIntervals = [\n\t      [second,  1,      durationSecond$1],\n\t      [second,  5,  5 * durationSecond$1],\n\t      [second, 15, 15 * durationSecond$1],\n\t      [second, 30, 30 * durationSecond$1],\n\t      [minute,  1,      durationMinute$1],\n\t      [minute,  5,  5 * durationMinute$1],\n\t      [minute, 15, 15 * durationMinute$1],\n\t      [minute, 30, 30 * durationMinute$1],\n\t      [  hour,  1,      durationHour$1  ],\n\t      [  hour,  3,  3 * durationHour$1  ],\n\t      [  hour,  6,  6 * durationHour$1  ],\n\t      [  hour, 12, 12 * durationHour$1  ],\n\t      [   day,  1,      durationDay$1   ],\n\t      [   day,  2,  2 * durationDay$1   ],\n\t      [  week,  1,      durationWeek$1  ],\n\t      [ month,  1,      durationMonth ],\n\t      [ month,  3,  3 * durationMonth ],\n\t      [  year,  1,      durationYear  ]\n\t    ];\n\t\n\t    function tickFormat(date) {\n\t      return (second(date) < date ? formatMillisecond\n\t          : minute(date) < date ? formatSecond\n\t          : hour(date) < date ? formatMinute\n\t          : day(date) < date ? formatHour\n\t          : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t          : year(date) < date ? formatMonth\n\t          : formatYear)(date);\n\t    }\n\t\n\t    function tickInterval(interval, start, stop, step) {\n\t      if (interval == null) interval = 10;\n\t\n\t      // If a desired tick count is specified, pick a reasonable tick interval\n\t      // based on the extent of the domain and a rough estimate of tick size.\n\t      // Otherwise, assume interval is already a time interval and use it.\n\t      if (typeof interval === \"number\") {\n\t        var target = Math.abs(stop - start) / interval,\n\t            i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t        if (i === tickIntervals.length) {\n\t          step = tickStep(start / durationYear, stop / durationYear, interval);\n\t          interval = year;\n\t        } else if (i) {\n\t          i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t          step = i[1];\n\t          interval = i[0];\n\t        } else {\n\t          step = tickStep(start, stop, interval);\n\t          interval = millisecond;\n\t        }\n\t      }\n\t\n\t      return step == null ? interval : interval.every(step);\n\t    }\n\t\n\t    scale.invert = function(y) {\n\t      return new Date(invert(y));\n\t    };\n\t\n\t    scale.domain = function(_) {\n\t      return arguments.length ? domain(map$2.call(_, number$2)) : domain().map(date$1);\n\t    };\n\t\n\t    scale.ticks = function(interval, step) {\n\t      var d = domain(),\n\t          t0 = d[0],\n\t          t1 = d[d.length - 1],\n\t          r = t1 < t0,\n\t          t;\n\t      if (r) t = t0, t0 = t1, t1 = t;\n\t      t = tickInterval(interval, t0, t1, step);\n\t      t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t      return r ? t.reverse() : t;\n\t    };\n\t\n\t    scale.tickFormat = function(count, specifier) {\n\t      return specifier == null ? tickFormat : format(specifier);\n\t    };\n\t\n\t    scale.nice = function(interval, step) {\n\t      var d = domain();\n\t      return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t          ? domain(nice(d, interval))\n\t          : scale;\n\t    };\n\t\n\t    scale.copy = function() {\n\t      return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n\t    };\n\t\n\t    return scale;\n\t  }\n\t\n\t  function time() {\n\t    return calendar(year, month, timeWeek, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t  }\n\t\n\t  function utcTime() {\n\t    return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t  }\n\t\n\t  function colors(s) {\n\t    return s.match(/.{6}/g).map(function(x) {\n\t      return \"#\" + x;\n\t    });\n\t  }\n\t\n\t  var category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\t  var category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\t  var category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\t  var category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\t  var cubehelix$3 = interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\t  var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\t  var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\t  var rainbow = cubehelix();\n\t\n\t  function rainbow$1(t) {\n\t    if (t < 0 || t > 1) t -= Math.floor(t);\n\t    var ts = Math.abs(t - 0.5);\n\t    rainbow.h = 360 * t - 100;\n\t    rainbow.s = 1.5 - 1.5 * ts;\n\t    rainbow.l = 0.8 - 0.9 * ts;\n\t    return rainbow + \"\";\n\t  }\n\t\n\t  function ramp(range) {\n\t    var n = range.length;\n\t    return function(t) {\n\t      return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t    };\n\t  }\n\t\n\t  var viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\t  var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\t  var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\t  var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\t  function sequential(interpolator) {\n\t    var x0 = 0,\n\t        x1 = 1,\n\t        clamp = false;\n\t\n\t    function scale(x) {\n\t      var t = (x - x0) / (x1 - x0);\n\t      return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t    }\n\t\n\t    scale.domain = function(_) {\n\t      return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t    };\n\t\n\t    scale.clamp = function(_) {\n\t      return arguments.length ? (clamp = !!_, scale) : clamp;\n\t    };\n\t\n\t    scale.interpolator = function(_) {\n\t      return arguments.length ? (interpolator = _, scale) : interpolator;\n\t    };\n\t\n\t    scale.copy = function() {\n\t      return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t    };\n\t\n\t    return linearish(scale);\n\t  }\n\t\n\t  var xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\t  var namespaces = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: xhtml,\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t\n\t  function namespace(name) {\n\t    var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t    if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t    return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t  }\n\t\n\t  function creatorInherit(name) {\n\t    return function() {\n\t      var document = this.ownerDocument,\n\t          uri = this.namespaceURI;\n\t      return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t          ? document.createElement(name)\n\t          : document.createElementNS(uri, name);\n\t    };\n\t  }\n\t\n\t  function creatorFixed(fullname) {\n\t    return function() {\n\t      return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t    };\n\t  }\n\t\n\t  function creator(name) {\n\t    var fullname = namespace(name);\n\t    return (fullname.local\n\t        ? creatorFixed\n\t        : creatorInherit)(fullname);\n\t  }\n\t\n\t  var nextId = 0;\n\t\n\t  function local() {\n\t    return new Local;\n\t  }\n\t\n\t  function Local() {\n\t    this._ = \"@\" + (++nextId).toString(36);\n\t  }\n\t\n\t  Local.prototype = local.prototype = {\n\t    constructor: Local,\n\t    get: function(node) {\n\t      var id = this._;\n\t      while (!(id in node)) if (!(node = node.parentNode)) return;\n\t      return node[id];\n\t    },\n\t    set: function(node, value) {\n\t      return node[this._] = value;\n\t    },\n\t    remove: function(node) {\n\t      return this._ in node && delete node[this._];\n\t    },\n\t    toString: function() {\n\t      return this._;\n\t    }\n\t  };\n\t\n\t  var matcher = function(selector) {\n\t    return function() {\n\t      return this.matches(selector);\n\t    };\n\t  };\n\t\n\t  if (typeof document !== \"undefined\") {\n\t    var element = document.documentElement;\n\t    if (!element.matches) {\n\t      var vendorMatches = element.webkitMatchesSelector\n\t          || element.msMatchesSelector\n\t          || element.mozMatchesSelector\n\t          || element.oMatchesSelector;\n\t      matcher = function(selector) {\n\t        return function() {\n\t          return vendorMatches.call(this, selector);\n\t        };\n\t      };\n\t    }\n\t  }\n\t\n\t  var matcher$1 = matcher;\n\t\n\t  var filterEvents = {};\n\t\n\t  exports.event = null;\n\t\n\t  if (typeof document !== \"undefined\") {\n\t    var element$1 = document.documentElement;\n\t    if (!(\"onmouseenter\" in element$1)) {\n\t      filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t    }\n\t  }\n\t\n\t  function filterContextListener(listener, index, group) {\n\t    listener = contextListener(listener, index, group);\n\t    return function(event) {\n\t      var related = event.relatedTarget;\n\t      if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t        listener.call(this, event);\n\t      }\n\t    };\n\t  }\n\t\n\t  function contextListener(listener, index, group) {\n\t    return function(event1) {\n\t      var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t      exports.event = event1;\n\t      try {\n\t        listener.call(this, this.__data__, index, group);\n\t      } finally {\n\t        exports.event = event0;\n\t      }\n\t    };\n\t  }\n\t\n\t  function parseTypenames$1(typenames) {\n\t    return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t      var name = \"\", i = t.indexOf(\".\");\n\t      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t      return {type: t, name: name};\n\t    });\n\t  }\n\t\n\t  function onRemove(typename) {\n\t    return function() {\n\t      var on = this.__on;\n\t      if (!on) return;\n\t      for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t        if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t          this.removeEventListener(o.type, o.listener, o.capture);\n\t        } else {\n\t          on[++i] = o;\n\t        }\n\t      }\n\t      if (++i) on.length = i;\n\t      else delete this.__on;\n\t    };\n\t  }\n\t\n\t  function onAdd(typename, value, capture) {\n\t    var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t    return function(d, i, group) {\n\t      var on = this.__on, o, listener = wrap(value, i, group);\n\t      if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t        if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t          this.removeEventListener(o.type, o.listener, o.capture);\n\t          this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t          o.value = value;\n\t          return;\n\t        }\n\t      }\n\t      this.addEventListener(typename.type, listener, capture);\n\t      o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t      if (!on) this.__on = [o];\n\t      else on.push(o);\n\t    };\n\t  }\n\t\n\t  function selection_on(typename, value, capture) {\n\t    var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t    if (arguments.length < 2) {\n\t      var on = this.node().__on;\n\t      if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t        for (i = 0, o = on[j]; i < n; ++i) {\n\t          if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t            return o.value;\n\t          }\n\t        }\n\t      }\n\t      return;\n\t    }\n\t\n\t    on = value ? onAdd : onRemove;\n\t    if (capture == null) capture = false;\n\t    for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t    return this;\n\t  }\n\t\n\t  function customEvent(event1, listener, that, args) {\n\t    var event0 = exports.event;\n\t    event1.sourceEvent = exports.event;\n\t    exports.event = event1;\n\t    try {\n\t      return listener.apply(that, args);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  }\n\t\n\t  function sourceEvent() {\n\t    var current = exports.event, source;\n\t    while (source = current.sourceEvent) current = source;\n\t    return current;\n\t  }\n\t\n\t  function point$5(node, event) {\n\t    var svg = node.ownerSVGElement || node;\n\t\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      point.x = event.clientX, point.y = event.clientY;\n\t      point = point.matrixTransform(node.getScreenCTM().inverse());\n\t      return [point.x, point.y];\n\t    }\n\t\n\t    var rect = node.getBoundingClientRect();\n\t    return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t  }\n\t\n\t  function mouse(node) {\n\t    var event = sourceEvent();\n\t    if (event.changedTouches) event = event.changedTouches[0];\n\t    return point$5(node, event);\n\t  }\n\t\n\t  function none$2() {}\n\t\n\t  function selector(selector) {\n\t    return selector == null ? none$2 : function() {\n\t      return this.querySelector(selector);\n\t    };\n\t  }\n\t\n\t  function selection_select(select) {\n\t    if (typeof select !== \"function\") select = selector(select);\n\t\n\t    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          subgroup[i] = subnode;\n\t        }\n\t      }\n\t    }\n\t\n\t    return new Selection(subgroups, this._parents);\n\t  }\n\t\n\t  function empty() {\n\t    return [];\n\t  }\n\t\n\t  function selectorAll(selector) {\n\t    return selector == null ? empty : function() {\n\t      return this.querySelectorAll(selector);\n\t    };\n\t  }\n\t\n\t  function selection_selectAll(select) {\n\t    if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t        if (node = group[i]) {\n\t          subgroups.push(select.call(node, node.__data__, i, group));\n\t          parents.push(node);\n\t        }\n\t      }\n\t    }\n\t\n\t    return new Selection(subgroups, parents);\n\t  }\n\t\n\t  function selection_filter(match) {\n\t    if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t\n\t    return new Selection(subgroups, this._parents);\n\t  }\n\t\n\t  function sparse(update) {\n\t    return new Array(update.length);\n\t  }\n\t\n\t  function selection_enter() {\n\t    return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t  }\n\t\n\t  function EnterNode(parent, datum) {\n\t    this.ownerDocument = parent.ownerDocument;\n\t    this.namespaceURI = parent.namespaceURI;\n\t    this._next = null;\n\t    this._parent = parent;\n\t    this.__data__ = datum;\n\t  }\n\t\n\t  EnterNode.prototype = {\n\t    constructor: EnterNode,\n\t    appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t    insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t    querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t    querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t  };\n\t\n\t  function constant$4(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  var keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\t  function bindIndex(parent, group, enter, update, exit, data) {\n\t    var i = 0,\n\t        node,\n\t        groupLength = group.length,\n\t        dataLength = data.length;\n\t\n\t    // Put any non-null nodes that fit into update.\n\t    // Put any null nodes into enter.\n\t    // Put any remaining data into enter.\n\t    for (; i < dataLength; ++i) {\n\t      if (node = group[i]) {\n\t        node.__data__ = data[i];\n\t        update[i] = node;\n\t      } else {\n\t        enter[i] = new EnterNode(parent, data[i]);\n\t      }\n\t    }\n\t\n\t    // Put any non-null nodes that don’t fit into exit.\n\t    for (; i < groupLength; ++i) {\n\t      if (node = group[i]) {\n\t        exit[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  function bindKey(parent, group, enter, update, exit, data, key) {\n\t    var i,\n\t        node,\n\t        nodeByKeyValue = {},\n\t        groupLength = group.length,\n\t        dataLength = data.length,\n\t        keyValues = new Array(groupLength),\n\t        keyValue;\n\t\n\t    // Compute the key for each node.\n\t    // If multiple nodes have the same key, the duplicates are added to exit.\n\t    for (i = 0; i < groupLength; ++i) {\n\t      if (node = group[i]) {\n\t        keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t        if (keyValue in nodeByKeyValue) {\n\t          exit[i] = node;\n\t        } else {\n\t          nodeByKeyValue[keyValue] = node;\n\t        }\n\t      }\n\t    }\n\t\n\t    // Compute the key for each datum.\n\t    // If there a node associated with this key, join and add it to update.\n\t    // If there is not (or the key is a duplicate), add it to enter.\n\t    for (i = 0; i < dataLength; ++i) {\n\t      keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t      if (node = nodeByKeyValue[keyValue]) {\n\t        update[i] = node;\n\t        node.__data__ = data[i];\n\t        nodeByKeyValue[keyValue] = null;\n\t      } else {\n\t        enter[i] = new EnterNode(parent, data[i]);\n\t      }\n\t    }\n\t\n\t    // Add any remaining nodes that were not bound to data to exit.\n\t    for (i = 0; i < groupLength; ++i) {\n\t      if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t        exit[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  function selection_data(value, key) {\n\t    if (!value) {\n\t      data = new Array(this.size()), j = -1;\n\t      this.each(function(d) { data[++j] = d; });\n\t      return data;\n\t    }\n\t\n\t    var bind = key ? bindKey : bindIndex,\n\t        parents = this._parents,\n\t        groups = this._groups;\n\t\n\t    if (typeof value !== \"function\") value = constant$4(value);\n\t\n\t    for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t      var parent = parents[j],\n\t          group = groups[j],\n\t          groupLength = group.length,\n\t          data = value.call(parent, parent && parent.__data__, j, parents),\n\t          dataLength = data.length,\n\t          enterGroup = enter[j] = new Array(dataLength),\n\t          updateGroup = update[j] = new Array(dataLength),\n\t          exitGroup = exit[j] = new Array(groupLength);\n\t\n\t      bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t      // Now connect the enter nodes to their following update node, such that\n\t      // appendChild can insert the materialized enter node before this node,\n\t      // rather than at the end of the parent node.\n\t      for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t        if (previous = enterGroup[i0]) {\n\t          if (i0 >= i1) i1 = i0 + 1;\n\t          while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t          previous._next = next || null;\n\t        }\n\t      }\n\t    }\n\t\n\t    update = new Selection(update, parents);\n\t    update._enter = enter;\n\t    update._exit = exit;\n\t    return update;\n\t  }\n\t\n\t  function selection_exit() {\n\t    return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t  }\n\t\n\t  function selection_merge(selection) {\n\t\n\t    for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t        if (node = group0[i] || group1[i]) {\n\t          merge[i] = node;\n\t        }\n\t      }\n\t    }\n\t\n\t    for (; j < m0; ++j) {\n\t      merges[j] = groups0[j];\n\t    }\n\t\n\t    return new Selection(merges, this._parents);\n\t  }\n\t\n\t  function selection_order() {\n\t\n\t    for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t      for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function selection_sort(compare) {\n\t    if (!compare) compare = ascending$2;\n\t\n\t    function compareNode(a, b) {\n\t      return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t    }\n\t\n\t    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t        if (node = group[i]) {\n\t          sortgroup[i] = node;\n\t        }\n\t      }\n\t      sortgroup.sort(compareNode);\n\t    }\n\t\n\t    return new Selection(sortgroups, this._parents).order();\n\t  }\n\t\n\t  function ascending$2(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t\n\t  function selection_call() {\n\t    var callback = arguments[0];\n\t    arguments[0] = this;\n\t    callback.apply(null, arguments);\n\t    return this;\n\t  }\n\t\n\t  function selection_nodes() {\n\t    var nodes = new Array(this.size()), i = -1;\n\t    this.each(function() { nodes[++i] = this; });\n\t    return nodes;\n\t  }\n\t\n\t  function selection_node() {\n\t\n\t    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t\n\t    return null;\n\t  }\n\t\n\t  function selection_size() {\n\t    var size = 0;\n\t    this.each(function() { ++size; });\n\t    return size;\n\t  }\n\t\n\t  function selection_empty() {\n\t    return !this.node();\n\t  }\n\t\n\t  function selection_each(callback) {\n\t\n\t    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t        if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t      }\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function attrRemove(name) {\n\t    return function() {\n\t      this.removeAttribute(name);\n\t    };\n\t  }\n\t\n\t  function attrRemoveNS(fullname) {\n\t    return function() {\n\t      this.removeAttributeNS(fullname.space, fullname.local);\n\t    };\n\t  }\n\t\n\t  function attrConstant(name, value) {\n\t    return function() {\n\t      this.setAttribute(name, value);\n\t    };\n\t  }\n\t\n\t  function attrConstantNS(fullname, value) {\n\t    return function() {\n\t      this.setAttributeNS(fullname.space, fullname.local, value);\n\t    };\n\t  }\n\t\n\t  function attrFunction(name, value) {\n\t    return function() {\n\t      var v = value.apply(this, arguments);\n\t      if (v == null) this.removeAttribute(name);\n\t      else this.setAttribute(name, v);\n\t    };\n\t  }\n\t\n\t  function attrFunctionNS(fullname, value) {\n\t    return function() {\n\t      var v = value.apply(this, arguments);\n\t      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t      else this.setAttributeNS(fullname.space, fullname.local, v);\n\t    };\n\t  }\n\t\n\t  function selection_attr(name, value) {\n\t    var fullname = namespace(name);\n\t\n\t    if (arguments.length < 2) {\n\t      var node = this.node();\n\t      return fullname.local\n\t          ? node.getAttributeNS(fullname.space, fullname.local)\n\t          : node.getAttribute(fullname);\n\t    }\n\t\n\t    return this.each((value == null\n\t        ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t        ? (fullname.local ? attrFunctionNS : attrFunction)\n\t        : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t  }\n\t\n\t  function window(node) {\n\t    return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t        || (node.document && node) // node is a Window\n\t        || node.defaultView; // node is a Document\n\t  }\n\t\n\t  function styleRemove(name) {\n\t    return function() {\n\t      this.style.removeProperty(name);\n\t    };\n\t  }\n\t\n\t  function styleConstant(name, value, priority) {\n\t    return function() {\n\t      this.style.setProperty(name, value, priority);\n\t    };\n\t  }\n\t\n\t  function styleFunction(name, value, priority) {\n\t    return function() {\n\t      var v = value.apply(this, arguments);\n\t      if (v == null) this.style.removeProperty(name);\n\t      else this.style.setProperty(name, v, priority);\n\t    };\n\t  }\n\t\n\t  function selection_style(name, value, priority) {\n\t    var node;\n\t    return arguments.length > 1\n\t        ? this.each((value == null\n\t              ? styleRemove : typeof value === \"function\"\n\t              ? styleFunction\n\t              : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t        : window(node = this.node())\n\t            .getComputedStyle(node, null)\n\t            .getPropertyValue(name);\n\t  }\n\t\n\t  function propertyRemove(name) {\n\t    return function() {\n\t      delete this[name];\n\t    };\n\t  }\n\t\n\t  function propertyConstant(name, value) {\n\t    return function() {\n\t      this[name] = value;\n\t    };\n\t  }\n\t\n\t  function propertyFunction(name, value) {\n\t    return function() {\n\t      var v = value.apply(this, arguments);\n\t      if (v == null) delete this[name];\n\t      else this[name] = v;\n\t    };\n\t  }\n\t\n\t  function selection_property(name, value) {\n\t    return arguments.length > 1\n\t        ? this.each((value == null\n\t            ? propertyRemove : typeof value === \"function\"\n\t            ? propertyFunction\n\t            : propertyConstant)(name, value))\n\t        : this.node()[name];\n\t  }\n\t\n\t  function classArray(string) {\n\t    return string.trim().split(/^|\\s+/);\n\t  }\n\t\n\t  function classList(node) {\n\t    return node.classList || new ClassList(node);\n\t  }\n\t\n\t  function ClassList(node) {\n\t    this._node = node;\n\t    this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t  }\n\t\n\t  ClassList.prototype = {\n\t    add: function(name) {\n\t      var i = this._names.indexOf(name);\n\t      if (i < 0) {\n\t        this._names.push(name);\n\t        this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t      }\n\t    },\n\t    remove: function(name) {\n\t      var i = this._names.indexOf(name);\n\t      if (i >= 0) {\n\t        this._names.splice(i, 1);\n\t        this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t      }\n\t    },\n\t    contains: function(name) {\n\t      return this._names.indexOf(name) >= 0;\n\t    }\n\t  };\n\t\n\t  function classedAdd(node, names) {\n\t    var list = classList(node), i = -1, n = names.length;\n\t    while (++i < n) list.add(names[i]);\n\t  }\n\t\n\t  function classedRemove(node, names) {\n\t    var list = classList(node), i = -1, n = names.length;\n\t    while (++i < n) list.remove(names[i]);\n\t  }\n\t\n\t  function classedTrue(names) {\n\t    return function() {\n\t      classedAdd(this, names);\n\t    };\n\t  }\n\t\n\t  function classedFalse(names) {\n\t    return function() {\n\t      classedRemove(this, names);\n\t    };\n\t  }\n\t\n\t  function classedFunction(names, value) {\n\t    return function() {\n\t      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t    };\n\t  }\n\t\n\t  function selection_classed(name, value) {\n\t    var names = classArray(name + \"\");\n\t\n\t    if (arguments.length < 2) {\n\t      var list = classList(this.node()), i = -1, n = names.length;\n\t      while (++i < n) if (!list.contains(names[i])) return false;\n\t      return true;\n\t    }\n\t\n\t    return this.each((typeof value === \"function\"\n\t        ? classedFunction : value\n\t        ? classedTrue\n\t        : classedFalse)(names, value));\n\t  }\n\t\n\t  function textRemove() {\n\t    this.textContent = \"\";\n\t  }\n\t\n\t  function textConstant(value) {\n\t    return function() {\n\t      this.textContent = value;\n\t    };\n\t  }\n\t\n\t  function textFunction(value) {\n\t    return function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    };\n\t  }\n\t\n\t  function selection_text(value) {\n\t    return arguments.length\n\t        ? this.each(value == null\n\t            ? textRemove : (typeof value === \"function\"\n\t            ? textFunction\n\t            : textConstant)(value))\n\t        : this.node().textContent;\n\t  }\n\t\n\t  function htmlRemove() {\n\t    this.innerHTML = \"\";\n\t  }\n\t\n\t  function htmlConstant(value) {\n\t    return function() {\n\t      this.innerHTML = value;\n\t    };\n\t  }\n\t\n\t  function htmlFunction(value) {\n\t    return function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    };\n\t  }\n\t\n\t  function selection_html(value) {\n\t    return arguments.length\n\t        ? this.each(value == null\n\t            ? htmlRemove : (typeof value === \"function\"\n\t            ? htmlFunction\n\t            : htmlConstant)(value))\n\t        : this.node().innerHTML;\n\t  }\n\t\n\t  function raise$1() {\n\t    if (this.nextSibling) this.parentNode.appendChild(this);\n\t  }\n\t\n\t  function selection_raise() {\n\t    return this.each(raise$1);\n\t  }\n\t\n\t  function lower() {\n\t    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t  }\n\t\n\t  function selection_lower() {\n\t    return this.each(lower);\n\t  }\n\t\n\t  function selection_append(name) {\n\t    var create = typeof name === \"function\" ? name : creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(create.apply(this, arguments));\n\t    });\n\t  }\n\t\n\t  function constantNull() {\n\t    return null;\n\t  }\n\t\n\t  function selection_insert(name, before) {\n\t    var create = typeof name === \"function\" ? name : creator(name),\n\t        select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t    });\n\t  }\n\t\n\t  function remove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t\n\t  function selection_remove() {\n\t    return this.each(remove);\n\t  }\n\t\n\t  function selection_datum(value) {\n\t    return arguments.length\n\t        ? this.property(\"__data__\", value)\n\t        : this.node().__data__;\n\t  }\n\t\n\t  function dispatchEvent(node, type, params) {\n\t    var window$$ = window(node),\n\t        event = window$$.CustomEvent;\n\t\n\t    if (event) {\n\t      event = new event(type, params);\n\t    } else {\n\t      event = window$$.document.createEvent(\"Event\");\n\t      if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t      else event.initEvent(type, false, false);\n\t    }\n\t\n\t    node.dispatchEvent(event);\n\t  }\n\t\n\t  function dispatchConstant(type, params) {\n\t    return function() {\n\t      return dispatchEvent(this, type, params);\n\t    };\n\t  }\n\t\n\t  function dispatchFunction(type, params) {\n\t    return function() {\n\t      return dispatchEvent(this, type, params.apply(this, arguments));\n\t    };\n\t  }\n\t\n\t  function selection_dispatch(type, params) {\n\t    return this.each((typeof params === \"function\"\n\t        ? dispatchFunction\n\t        : dispatchConstant)(type, params));\n\t  }\n\t\n\t  var root = [null];\n\t\n\t  function Selection(groups, parents) {\n\t    this._groups = groups;\n\t    this._parents = parents;\n\t  }\n\t\n\t  function selection() {\n\t    return new Selection([[document.documentElement]], root);\n\t  }\n\t\n\t  Selection.prototype = selection.prototype = {\n\t    constructor: Selection,\n\t    select: selection_select,\n\t    selectAll: selection_selectAll,\n\t    filter: selection_filter,\n\t    data: selection_data,\n\t    enter: selection_enter,\n\t    exit: selection_exit,\n\t    merge: selection_merge,\n\t    order: selection_order,\n\t    sort: selection_sort,\n\t    call: selection_call,\n\t    nodes: selection_nodes,\n\t    node: selection_node,\n\t    size: selection_size,\n\t    empty: selection_empty,\n\t    each: selection_each,\n\t    attr: selection_attr,\n\t    style: selection_style,\n\t    property: selection_property,\n\t    classed: selection_classed,\n\t    text: selection_text,\n\t    html: selection_html,\n\t    raise: selection_raise,\n\t    lower: selection_lower,\n\t    append: selection_append,\n\t    insert: selection_insert,\n\t    remove: selection_remove,\n\t    datum: selection_datum,\n\t    on: selection_on,\n\t    dispatch: selection_dispatch\n\t  };\n\t\n\t  function select(selector) {\n\t    return typeof selector === \"string\"\n\t        ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t        : new Selection([[selector]], root);\n\t  }\n\t\n\t  function selectAll(selector) {\n\t    return typeof selector === \"string\"\n\t        ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t        : new Selection([selector == null ? [] : selector], root);\n\t  }\n\t\n\t  function touch(node, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t    for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return point$5(node, touch);\n\t      }\n\t    }\n\t\n\t    return null;\n\t  }\n\t\n\t  function touches(node, touches) {\n\t    if (touches == null) touches = sourceEvent().touches;\n\t\n\t    for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t      points[i] = point$5(node, touches[i]);\n\t    }\n\t\n\t    return points;\n\t  }\n\t\n\t  var emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\t  var emptyTween = [];\n\t\n\t  var CREATED = 0;\n\t  var SCHEDULED = 1;\n\t  var STARTING = 2;\n\t  var STARTED = 3;\n\t  var ENDING = 4;\n\t  var ENDED = 5;\n\t\n\t  function schedule(node, name, id, index, group, timing) {\n\t    var schedules = node.__transition;\n\t    if (!schedules) node.__transition = {};\n\t    else if (id in schedules) return;\n\t    create(node, id, {\n\t      name: name,\n\t      index: index, // For context during callback.\n\t      group: group, // For context during callback.\n\t      on: emptyOn,\n\t      tween: emptyTween,\n\t      time: timing.time,\n\t      delay: timing.delay,\n\t      duration: timing.duration,\n\t      ease: timing.ease,\n\t      timer: null,\n\t      state: CREATED\n\t    });\n\t  }\n\t\n\t  function init(node, id) {\n\t    var schedule = node.__transition;\n\t    if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t    return schedule;\n\t  }\n\t\n\t  function set$2(node, id) {\n\t    var schedule = node.__transition;\n\t    if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t    return schedule;\n\t  }\n\t\n\t  function get$1(node, id) {\n\t    var schedule = node.__transition;\n\t    if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t    return schedule;\n\t  }\n\t\n\t  function create(node, id, self) {\n\t    var schedules = node.__transition,\n\t        tween;\n\t\n\t    // Initialize the self timer when the transition is created.\n\t    // Note the actual delay is not known until the first callback!\n\t    schedules[id] = self;\n\t    self.timer = timer(schedule, 0, self.time);\n\t\n\t    // If the delay is greater than this first sleep, sleep some more;\n\t    // otherwise, start immediately.\n\t    function schedule(elapsed) {\n\t      self.state = SCHEDULED;\n\t      if (self.delay <= elapsed) start(elapsed - self.delay);\n\t      else self.timer.restart(start, self.delay, self.time);\n\t    }\n\t\n\t    function start(elapsed) {\n\t      var i, j, n, o;\n\t\n\t      for (i in schedules) {\n\t        o = schedules[i];\n\t        if (o.name !== self.name) continue;\n\t\n\t        // Interrupt the active transition, if any.\n\t        // Dispatch the interrupt event.\n\t        if (o.state === STARTED) {\n\t          o.state = ENDED;\n\t          o.timer.stop();\n\t          o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t          delete schedules[i];\n\t        }\n\t\n\t        // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t        // because the cancelled transitions never started. Note that this also\n\t        // removes this transition from the pending list!\n\t        else if (+i < id) {\n\t          o.state = ENDED;\n\t          o.timer.stop();\n\t          delete schedules[i];\n\t        }\n\t      }\n\t\n\t      // Defer the first tick to end of the current frame; see mbostock/d3#1576.\n\t      // Note the transition may be canceled after start and before the first tick!\n\t      // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t      // Assuming this is successful, subsequent callbacks go straight to tick.\n\t      timeout$1(function() {\n\t        if (self.state === STARTED) {\n\t          self.timer.restart(tick, self.delay, self.time);\n\t          tick(elapsed);\n\t        }\n\t      });\n\t\n\t      // Dispatch the start event.\n\t      // Note this must be done before the tween are initialized.\n\t      self.state = STARTING;\n\t      self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t      if (self.state !== STARTING) return; // interrupted\n\t      self.state = STARTED;\n\t\n\t      // Initialize the tween, deleting null tween.\n\t      tween = new Array(n = self.tween.length);\n\t      for (i = 0, j = -1; i < n; ++i) {\n\t        if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t          tween[++j] = o;\n\t        }\n\t      }\n\t      tween.length = j + 1;\n\t    }\n\t\n\t    function tick(elapsed) {\n\t      var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.state = ENDING, 1),\n\t          i = -1,\n\t          n = tween.length;\n\t\n\t      while (++i < n) {\n\t        tween[i].call(null, t);\n\t      }\n\t\n\t      // Dispatch the end event.\n\t      if (self.state === ENDING) {\n\t        self.state = ENDED;\n\t        self.timer.stop();\n\t        self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t        for (i in schedules) if (+i !== id) return void delete schedules[id];\n\t        delete node.__transition;\n\t      }\n\t    }\n\t  }\n\t\n\t  function interrupt(node, name) {\n\t    var schedules = node.__transition,\n\t        schedule,\n\t        active,\n\t        empty = true,\n\t        i;\n\t\n\t    if (!schedules) return;\n\t\n\t    name = name == null ? null : name + \"\";\n\t\n\t    for (i in schedules) {\n\t      if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n\t      active = schedule.state === STARTED;\n\t      schedule.state = ENDED;\n\t      schedule.timer.stop();\n\t      if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n\t      delete schedules[i];\n\t    }\n\t\n\t    if (empty) delete node.__transition;\n\t  }\n\t\n\t  function selection_interrupt(name) {\n\t    return this.each(function() {\n\t      interrupt(this, name);\n\t    });\n\t  }\n\t\n\t  function tweenRemove(id, name) {\n\t    var tween0, tween1;\n\t    return function() {\n\t      var schedule = set$2(this, id),\n\t          tween = schedule.tween;\n\t\n\t      // If this node shared tween with the previous node,\n\t      // just assign the updated shared tween and we’re done!\n\t      // Otherwise, copy-on-write.\n\t      if (tween !== tween0) {\n\t        tween1 = tween0 = tween;\n\t        for (var i = 0, n = tween1.length; i < n; ++i) {\n\t          if (tween1[i].name === name) {\n\t            tween1 = tween1.slice();\n\t            tween1.splice(i, 1);\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      schedule.tween = tween1;\n\t    };\n\t  }\n\t\n\t  function tweenFunction(id, name, value) {\n\t    var tween0, tween1;\n\t    if (typeof value !== \"function\") throw new Error;\n\t    return function() {\n\t      var schedule = set$2(this, id),\n\t          tween = schedule.tween;\n\t\n\t      // If this node shared tween with the previous node,\n\t      // just assign the updated shared tween and we’re done!\n\t      // Otherwise, copy-on-write.\n\t      if (tween !== tween0) {\n\t        tween1 = (tween0 = tween).slice();\n\t        for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t          if (tween1[i].name === name) {\n\t            tween1[i] = t;\n\t            break;\n\t          }\n\t        }\n\t        if (i === n) tween1.push(t);\n\t      }\n\t\n\t      schedule.tween = tween1;\n\t    };\n\t  }\n\t\n\t  function transition_tween(name, value) {\n\t    var id = this._id;\n\t\n\t    name += \"\";\n\t\n\t    if (arguments.length < 2) {\n\t      var tween = get$1(this.node(), id).tween;\n\t      for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t        if ((t = tween[i]).name === name) {\n\t          return t.value;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t\n\t    return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t  }\n\t\n\t  function tweenValue(transition, name, value) {\n\t    var id = transition._id;\n\t\n\t    transition.each(function() {\n\t      var schedule = set$2(this, id);\n\t      (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n\t    });\n\t\n\t    return function(node) {\n\t      return get$1(node, id).value[name];\n\t    };\n\t  }\n\t\n\t  function interpolate$1(a, b) {\n\t    var c;\n\t    return (typeof b === \"number\" ? interpolateNumber\n\t        : b instanceof color ? interpolateRgb\n\t        : (c = color(b)) ? (b = c, interpolateRgb)\n\t        : interpolateString)(a, b);\n\t  }\n\t\n\t  function attrRemove$1(name) {\n\t    return function() {\n\t      this.removeAttribute(name);\n\t    };\n\t  }\n\t\n\t  function attrRemoveNS$1(fullname) {\n\t    return function() {\n\t      this.removeAttributeNS(fullname.space, fullname.local);\n\t    };\n\t  }\n\t\n\t  function attrConstant$1(name, interpolate, value1) {\n\t    var value00,\n\t        interpolate0;\n\t    return function() {\n\t      var value0 = this.getAttribute(name);\n\t      return value0 === value1 ? null\n\t          : value0 === value00 ? interpolate0\n\t          : interpolate0 = interpolate(value00 = value0, value1);\n\t    };\n\t  }\n\t\n\t  function attrConstantNS$1(fullname, interpolate, value1) {\n\t    var value00,\n\t        interpolate0;\n\t    return function() {\n\t      var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t      return value0 === value1 ? null\n\t          : value0 === value00 ? interpolate0\n\t          : interpolate0 = interpolate(value00 = value0, value1);\n\t    };\n\t  }\n\t\n\t  function attrFunction$1(name, interpolate, value) {\n\t    var value00,\n\t        value10,\n\t        interpolate0;\n\t    return function() {\n\t      var value0, value1 = value(this);\n\t      if (value1 == null) return void this.removeAttribute(name);\n\t      value0 = this.getAttribute(name);\n\t      return value0 === value1 ? null\n\t          : value0 === value00 && value1 === value10 ? interpolate0\n\t          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n\t    };\n\t  }\n\t\n\t  function attrFunctionNS$1(fullname, interpolate, value) {\n\t    var value00,\n\t        value10,\n\t        interpolate0;\n\t    return function() {\n\t      var value0, value1 = value(this);\n\t      if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t      value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t      return value0 === value1 ? null\n\t          : value0 === value00 && value1 === value10 ? interpolate0\n\t          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n\t    };\n\t  }\n\t\n\t  function transition_attr(name, value) {\n\t    var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform$2 : interpolate$1;\n\t    return this.attrTween(name, typeof value === \"function\"\n\t        ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t        : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t        : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n\t  }\n\t\n\t  function attrTweenNS(fullname, value) {\n\t    function tween() {\n\t      var node = this, i = value.apply(node, arguments);\n\t      return i && function(t) {\n\t        node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t      };\n\t    }\n\t    tween._value = value;\n\t    return tween;\n\t  }\n\t\n\t  function attrTween(name, value) {\n\t    function tween() {\n\t      var node = this, i = value.apply(node, arguments);\n\t      return i && function(t) {\n\t        node.setAttribute(name, i(t));\n\t      };\n\t    }\n\t    tween._value = value;\n\t    return tween;\n\t  }\n\t\n\t  function transition_attrTween(name, value) {\n\t    var key = \"attr.\" + name;\n\t    if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t    if (value == null) return this.tween(key, null);\n\t    if (typeof value !== \"function\") throw new Error;\n\t    var fullname = namespace(name);\n\t    return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t  }\n\t\n\t  function delayFunction(id, value) {\n\t    return function() {\n\t      init(this, id).delay = +value.apply(this, arguments);\n\t    };\n\t  }\n\t\n\t  function delayConstant(id, value) {\n\t    return value = +value, function() {\n\t      init(this, id).delay = value;\n\t    };\n\t  }\n\t\n\t  function transition_delay(value) {\n\t    var id = this._id;\n\t\n\t    return arguments.length\n\t        ? this.each((typeof value === \"function\"\n\t            ? delayFunction\n\t            : delayConstant)(id, value))\n\t        : get$1(this.node(), id).delay;\n\t  }\n\t\n\t  function durationFunction(id, value) {\n\t    return function() {\n\t      set$2(this, id).duration = +value.apply(this, arguments);\n\t    };\n\t  }\n\t\n\t  function durationConstant(id, value) {\n\t    return value = +value, function() {\n\t      set$2(this, id).duration = value;\n\t    };\n\t  }\n\t\n\t  function transition_duration(value) {\n\t    var id = this._id;\n\t\n\t    return arguments.length\n\t        ? this.each((typeof value === \"function\"\n\t            ? durationFunction\n\t            : durationConstant)(id, value))\n\t        : get$1(this.node(), id).duration;\n\t  }\n\t\n\t  function easeConstant(id, value) {\n\t    if (typeof value !== \"function\") throw new Error;\n\t    return function() {\n\t      set$2(this, id).ease = value;\n\t    };\n\t  }\n\t\n\t  function transition_ease(value) {\n\t    var id = this._id;\n\t\n\t    return arguments.length\n\t        ? this.each(easeConstant(id, value))\n\t        : get$1(this.node(), id).ease;\n\t  }\n\t\n\t  function transition_filter(match) {\n\t    if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t\n\t    return new Transition(subgroups, this._parents, this._name, this._id);\n\t  }\n\t\n\t  function transition_merge(transition) {\n\t    if (transition._id !== this._id) throw new Error;\n\t\n\t    for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t        if (node = group0[i] || group1[i]) {\n\t          merge[i] = node;\n\t        }\n\t      }\n\t    }\n\t\n\t    for (; j < m0; ++j) {\n\t      merges[j] = groups0[j];\n\t    }\n\t\n\t    return new Transition(merges, this._parents, this._name, this._id);\n\t  }\n\t\n\t  function start$1(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t      var i = t.indexOf(\".\");\n\t      if (i >= 0) t = t.slice(0, i);\n\t      return !t || t === \"start\";\n\t    });\n\t  }\n\t\n\t  function onFunction(id, name, listener) {\n\t    var on0, on1, sit = start$1(name) ? init : set$2;\n\t    return function() {\n\t      var schedule = sit(this, id),\n\t          on = schedule.on;\n\t\n\t      // If this node shared a dispatch with the previous node,\n\t      // just assign the updated shared dispatch and we’re done!\n\t      // Otherwise, copy-on-write.\n\t      if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t      schedule.on = on1;\n\t    };\n\t  }\n\t\n\t  function transition_on(name, listener) {\n\t    var id = this._id;\n\t\n\t    return arguments.length < 2\n\t        ? get$1(this.node(), id).on.on(name)\n\t        : this.each(onFunction(id, name, listener));\n\t  }\n\t\n\t  function removeFunction(id) {\n\t    return function() {\n\t      var parent = this.parentNode;\n\t      for (var i in this.__transition) if (+i !== id) return;\n\t      if (parent) parent.removeChild(this);\n\t    };\n\t  }\n\t\n\t  function transition_remove() {\n\t    return this.on(\"end.remove\", removeFunction(this._id));\n\t  }\n\t\n\t  function transition_select(select) {\n\t    var name = this._name,\n\t        id = this._id;\n\t\n\t    if (typeof select !== \"function\") select = selector(select);\n\t\n\t    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          subgroup[i] = subnode;\n\t          schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t        }\n\t      }\n\t    }\n\t\n\t    return new Transition(subgroups, this._parents, name, id);\n\t  }\n\t\n\t  function transition_selectAll(select) {\n\t    var name = this._name,\n\t        id = this._id;\n\t\n\t    if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t        if (node = group[i]) {\n\t          for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t            if (child = children[k]) {\n\t              schedule(child, name, id, k, children, inherit);\n\t            }\n\t          }\n\t          subgroups.push(children);\n\t          parents.push(node);\n\t        }\n\t      }\n\t    }\n\t\n\t    return new Transition(subgroups, parents, name, id);\n\t  }\n\t\n\t  var Selection$1 = selection.prototype.constructor;\n\t\n\t  function transition_selection() {\n\t    return new Selection$1(this._groups, this._parents);\n\t  }\n\t\n\t  function styleRemove$1(name, interpolate) {\n\t    var value00,\n\t        value10,\n\t        interpolate0;\n\t    return function() {\n\t      var style = window(this).getComputedStyle(this, null),\n\t          value0 = style.getPropertyValue(name),\n\t          value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t      return value0 === value1 ? null\n\t          : value0 === value00 && value1 === value10 ? interpolate0\n\t          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n\t    };\n\t  }\n\t\n\t  function styleRemoveEnd(name) {\n\t    return function() {\n\t      this.style.removeProperty(name);\n\t    };\n\t  }\n\t\n\t  function styleConstant$1(name, interpolate, value1) {\n\t    var value00,\n\t        interpolate0;\n\t    return function() {\n\t      var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n\t      return value0 === value1 ? null\n\t          : value0 === value00 ? interpolate0\n\t          : interpolate0 = interpolate(value00 = value0, value1);\n\t    };\n\t  }\n\t\n\t  function styleFunction$1(name, interpolate, value) {\n\t    var value00,\n\t        value10,\n\t        interpolate0;\n\t    return function() {\n\t      var style = window(this).getComputedStyle(this, null),\n\t          value0 = style.getPropertyValue(name),\n\t          value1 = value(this);\n\t      if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t      return value0 === value1 ? null\n\t          : value0 === value00 && value1 === value10 ? interpolate0\n\t          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n\t    };\n\t  }\n\t\n\t  function transition_style(name, value, priority) {\n\t    var i = (name += \"\") === \"transform\" ? interpolateTransform$1 : interpolate$1;\n\t    return value == null ? this\n\t            .styleTween(name, styleRemove$1(name, i))\n\t            .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t        : this.styleTween(name, typeof value === \"function\"\n\t            ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t            : styleConstant$1(name, i, value), priority);\n\t  }\n\t\n\t  function styleTween(name, value, priority) {\n\t    function tween() {\n\t      var node = this, i = value.apply(node, arguments);\n\t      return i && function(t) {\n\t        node.style.setProperty(name, i(t), priority);\n\t      };\n\t    }\n\t    tween._value = value;\n\t    return tween;\n\t  }\n\t\n\t  function transition_styleTween(name, value, priority) {\n\t    var key = \"style.\" + (name += \"\");\n\t    if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t    if (value == null) return this.tween(key, null);\n\t    if (typeof value !== \"function\") throw new Error;\n\t    return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t  }\n\t\n\t  function textConstant$1(value) {\n\t    return function() {\n\t      this.textContent = value;\n\t    };\n\t  }\n\t\n\t  function textFunction$1(value) {\n\t    return function() {\n\t      var value1 = value(this);\n\t      this.textContent = value1 == null ? \"\" : value1;\n\t    };\n\t  }\n\t\n\t  function transition_text(value) {\n\t    return this.tween(\"text\", typeof value === \"function\"\n\t        ? textFunction$1(tweenValue(this, \"text\", value))\n\t        : textConstant$1(value == null ? \"\" : value + \"\"));\n\t  }\n\t\n\t  function transition_transition() {\n\t    var name = this._name,\n\t        id0 = this._id,\n\t        id1 = newId();\n\t\n\t    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t        if (node = group[i]) {\n\t          var inherit = get$1(node, id0);\n\t          schedule(node, name, id1, i, group, {\n\t            time: inherit.time + inherit.delay + inherit.duration,\n\t            delay: 0,\n\t            duration: inherit.duration,\n\t            ease: inherit.ease\n\t          });\n\t        }\n\t      }\n\t    }\n\t\n\t    return new Transition(groups, this._parents, name, id1);\n\t  }\n\t\n\t  var id = 0;\n\t\n\t  function Transition(groups, parents, name, id) {\n\t    this._groups = groups;\n\t    this._parents = parents;\n\t    this._name = name;\n\t    this._id = id;\n\t  }\n\t\n\t  function transition(name) {\n\t    return selection().transition(name);\n\t  }\n\t\n\t  function newId() {\n\t    return ++id;\n\t  }\n\t\n\t  var selection_prototype = selection.prototype;\n\t\n\t  Transition.prototype = transition.prototype = {\n\t    constructor: Transition,\n\t    select: transition_select,\n\t    selectAll: transition_selectAll,\n\t    filter: transition_filter,\n\t    merge: transition_merge,\n\t    selection: transition_selection,\n\t    transition: transition_transition,\n\t    call: selection_prototype.call,\n\t    nodes: selection_prototype.nodes,\n\t    node: selection_prototype.node,\n\t    size: selection_prototype.size,\n\t    empty: selection_prototype.empty,\n\t    each: selection_prototype.each,\n\t    on: transition_on,\n\t    attr: transition_attr,\n\t    attrTween: transition_attrTween,\n\t    style: transition_style,\n\t    styleTween: transition_styleTween,\n\t    text: transition_text,\n\t    remove: transition_remove,\n\t    tween: transition_tween,\n\t    delay: transition_delay,\n\t    duration: transition_duration,\n\t    ease: transition_ease\n\t  };\n\t\n\t  var defaultTiming = {\n\t    time: null, // Set on use.\n\t    delay: 0,\n\t    duration: 250,\n\t    ease: easeCubicInOut\n\t  };\n\t\n\t  function inherit(node, id) {\n\t    var timing;\n\t    while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t      if (!(node = node.parentNode)) {\n\t        return defaultTiming.time = now(), defaultTiming;\n\t      }\n\t    }\n\t    return timing;\n\t  }\n\t\n\t  function selection_transition(name) {\n\t    var id,\n\t        timing;\n\t\n\t    if (name instanceof Transition) {\n\t      id = name._id, name = name._name;\n\t    } else {\n\t      id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t    }\n\t\n\t    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t        if (node = group[i]) {\n\t          schedule(node, name, id, i, group, timing || inherit(node, id));\n\t        }\n\t      }\n\t    }\n\t\n\t    return new Transition(groups, this._parents, name, id);\n\t  }\n\t\n\t  selection.prototype.interrupt = selection_interrupt;\n\t  selection.prototype.transition = selection_transition;\n\t\n\t  var root$1 = [null];\n\t\n\t  function active(node, name) {\n\t    var schedules = node.__transition,\n\t        schedule,\n\t        i;\n\t\n\t    if (schedules) {\n\t      name = name == null ? null : name + \"\";\n\t      for (i in schedules) {\n\t        if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n\t          return new Transition([[node]], root$1, name, +i);\n\t        }\n\t      }\n\t    }\n\t\n\t    return null;\n\t  }\n\t\n\t  var slice$4 = Array.prototype.slice;\n\t\n\t  function identity$5(x) {\n\t    return x;\n\t  }\n\t\n\t  var top = 1;\n\t  var right = 2;\n\t  var bottom = 3;\n\t  var left = 4;\n\tvar   epsilon$2 = 1e-6;\n\t  function translateX(scale0, scale1, d) {\n\t    var x = scale0(d);\n\t    return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n\t  }\n\t\n\t  function translateY(scale0, scale1, d) {\n\t    var y = scale0(d);\n\t    return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n\t  }\n\t\n\t  function center(scale) {\n\t    var width = scale.bandwidth() / 2;\n\t    return function(d) {\n\t      return scale(d) + width;\n\t    };\n\t  }\n\t\n\t  function entering() {\n\t    return !this.__axis;\n\t  }\n\t\n\t  function axis(orient, scale) {\n\t    var tickArguments = [],\n\t        tickValues = null,\n\t        tickFormat = null,\n\t        tickSizeInner = 6,\n\t        tickSizeOuter = 6,\n\t        tickPadding = 3;\n\t\n\t    function axis(context) {\n\t      var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t          format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n\t          spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t          transform = orient === top || orient === bottom ? translateX : translateY,\n\t          range = scale.range(),\n\t          range0 = range[0] + 0.5,\n\t          range1 = range[range.length - 1] + 0.5,\n\t          position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n\t          selection = context.selection ? context.selection() : context,\n\t          path = selection.selectAll(\".domain\").data([null]),\n\t          tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t          tickExit = tick.exit(),\n\t          tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t          line = tick.select(\"line\"),\n\t          text = tick.select(\"text\"),\n\t          k = orient === top || orient === left ? -1 : 1,\n\t          x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\t\n\t      path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t          .attr(\"class\", \"domain\")\n\t          .attr(\"stroke\", \"#000\"));\n\t\n\t      tick = tick.merge(tickEnter);\n\t\n\t      line = line.merge(tickEnter.append(\"line\")\n\t          .attr(\"stroke\", \"#000\")\n\t          .attr(x + \"2\", k * tickSizeInner)\n\t          .attr(y + \"1\", 0.5)\n\t          .attr(y + \"2\", 0.5));\n\t\n\t      text = text.merge(tickEnter.append(\"text\")\n\t          .attr(\"fill\", \"#000\")\n\t          .attr(x, k * spacing)\n\t          .attr(y, 0.5)\n\t          .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \".71em\" : \".32em\"));\n\t\n\t      if (context !== selection) {\n\t        path = path.transition(context);\n\t        tick = tick.transition(context);\n\t        line = line.transition(context);\n\t        text = text.transition(context);\n\t\n\t        tickExit = tickExit.transition(context)\n\t            .attr(\"opacity\", epsilon$2)\n\t            .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\t\n\t        tickEnter\n\t            .attr(\"opacity\", epsilon$2)\n\t            .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n\t      }\n\t\n\t      tickExit.remove();\n\t\n\t      path\n\t          .attr(\"d\", orient === left || orient == right\n\t              ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t              : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t      tick\n\t          .attr(\"opacity\", 1)\n\t          .attr(\"transform\", function(d) { return transform(position, position, d); });\n\t\n\t      line\n\t          .attr(x + \"2\", k * tickSizeInner);\n\t\n\t      text\n\t          .attr(x, k * spacing)\n\t          .text(format);\n\t\n\t      selection.filter(entering)\n\t          .attr(\"fill\", \"none\")\n\t          .attr(\"font-size\", 10)\n\t          .attr(\"font-family\", \"sans-serif\")\n\t          .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t      selection\n\t          .each(function() { this.__axis = position; });\n\t    }\n\t\n\t    axis.scale = function(_) {\n\t      return arguments.length ? (scale = _, axis) : scale;\n\t    };\n\t\n\t    axis.ticks = function() {\n\t      return tickArguments = slice$4.call(arguments), axis;\n\t    };\n\t\n\t    axis.tickArguments = function(_) {\n\t      return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n\t    };\n\t\n\t    axis.tickValues = function(_) {\n\t      return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n\t    };\n\t\n\t    axis.tickFormat = function(_) {\n\t      return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t    };\n\t\n\t    axis.tickSize = function(_) {\n\t      return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t    };\n\t\n\t    axis.tickSizeInner = function(_) {\n\t      return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t    };\n\t\n\t    axis.tickSizeOuter = function(_) {\n\t      return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t    };\n\t\n\t    axis.tickPadding = function(_) {\n\t      return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t    };\n\t\n\t    return axis;\n\t  }\n\t\n\t  function axisTop(scale) {\n\t    return axis(top, scale);\n\t  }\n\t\n\t  function axisRight(scale) {\n\t    return axis(right, scale);\n\t  }\n\t\n\t  function axisBottom(scale) {\n\t    return axis(bottom, scale);\n\t  }\n\t\n\t  function axisLeft(scale) {\n\t    return axis(left, scale);\n\t  }\n\t\n\t  function defaultSeparation(a, b) {\n\t    return a.parent === b.parent ? 1 : 2;\n\t  }\n\t\n\t  function meanX(children) {\n\t    return children.reduce(meanXReduce, 0) / children.length;\n\t  }\n\t\n\t  function meanXReduce(x, c) {\n\t    return x + c.x;\n\t  }\n\t\n\t  function maxY(children) {\n\t    return 1 + children.reduce(maxYReduce, 0);\n\t  }\n\t\n\t  function maxYReduce(y, c) {\n\t    return Math.max(y, c.y);\n\t  }\n\t\n\t  function leafLeft(node) {\n\t    var children;\n\t    while (children = node.children) node = children[0];\n\t    return node;\n\t  }\n\t\n\t  function leafRight(node) {\n\t    var children;\n\t    while (children = node.children) node = children[children.length - 1];\n\t    return node;\n\t  }\n\t\n\t  function cluster() {\n\t    var separation = defaultSeparation,\n\t        dx = 1,\n\t        dy = 1,\n\t        nodeSize = false;\n\t\n\t    function cluster(root) {\n\t      var previousNode,\n\t          x = 0;\n\t\n\t      // First walk, computing the initial x & y values.\n\t      root.eachAfter(function(node) {\n\t        var children = node.children;\n\t        if (children) {\n\t          node.x = meanX(children);\n\t          node.y = maxY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t\n\t      var left = leafLeft(root),\n\t          right = leafRight(root),\n\t          x0 = left.x - separation(left, right) / 2,\n\t          x1 = right.x + separation(right, left) / 2;\n\t\n\t      // Second walk, normalizing x & y to the desired size.\n\t      return root.eachAfter(nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * dx;\n\t        node.y = (root.y - node.y) * dy;\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * dx;\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t      });\n\t    }\n\t\n\t    cluster.separation = function(x) {\n\t      return arguments.length ? (separation = x, cluster) : separation;\n\t    };\n\t\n\t    cluster.size = function(x) {\n\t      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t    };\n\t\n\t    cluster.nodeSize = function(x) {\n\t      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t    };\n\t\n\t    return cluster;\n\t  }\n\t\n\t  function node_each(callback) {\n\t    var node = this, current, next = [node], children, i, n;\n\t    do {\n\t      current = next.reverse(), next = [];\n\t      while (node = current.pop()) {\n\t        callback(node), children = node.children;\n\t        if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t          next.push(children[i]);\n\t        }\n\t      }\n\t    } while (next.length);\n\t    return this;\n\t  }\n\t\n\t  function node_eachBefore(callback) {\n\t    var node = this, nodes = [node], children, i;\n\t    while (node = nodes.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = children.length - 1; i >= 0; --i) {\n\t        nodes.push(children[i]);\n\t      }\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function node_eachAfter(callback) {\n\t    var node = this, nodes = [node], next = [], children, i, n;\n\t    while (node = nodes.pop()) {\n\t      next.push(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        nodes.push(children[i]);\n\t      }\n\t    }\n\t    while (node = next.pop()) {\n\t      callback(node);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function node_sum(value) {\n\t    return this.eachAfter(function(node) {\n\t      var sum = +value(node.data) || 0,\n\t          children = node.children,\n\t          i = children && children.length;\n\t      while (--i >= 0) sum += children[i].value;\n\t      node.value = sum;\n\t    });\n\t  }\n\t\n\t  function node_sort(compare) {\n\t    return this.eachBefore(function(node) {\n\t      if (node.children) {\n\t        node.children.sort(compare);\n\t      }\n\t    });\n\t  }\n\t\n\t  function node_path(end) {\n\t    var start = this,\n\t        ancestor = leastCommonAncestor(start, end),\n\t        nodes = [start];\n\t    while (start !== ancestor) {\n\t      start = start.parent;\n\t      nodes.push(start);\n\t    }\n\t    var k = nodes.length;\n\t    while (end !== ancestor) {\n\t      nodes.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return nodes;\n\t  }\n\t\n\t  function leastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = a.ancestors(),\n\t        bNodes = b.ancestors(),\n\t        c = null;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t    while (a === b) {\n\t      c = a;\n\t      a = aNodes.pop();\n\t      b = bNodes.pop();\n\t    }\n\t    return c;\n\t  }\n\t\n\t  function node_ancestors() {\n\t    var node = this, nodes = [node];\n\t    while (node = node.parent) {\n\t      nodes.push(node);\n\t    }\n\t    return nodes;\n\t  }\n\t\n\t  function node_descendants() {\n\t    var nodes = [];\n\t    this.each(function(node) {\n\t      nodes.push(node);\n\t    });\n\t    return nodes;\n\t  }\n\t\n\t  function node_leaves() {\n\t    var leaves = [];\n\t    this.eachBefore(function(node) {\n\t      if (!node.children) {\n\t        leaves.push(node);\n\t      }\n\t    });\n\t    return leaves;\n\t  }\n\t\n\t  function node_links() {\n\t    var root = this, links = [];\n\t    root.each(function(node) {\n\t      if (node !== root) { // Don’t include the root’s parent, if any.\n\t        links.push({source: node.parent, target: node});\n\t      }\n\t    });\n\t    return links;\n\t  }\n\t\n\t  function hierarchy(data, children) {\n\t    var root = new Node(data),\n\t        valued = +data.value && (root.value = data.value),\n\t        node,\n\t        nodes = [root],\n\t        child,\n\t        childs,\n\t        i,\n\t        n;\n\t\n\t    if (children == null) children = defaultChildren;\n\t\n\t    while (node = nodes.pop()) {\n\t      if (valued) node.value = +node.data.value;\n\t      if ((childs = children(node.data)) && (n = childs.length)) {\n\t        node.children = new Array(n);\n\t        for (i = n - 1; i >= 0; --i) {\n\t          nodes.push(child = node.children[i] = new Node(childs[i]));\n\t          child.parent = node;\n\t          child.depth = node.depth + 1;\n\t        }\n\t      }\n\t    }\n\t\n\t    return root.eachBefore(computeHeight);\n\t  }\n\t\n\t  function node_copy() {\n\t    return hierarchy(this).eachBefore(copyData);\n\t  }\n\t\n\t  function defaultChildren(d) {\n\t    return d.children;\n\t  }\n\t\n\t  function copyData(node) {\n\t    node.data = node.data.data;\n\t  }\n\t\n\t  function computeHeight(node) {\n\t    var height = 0;\n\t    do node.height = height;\n\t    while ((node = node.parent) && (node.height < ++height));\n\t  }\n\t\n\t  function Node(data) {\n\t    this.data = data;\n\t    this.depth =\n\t    this.height = 0;\n\t    this.parent = null;\n\t  }\n\t\n\t  Node.prototype = hierarchy.prototype = {\n\t    constructor: Node,\n\t    each: node_each,\n\t    eachAfter: node_eachAfter,\n\t    eachBefore: node_eachBefore,\n\t    sum: node_sum,\n\t    sort: node_sort,\n\t    path: node_path,\n\t    ancestors: node_ancestors,\n\t    descendants: node_descendants,\n\t    leaves: node_leaves,\n\t    links: node_links,\n\t    copy: node_copy\n\t  };\n\t\n\t  function Node$2(value) {\n\t    this._ = value;\n\t    this.next = null;\n\t  }\n\t\n\t  function shuffle$1(array) {\n\t    var i,\n\t        n = (array = array.slice()).length,\n\t        head = null,\n\t        node = head;\n\t\n\t    while (n) {\n\t      var next = new Node$2(array[n - 1]);\n\t      if (node) node = node.next = next;\n\t      else node = head = next;\n\t      array[i] = array[--n];\n\t    }\n\t\n\t    return {\n\t      head: head,\n\t      tail: node\n\t    };\n\t  }\n\t\n\t  function enclose(circles) {\n\t    return encloseN(shuffle$1(circles), []);\n\t  }\n\t\n\t  function encloses(a, b) {\n\t    var dx = b.x - a.x,\n\t        dy = b.y - a.y,\n\t        dr = a.r - b.r;\n\t    return dr * dr + 1e-6 > dx * dx + dy * dy;\n\t  }\n\t\n\t  // Returns the smallest circle that contains circles L and intersects circles B.\n\t  function encloseN(L, B) {\n\t    var circle,\n\t        l0 = null,\n\t        l1 = L.head,\n\t        l2,\n\t        p1;\n\t\n\t    switch (B.length) {\n\t      case 1: circle = enclose1(B[0]); break;\n\t      case 2: circle = enclose2(B[0], B[1]); break;\n\t      case 3: circle = enclose3(B[0], B[1], B[2]); break;\n\t    }\n\t\n\t    while (l1) {\n\t      p1 = l1._, l2 = l1.next;\n\t      if (!circle || !encloses(circle, p1)) {\n\t\n\t        // Temporarily truncate L before l1.\n\t        if (l0) L.tail = l0, l0.next = null;\n\t        else L.head = L.tail = null;\n\t\n\t        B.push(p1);\n\t        circle = encloseN(L, B); // Note: reorders L!\n\t        B.pop();\n\t\n\t        // Move l1 to the front of L and reconnect the truncated list L.\n\t        if (L.head) l1.next = L.head, L.head = l1;\n\t        else l1.next = null, L.head = L.tail = l1;\n\t        l0 = L.tail, l0.next = l2;\n\t\n\t      } else {\n\t        l0 = l1;\n\t      }\n\t      l1 = l2;\n\t    }\n\t\n\t    L.tail = l0;\n\t    return circle;\n\t  }\n\t\n\t  function enclose1(a) {\n\t    return {\n\t      x: a.x,\n\t      y: a.y,\n\t      r: a.r\n\t    };\n\t  }\n\t\n\t  function enclose2(a, b) {\n\t    var x1 = a.x, y1 = a.y, r1 = a.r,\n\t        x2 = b.x, y2 = b.y, r2 = b.r,\n\t        x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t        l = Math.sqrt(x21 * x21 + y21 * y21);\n\t    return {\n\t      x: (x1 + x2 + x21 / l * r21) / 2,\n\t      y: (y1 + y2 + y21 / l * r21) / 2,\n\t      r: (l + r1 + r2) / 2\n\t    };\n\t  }\n\t\n\t  function enclose3(a, b, c) {\n\t    var x1 = a.x, y1 = a.y, r1 = a.r,\n\t        x2 = b.x, y2 = b.y, r2 = b.r,\n\t        x3 = c.x, y3 = c.y, r3 = c.r,\n\t        a2 = 2 * (x1 - x2),\n\t        b2 = 2 * (y1 - y2),\n\t        c2 = 2 * (r2 - r1),\n\t        d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t        a3 = 2 * (x1 - x3),\n\t        b3 = 2 * (y1 - y3),\n\t        c3 = 2 * (r3 - r1),\n\t        d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t        ab = a3 * b2 - a2 * b3,\n\t        xa = (b2 * d3 - b3 * d2) / ab - x1,\n\t        xb = (b3 * c2 - b2 * c3) / ab,\n\t        ya = (a3 * d2 - a2 * d3) / ab - y1,\n\t        yb = (a2 * c3 - a3 * c2) / ab,\n\t        A = xb * xb + yb * yb - 1,\n\t        B = 2 * (xa * xb + ya * yb + r1),\n\t        C = xa * xa + ya * ya - r1 * r1,\n\t        r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n\t    return {\n\t      x: xa + xb * r + x1,\n\t      y: ya + yb * r + y1,\n\t      r: r\n\t    };\n\t  }\n\t\n\t  function place(a, b, c) {\n\t    var ax = a.x,\n\t        ay = a.y,\n\t        da = b.r + c.r,\n\t        db = a.r + c.r,\n\t        dx = b.x - ax,\n\t        dy = b.y - ay,\n\t        dc = dx * dx + dy * dy;\n\t    if (dc) {\n\t      var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t          y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = ax + x * dx + y * dy;\n\t      c.y = ay + x * dy - y * dx;\n\t    } else {\n\t      c.x = ax + db;\n\t      c.y = ay;\n\t    }\n\t  }\n\t\n\t  function intersects(a, b) {\n\t    var dx = b.x - a.x,\n\t        dy = b.y - a.y,\n\t        dr = a.r + b.r;\n\t    return dr * dr > dx * dx + dy * dy;\n\t  }\n\t\n\t  function distance2(circle, x, y) {\n\t    var dx = circle.x - x,\n\t        dy = circle.y - y;\n\t    return dx * dx + dy * dy;\n\t  }\n\t\n\t  function Node$1(circle) {\n\t    this._ = circle;\n\t    this.next = null;\n\t    this.previous = null;\n\t  }\n\t\n\t  function packEnclose(circles) {\n\t    if (!(n = circles.length)) return 0;\n\t\n\t    var a, b, c, n;\n\t\n\t    // Place the first circle.\n\t    a = circles[0], a.x = 0, a.y = 0;\n\t    if (!(n > 1)) return a.r;\n\t\n\t    // Place the second circle.\n\t    b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t    if (!(n > 2)) return a.r + b.r;\n\t\n\t    // Place the third circle.\n\t    place(b, a, c = circles[2]);\n\t\n\t    // Initialize the weighted centroid.\n\t    var aa = a.r * a.r,\n\t        ba = b.r * b.r,\n\t        ca = c.r * c.r,\n\t        oa = aa + ba + ca,\n\t        ox = aa * a.x + ba * b.x + ca * c.x,\n\t        oy = aa * a.y + ba * b.y + ca * c.y,\n\t        cx, cy, i, j, k, sj, sk;\n\t\n\t    // Initialize the front-chain using the first three circles a, b and c.\n\t    a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t    a.next = c.previous = b;\n\t    b.next = a.previous = c;\n\t    c.next = b.previous = a;\n\t\n\t    // Attempt to place each remaining circle…\n\t    pack: for (i = 3; i < n; ++i) {\n\t      place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t      // If there are only three elements in the front-chain…\n\t      if ((k = a.previous) === (j = b.next)) {\n\t        // If the new circle intersects the third circle,\n\t        // rotate the front chain to try the next position.\n\t        if (intersects(j._, c._)) {\n\t          a = b, b = j, --i;\n\t          continue pack;\n\t        }\n\t      }\n\t\n\t      // Find the closest intersecting circle on the front-chain, if any.\n\t      else {\n\t        sj = j._.r, sk = k._.r;\n\t        do {\n\t          if (sj <= sk) {\n\t            if (intersects(j._, c._)) {\n\t              b = j, a.next = b, b.previous = a, --i;\n\t              continue pack;\n\t            }\n\t            j = j.next, sj += j._.r;\n\t          } else {\n\t            if (intersects(k._, c._)) {\n\t              a = k, a.next = b, b.previous = a, --i;\n\t              continue pack;\n\t            }\n\t            k = k.previous, sk += k._.r;\n\t          }\n\t        } while (j !== k.next);\n\t      }\n\t\n\t      // Success! Insert the new circle c between a and b.\n\t      c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t      // Update the weighted centroid.\n\t      oa += ca = c._.r * c._.r;\n\t      ox += ca * c._.x;\n\t      oy += ca * c._.y;\n\t\n\t      // Compute the new closest circle a to centroid.\n\t      aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n\t      while ((c = c.next) !== b) {\n\t        if ((ca = distance2(c._, cx, cy)) < aa) {\n\t          a = c, aa = ca;\n\t        }\n\t      }\n\t      b = a.next;\n\t    }\n\t\n\t    // Compute the enclosing circle of the front chain.\n\t    a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t    // Translate the circles to put the enclosing circle around the origin.\n\t    for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t    return c.r;\n\t  }\n\t\n\t  function siblings(circles) {\n\t    packEnclose(circles);\n\t    return circles;\n\t  }\n\t\n\t  function optional(f) {\n\t    return f == null ? null : required(f);\n\t  }\n\t\n\t  function required(f) {\n\t    if (typeof f !== \"function\") throw new Error;\n\t    return f;\n\t  }\n\t\n\t  function constantZero() {\n\t    return 0;\n\t  }\n\t\n\t  function constant$5(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function defaultRadius(d) {\n\t    return Math.sqrt(d.value);\n\t  }\n\t\n\t  function index() {\n\t    var radius = null,\n\t        dx = 1,\n\t        dy = 1,\n\t        padding = constantZero;\n\t\n\t    function pack(root) {\n\t      root.x = dx / 2, root.y = dy / 2;\n\t      if (radius) {\n\t        root.eachBefore(radiusLeaf(radius))\n\t            .eachAfter(packChildren(padding, 0.5))\n\t            .eachBefore(translateChild(1));\n\t      } else {\n\t        root.eachBefore(radiusLeaf(defaultRadius))\n\t            .eachAfter(packChildren(constantZero, 1))\n\t            .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t            .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t      }\n\t      return root;\n\t    }\n\t\n\t    pack.radius = function(x) {\n\t      return arguments.length ? (radius = optional(x), pack) : radius;\n\t    };\n\t\n\t    pack.size = function(x) {\n\t      return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t    };\n\t\n\t    pack.padding = function(x) {\n\t      return arguments.length ? (padding = typeof x === \"function\" ? x : constant$5(+x), pack) : padding;\n\t    };\n\t\n\t    return pack;\n\t  }\n\t\n\t  function radiusLeaf(radius) {\n\t    return function(node) {\n\t      if (!node.children) {\n\t        node.r = Math.max(0, +radius(node) || 0);\n\t      }\n\t    };\n\t  }\n\t\n\t  function packChildren(padding, k) {\n\t    return function(node) {\n\t      if (children = node.children) {\n\t        var children,\n\t            i,\n\t            n = children.length,\n\t            r = padding(node) * k || 0,\n\t            e;\n\t\n\t        if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t        e = packEnclose(children);\n\t        if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t        node.r = e + r;\n\t      }\n\t    };\n\t  }\n\t\n\t  function translateChild(k) {\n\t    return function(node) {\n\t      var parent = node.parent;\n\t      node.r *= k;\n\t      if (parent) {\n\t        node.x = parent.x + k * node.x;\n\t        node.y = parent.y + k * node.y;\n\t      }\n\t    };\n\t  }\n\t\n\t  function roundNode(node) {\n\t    node.x0 = Math.round(node.x0);\n\t    node.y0 = Math.round(node.y0);\n\t    node.x1 = Math.round(node.x1);\n\t    node.y1 = Math.round(node.y1);\n\t  }\n\t\n\t  function treemapDice(parent, x0, y0, x1, y1) {\n\t    var nodes = parent.children,\n\t        node,\n\t        i = -1,\n\t        n = nodes.length,\n\t        k = parent.value && (x1 - x0) / parent.value;\n\t\n\t    while (++i < n) {\n\t      node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t      node.x0 = x0, node.x1 = x0 += node.value * k;\n\t    }\n\t  }\n\t\n\t  function partition() {\n\t    var dx = 1,\n\t        dy = 1,\n\t        padding = 0,\n\t        round = false;\n\t\n\t    function partition(root) {\n\t      var n = root.height + 1;\n\t      root.x0 =\n\t      root.y0 = padding;\n\t      root.x1 = dx;\n\t      root.y1 = dy / n;\n\t      root.eachBefore(positionNode(dy, n));\n\t      if (round) root.eachBefore(roundNode);\n\t      return root;\n\t    }\n\t\n\t    function positionNode(dy, n) {\n\t      return function(node) {\n\t        if (node.children) {\n\t          treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t        }\n\t        var x0 = node.x0,\n\t            y0 = node.y0,\n\t            x1 = node.x1 - padding,\n\t            y1 = node.y1 - padding;\n\t        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t        node.x0 = x0;\n\t        node.y0 = y0;\n\t        node.x1 = x1;\n\t        node.y1 = y1;\n\t      };\n\t    }\n\t\n\t    partition.round = function(x) {\n\t      return arguments.length ? (round = !!x, partition) : round;\n\t    };\n\t\n\t    partition.size = function(x) {\n\t      return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t    };\n\t\n\t    partition.padding = function(x) {\n\t      return arguments.length ? (padding = +x, partition) : padding;\n\t    };\n\t\n\t    return partition;\n\t  }\n\t\n\tvar   keyPrefix$1 = \"$\";\n\t  var preroot = {depth: -1};\n\t  var ambiguous = {};\n\t  function defaultId(d) {\n\t    return d.id;\n\t  }\n\t\n\t  function defaultParentId(d) {\n\t    return d.parentId;\n\t  }\n\t\n\t  function stratify() {\n\t    var id = defaultId,\n\t        parentId = defaultParentId;\n\t\n\t    function stratify(data) {\n\t      var d,\n\t          i,\n\t          n = data.length,\n\t          root,\n\t          parent,\n\t          node,\n\t          nodes = new Array(n),\n\t          nodeId,\n\t          nodeKey,\n\t          nodeByKey = {};\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        d = data[i], node = nodes[i] = new Node(d);\n\t        if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t          nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t          nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t        }\n\t      }\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i], nodeId = parentId(data[i], i, data);\n\t        if (nodeId == null || !(nodeId += \"\")) {\n\t          if (root) throw new Error(\"multiple roots\");\n\t          root = node;\n\t        } else {\n\t          parent = nodeByKey[keyPrefix$1 + nodeId];\n\t          if (!parent) throw new Error(\"missing: \" + nodeId);\n\t          if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t          if (parent.children) parent.children.push(node);\n\t          else parent.children = [node];\n\t          node.parent = parent;\n\t        }\n\t      }\n\t\n\t      if (!root) throw new Error(\"no root\");\n\t      root.parent = preroot;\n\t      root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t      root.parent = null;\n\t      if (n > 0) throw new Error(\"cycle\");\n\t\n\t      return root;\n\t    }\n\t\n\t    stratify.id = function(x) {\n\t      return arguments.length ? (id = required(x), stratify) : id;\n\t    };\n\t\n\t    stratify.parentId = function(x) {\n\t      return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t    };\n\t\n\t    return stratify;\n\t  }\n\t\n\t  function defaultSeparation$1(a, b) {\n\t    return a.parent === b.parent ? 1 : 2;\n\t  }\n\t\n\t  // function radialSeparation(a, b) {\n\t  //   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t  // }\n\t\n\t  // This function is used to traverse the left contour of a subtree (or\n\t  // subforest). It returns the successor of v on this contour. This successor is\n\t  // either given by the leftmost child of v or by the thread of v. The function\n\t  // returns null if and only if v is on the highest level of its subtree.\n\t  function nextLeft(v) {\n\t    var children = v.children;\n\t    return children ? children[0] : v.t;\n\t  }\n\t\n\t  // This function works analogously to nextLeft.\n\t  function nextRight(v) {\n\t    var children = v.children;\n\t    return children ? children[children.length - 1] : v.t;\n\t  }\n\t\n\t  // Shifts the current subtree rooted at w+. This is done by increasing\n\t  // prelim(w+) and mod(w+) by shift.\n\t  function moveSubtree(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t\n\t  // All other shifts, applied to the smaller subtrees between w- and w+, are\n\t  // performed by this function. To prepare the shifts, we have to adjust\n\t  // change(w+), shift(w+), and change(w-).\n\t  function executeShifts(v) {\n\t    var shift = 0,\n\t        change = 0,\n\t        children = v.children,\n\t        i = children.length,\n\t        w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t\n\t  // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t  // returns the specified (default) ancestor.\n\t  function nextAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t\n\t  function TreeNode(node, i) {\n\t    this._ = node;\n\t    this.parent = null;\n\t    this.children = null;\n\t    this.A = null; // default ancestor\n\t    this.a = this; // ancestor\n\t    this.z = 0; // prelim\n\t    this.m = 0; // mod\n\t    this.c = 0; // change\n\t    this.s = 0; // shift\n\t    this.t = null; // thread\n\t    this.i = i; // number\n\t  }\n\t\n\t  TreeNode.prototype = Object.create(Node.prototype);\n\t\n\t  function treeRoot(root) {\n\t    var tree = new TreeNode(root, 0),\n\t        node,\n\t        nodes = [tree],\n\t        child,\n\t        children,\n\t        i,\n\t        n;\n\t\n\t    while (node = nodes.pop()) {\n\t      if (children = node._.children) {\n\t        node.children = new Array(n = children.length);\n\t        for (i = n - 1; i >= 0; --i) {\n\t          nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t          child.parent = node;\n\t        }\n\t      }\n\t    }\n\t\n\t    (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t    return tree;\n\t  }\n\t\n\t  // Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\t  function tree() {\n\t    var separation = defaultSeparation$1,\n\t        dx = 1,\n\t        dy = 1,\n\t        nodeSize = null;\n\t\n\t    function tree(root) {\n\t      var t = treeRoot(root);\n\t\n\t      // Compute the layout using Buchheim et al.’s algorithm.\n\t      t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t      t.eachBefore(secondWalk);\n\t\n\t      // If a fixed node size is specified, scale x and y.\n\t      if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t      // If a fixed tree size is specified, scale x and y based on the extent.\n\t      // Compute the left-most, right-most, and depth-most nodes for extents.\n\t      else {\n\t        var left = root,\n\t            right = root,\n\t            bottom = root;\n\t        root.eachBefore(function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var s = left === right ? 1 : separation(left, right) / 2,\n\t            tx = s - left.x,\n\t            kx = dx / (right.x + s + tx),\n\t            ky = dy / (bottom.depth || 1);\n\t        root.eachBefore(function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t\n\t      return root;\n\t    }\n\t\n\t    // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t    // applied recursively to the children of v, as well as the function\n\t    // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t    // node v is placed to the midpoint of its outermost children.\n\t    function firstWalk(v) {\n\t      var children = v.children,\n\t          siblings = v.parent.children,\n\t          w = v.i ? siblings[v.i - 1] : null;\n\t      if (children) {\n\t        executeShifts(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t\n\t    // Computes all real x-coordinates by summing up the modifiers recursively.\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t\n\t    // The core of the algorithm. Here, a new subtree is combined with the\n\t    // previous subtrees. Threads are used to traverse the inside and outside\n\t    // contours of the left and right subtree up to the highest common level. The\n\t    // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t    // superscript o means outside and i means inside, the subscript - means left\n\t    // subtree and + means right subtree. For summing up the modifiers along the\n\t    // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t    // nodes of the inside contours conflict, we compute the left one of the\n\t    // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t    // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t    // Finally, we add a new thread (if necessary).\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v,\n\t            vop = v,\n\t            vim = w,\n\t            vom = vip.parent.children[0],\n\t            sip = vip.m,\n\t            sop = vop.m,\n\t            sim = vim.m,\n\t            som = vom.m,\n\t            shift;\n\t        while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t          vom = nextLeft(vom);\n\t          vop = nextRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !nextRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !nextLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t\n\t    function sizeNode(node) {\n\t      node.x *= dx;\n\t      node.y = node.depth * dy;\n\t    }\n\t\n\t    tree.separation = function(x) {\n\t      return arguments.length ? (separation = x, tree) : separation;\n\t    };\n\t\n\t    tree.size = function(x) {\n\t      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t    };\n\t\n\t    tree.nodeSize = function(x) {\n\t      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t    };\n\t\n\t    return tree;\n\t  }\n\t\n\t  function treemapSlice(parent, x0, y0, x1, y1) {\n\t    var nodes = parent.children,\n\t        node,\n\t        i = -1,\n\t        n = nodes.length,\n\t        k = parent.value && (y1 - y0) / parent.value;\n\t\n\t    while (++i < n) {\n\t      node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t      node.y0 = y0, node.y1 = y0 += node.value * k;\n\t    }\n\t  }\n\t\n\t  var phi = (1 + Math.sqrt(5)) / 2;\n\t\n\t  function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t    var rows = [],\n\t        nodes = parent.children,\n\t        row,\n\t        nodeValue,\n\t        i0 = 0,\n\t        i1,\n\t        n = nodes.length,\n\t        dx, dy,\n\t        value = parent.value,\n\t        sumValue,\n\t        minValue,\n\t        maxValue,\n\t        newRatio,\n\t        minRatio,\n\t        alpha,\n\t        beta;\n\t\n\t    while (i0 < n) {\n\t      dx = x1 - x0, dy = y1 - y0;\n\t      minValue = maxValue = sumValue = nodes[i0].value;\n\t      alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t      beta = sumValue * sumValue * alpha;\n\t      minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t      // Keep adding nodes while the aspect ratio maintains or improves.\n\t      for (i1 = i0 + 1; i1 < n; ++i1) {\n\t        sumValue += nodeValue = nodes[i1].value;\n\t        if (nodeValue < minValue) minValue = nodeValue;\n\t        if (nodeValue > maxValue) maxValue = nodeValue;\n\t        beta = sumValue * sumValue * alpha;\n\t        newRatio = Math.max(maxValue / beta, beta / minValue);\n\t        if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t        minRatio = newRatio;\n\t      }\n\t\n\t      // Position and record the row orientation.\n\t      rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t      if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t      else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t      value -= sumValue, i0 = i1;\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  var squarify = (function custom(ratio) {\n\t\n\t    function squarify(parent, x0, y0, x1, y1) {\n\t      squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t    }\n\t\n\t    squarify.ratio = function(x) {\n\t      return custom((x = +x) > 1 ? x : 1);\n\t    };\n\t\n\t    return squarify;\n\t  })(phi);\n\t\n\t  function index$1() {\n\t    var tile = squarify,\n\t        round = false,\n\t        dx = 1,\n\t        dy = 1,\n\t        paddingStack = [0],\n\t        paddingInner = constantZero,\n\t        paddingTop = constantZero,\n\t        paddingRight = constantZero,\n\t        paddingBottom = constantZero,\n\t        paddingLeft = constantZero;\n\t\n\t    function treemap(root) {\n\t      root.x0 =\n\t      root.y0 = 0;\n\t      root.x1 = dx;\n\t      root.y1 = dy;\n\t      root.eachBefore(positionNode);\n\t      paddingStack = [0];\n\t      if (round) root.eachBefore(roundNode);\n\t      return root;\n\t    }\n\t\n\t    function positionNode(node) {\n\t      var p = paddingStack[node.depth],\n\t          x0 = node.x0 + p,\n\t          y0 = node.y0 + p,\n\t          x1 = node.x1 - p,\n\t          y1 = node.y1 - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t      if (node.children) {\n\t        p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t        x0 += paddingLeft(node) - p;\n\t        y0 += paddingTop(node) - p;\n\t        x1 -= paddingRight(node) - p;\n\t        y1 -= paddingBottom(node) - p;\n\t        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t        tile(node, x0, y0, x1, y1);\n\t      }\n\t    }\n\t\n\t    treemap.round = function(x) {\n\t      return arguments.length ? (round = !!x, treemap) : round;\n\t    };\n\t\n\t    treemap.size = function(x) {\n\t      return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t    };\n\t\n\t    treemap.tile = function(x) {\n\t      return arguments.length ? (tile = required(x), treemap) : tile;\n\t    };\n\t\n\t    treemap.padding = function(x) {\n\t      return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t    };\n\t\n\t    treemap.paddingInner = function(x) {\n\t      return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingInner;\n\t    };\n\t\n\t    treemap.paddingOuter = function(x) {\n\t      return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t    };\n\t\n\t    treemap.paddingTop = function(x) {\n\t      return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingTop;\n\t    };\n\t\n\t    treemap.paddingRight = function(x) {\n\t      return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingRight;\n\t    };\n\t\n\t    treemap.paddingBottom = function(x) {\n\t      return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingBottom;\n\t    };\n\t\n\t    treemap.paddingLeft = function(x) {\n\t      return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingLeft;\n\t    };\n\t\n\t    return treemap;\n\t  }\n\t\n\t  function binary(parent, x0, y0, x1, y1) {\n\t    var nodes = parent.children,\n\t        i, n = nodes.length,\n\t        sum, sums = new Array(n + 1);\n\t\n\t    for (sums[0] = sum = i = 0; i < n; ++i) {\n\t      sums[i + 1] = sum += nodes[i].value;\n\t    }\n\t\n\t    partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t    function partition(i, j, value, x0, y0, x1, y1) {\n\t      if (i >= j - 1) {\n\t        var node = nodes[i];\n\t        node.x0 = x0, node.y0 = y0;\n\t        node.x1 = x1, node.y1 = y1;\n\t        return;\n\t      }\n\t\n\t      var valueOffset = sums[i],\n\t          valueTarget = (value / 2) + valueOffset,\n\t          k = i + 1,\n\t          hi = j - 1;\n\t\n\t      while (k < hi) {\n\t        var mid = k + hi >>> 1;\n\t        if (sums[mid] < valueTarget) k = mid + 1;\n\t        else hi = mid;\n\t      }\n\t\n\t      var valueLeft = sums[k] - valueOffset,\n\t          valueRight = value - valueLeft;\n\t\n\t      if ((y1 - y0) > (x1 - x0)) {\n\t        var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t        partition(i, k, valueLeft, x0, y0, x1, yk);\n\t        partition(k, j, valueRight, x0, yk, x1, y1);\n\t      } else {\n\t        var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t        partition(i, k, valueLeft, x0, y0, xk, y1);\n\t        partition(k, j, valueRight, xk, y0, x1, y1);\n\t      }\n\t    }\n\t  }\n\t\n\t  function sliceDice(parent, x0, y0, x1, y1) {\n\t    (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  var resquarify = (function custom(ratio) {\n\t\n\t    function resquarify(parent, x0, y0, x1, y1) {\n\t      if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t        var rows,\n\t            row,\n\t            nodes,\n\t            i,\n\t            j = -1,\n\t            n,\n\t            m = rows.length,\n\t            value = parent.value;\n\t\n\t        while (++j < m) {\n\t          row = rows[j], nodes = row.children;\n\t          for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t          if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t          else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t          value -= row.value;\n\t        }\n\t      } else {\n\t        parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t        rows.ratio = ratio;\n\t      }\n\t    }\n\t\n\t    resquarify.ratio = function(x) {\n\t      return custom((x = +x) > 1 ? x : 1);\n\t    };\n\t\n\t    return resquarify;\n\t  })(phi);\n\t\n\t  function center$1(x, y) {\n\t    var nodes;\n\t\n\t    if (x == null) x = 0;\n\t    if (y == null) y = 0;\n\t\n\t    function force() {\n\t      var i,\n\t          n = nodes.length,\n\t          node,\n\t          sx = 0,\n\t          sy = 0;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i], sx += node.x, sy += node.y;\n\t      }\n\t\n\t      for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t        node = nodes[i], node.x -= sx, node.y -= sy;\n\t      }\n\t    }\n\t\n\t    force.initialize = function(_) {\n\t      nodes = _;\n\t    };\n\t\n\t    force.x = function(_) {\n\t      return arguments.length ? (x = +_, force) : x;\n\t    };\n\t\n\t    force.y = function(_) {\n\t      return arguments.length ? (y = +_, force) : y;\n\t    };\n\t\n\t    return force;\n\t  }\n\t\n\t  function constant$6(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function jiggle() {\n\t    return (Math.random() - 0.5) * 1e-6;\n\t  }\n\t\n\t  function x$1(d) {\n\t    return d.x + d.vx;\n\t  }\n\t\n\t  function y$1(d) {\n\t    return d.y + d.vy;\n\t  }\n\t\n\t  function collide(radius) {\n\t    var nodes,\n\t        radii,\n\t        strength = 1,\n\t        iterations = 1;\n\t\n\t    if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\t\n\t    function force() {\n\t      var i, n = nodes.length,\n\t          tree,\n\t          node,\n\t          xi,\n\t          yi,\n\t          ri,\n\t          ri2;\n\t\n\t      for (var k = 0; k < iterations; ++k) {\n\t        tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n\t        for (i = 0; i < n; ++i) {\n\t          node = nodes[i];\n\t          ri = radii[i], ri2 = ri * ri;\n\t          xi = node.x + node.vx;\n\t          yi = node.y + node.vy;\n\t          tree.visit(apply);\n\t        }\n\t      }\n\t\n\t      function apply(quad, x0, y0, x1, y1) {\n\t        var data = quad.data, rj = quad.r, r = ri + rj;\n\t        if (data) {\n\t          if (data.index > i) {\n\t            var x = xi - data.x - data.vx,\n\t                y = yi - data.y - data.vy,\n\t                l = x * x + y * y;\n\t            if (l < r * r) {\n\t              if (x === 0) x = jiggle(), l += x * x;\n\t              if (y === 0) y = jiggle(), l += y * y;\n\t              l = (r - (l = Math.sqrt(l))) / l * strength;\n\t              node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t              node.vy += (y *= l) * r;\n\t              data.vx -= x * (r = 1 - r);\n\t              data.vy -= y * r;\n\t            }\n\t          }\n\t          return;\n\t        }\n\t        return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t      }\n\t    }\n\t\n\t    function prepare(quad) {\n\t      if (quad.data) return quad.r = radii[quad.data.index];\n\t      for (var i = quad.r = 0; i < 4; ++i) {\n\t        if (quad[i] && quad[i].r > quad.r) {\n\t          quad.r = quad[i].r;\n\t        }\n\t      }\n\t    }\n\t\n\t    force.initialize = function(_) {\n\t      var i, n = (nodes = _).length; radii = new Array(n);\n\t      for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);\n\t    };\n\t\n\t    force.iterations = function(_) {\n\t      return arguments.length ? (iterations = +_, force) : iterations;\n\t    };\n\t\n\t    force.strength = function(_) {\n\t      return arguments.length ? (strength = +_, force) : strength;\n\t    };\n\t\n\t    force.radius = function(_) {\n\t      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), force) : radius;\n\t    };\n\t\n\t    return force;\n\t  }\n\t\n\t  function index$2(d, i) {\n\t    return i;\n\t  }\n\t\n\t  function link(links) {\n\t    var id = index$2,\n\t        strength = defaultStrength,\n\t        strengths,\n\t        distance = constant$6(30),\n\t        distances,\n\t        nodes,\n\t        count,\n\t        bias,\n\t        iterations = 1;\n\t\n\t    if (links == null) links = [];\n\t\n\t    function defaultStrength(link) {\n\t      return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t    }\n\t\n\t    function force(alpha) {\n\t      for (var k = 0, n = links.length; k < iterations; ++k) {\n\t        for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t          link = links[i], source = link.source, target = link.target;\n\t          x = target.x + target.vx - source.x - source.vx || jiggle();\n\t          y = target.y + target.vy - source.y - source.vy || jiggle();\n\t          l = Math.sqrt(x * x + y * y);\n\t          l = (l - distances[i]) / l * alpha * strengths[i];\n\t          x *= l, y *= l;\n\t          target.vx -= x * (b = bias[i]);\n\t          target.vy -= y * b;\n\t          source.vx += x * (b = 1 - b);\n\t          source.vy += y * b;\n\t        }\n\t      }\n\t    }\n\t\n\t    function initialize() {\n\t      if (!nodes) return;\n\t\n\t      var i,\n\t          n = nodes.length,\n\t          m = links.length,\n\t          nodeById = map$1(nodes, id),\n\t          link;\n\t\n\t      for (i = 0, count = new Array(n); i < n; ++i) {\n\t        count[i] = 0;\n\t      }\n\t\n\t      for (i = 0; i < m; ++i) {\n\t        link = links[i], link.index = i;\n\t        if (typeof link.source !== \"object\") link.source = nodeById.get(link.source);\n\t        if (typeof link.target !== \"object\") link.target = nodeById.get(link.target);\n\t        ++count[link.source.index], ++count[link.target.index];\n\t      }\n\t\n\t      for (i = 0, bias = new Array(m); i < m; ++i) {\n\t        link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t      }\n\t\n\t      strengths = new Array(m), initializeStrength();\n\t      distances = new Array(m), initializeDistance();\n\t    }\n\t\n\t    function initializeStrength() {\n\t      if (!nodes) return;\n\t\n\t      for (var i = 0, n = links.length; i < n; ++i) {\n\t        strengths[i] = +strength(links[i], i, links);\n\t      }\n\t    }\n\t\n\t    function initializeDistance() {\n\t      if (!nodes) return;\n\t\n\t      for (var i = 0, n = links.length; i < n; ++i) {\n\t        distances[i] = +distance(links[i], i, links);\n\t      }\n\t    }\n\t\n\t    force.initialize = function(_) {\n\t      nodes = _;\n\t      initialize();\n\t    };\n\t\n\t    force.links = function(_) {\n\t      return arguments.length ? (links = _, initialize(), force) : links;\n\t    };\n\t\n\t    force.id = function(_) {\n\t      return arguments.length ? (id = _, force) : id;\n\t    };\n\t\n\t    force.iterations = function(_) {\n\t      return arguments.length ? (iterations = +_, force) : iterations;\n\t    };\n\t\n\t    force.strength = function(_) {\n\t      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n\t    };\n\t\n\t    force.distance = function(_) {\n\t      return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n\t    };\n\t\n\t    return force;\n\t  }\n\t\n\t  function x$2(d) {\n\t    return d.x;\n\t  }\n\t\n\t  function y$2(d) {\n\t    return d.y;\n\t  }\n\t\n\t  var initialRadius = 10;\n\t  var initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t  function simulation(nodes) {\n\t    var simulation,\n\t        alpha = 1,\n\t        alphaMin = 0.001,\n\t        alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t        alphaTarget = 0,\n\t        velocityDecay = 0.6,\n\t        forces = map$1(),\n\t        stepper = timer(step),\n\t        event = dispatch(\"tick\", \"end\");\n\t\n\t    if (nodes == null) nodes = [];\n\t\n\t    function step() {\n\t      tick();\n\t      event.call(\"tick\", simulation);\n\t      if (alpha < alphaMin) {\n\t        stepper.stop();\n\t        event.call(\"end\", simulation);\n\t      }\n\t    }\n\t\n\t    function tick() {\n\t      var i, n = nodes.length, node;\n\t\n\t      alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t      forces.each(function(force) {\n\t        force(alpha);\n\t      });\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t        else node.x = node.fx, node.vx = 0;\n\t        if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t        else node.y = node.fy, node.vy = 0;\n\t      }\n\t    }\n\t\n\t    function initializeNodes() {\n\t      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t        node = nodes[i], node.index = i;\n\t        if (isNaN(node.x) || isNaN(node.y)) {\n\t          var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t          node.x = radius * Math.cos(angle);\n\t          node.y = radius * Math.sin(angle);\n\t        }\n\t        if (isNaN(node.vx) || isNaN(node.vy)) {\n\t          node.vx = node.vy = 0;\n\t        }\n\t      }\n\t    }\n\t\n\t    function initializeForce(force) {\n\t      if (force.initialize) force.initialize(nodes);\n\t      return force;\n\t    }\n\t\n\t    initializeNodes();\n\t\n\t    return simulation = {\n\t      tick: tick,\n\t\n\t      restart: function() {\n\t        return stepper.restart(step), simulation;\n\t      },\n\t\n\t      stop: function() {\n\t        return stepper.stop(), simulation;\n\t      },\n\t\n\t      nodes: function(_) {\n\t        return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t      },\n\t\n\t      alpha: function(_) {\n\t        return arguments.length ? (alpha = +_, simulation) : alpha;\n\t      },\n\t\n\t      alphaMin: function(_) {\n\t        return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t      },\n\t\n\t      alphaDecay: function(_) {\n\t        return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t      },\n\t\n\t      alphaTarget: function(_) {\n\t        return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t      },\n\t\n\t      velocityDecay: function(_) {\n\t        return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t      },\n\t\n\t      force: function(name, _) {\n\t        return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t      },\n\t\n\t      find: function(x, y, radius) {\n\t        var i = 0,\n\t            n = nodes.length,\n\t            dx,\n\t            dy,\n\t            d2,\n\t            node,\n\t            closest;\n\t\n\t        if (radius == null) radius = Infinity;\n\t        else radius *= radius;\n\t\n\t        for (i = 0; i < n; ++i) {\n\t          node = nodes[i];\n\t          dx = x - node.x;\n\t          dy = y - node.y;\n\t          d2 = dx * dx + dy * dy;\n\t          if (d2 < radius) closest = node, radius = d2;\n\t        }\n\t\n\t        return closest;\n\t      },\n\t\n\t      on: function(name, _) {\n\t        return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t      }\n\t    };\n\t  }\n\t\n\t  function manyBody() {\n\t    var nodes,\n\t        node,\n\t        alpha,\n\t        strength = constant$6(-30),\n\t        strengths,\n\t        distanceMin2 = 1,\n\t        distanceMax2 = Infinity,\n\t        theta2 = 0.81;\n\t\n\t    function force(_) {\n\t      var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n\t      for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t    }\n\t\n\t    function initialize() {\n\t      if (!nodes) return;\n\t      var i, n = nodes.length;\n\t      strengths = new Array(n);\n\t      for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);\n\t    }\n\t\n\t    function accumulate(quad) {\n\t      var strength = 0, q, c, x, y, i;\n\t\n\t      // For internal nodes, accumulate forces from child quadrants.\n\t      if (quad.length) {\n\t        for (x = y = i = 0; i < 4; ++i) {\n\t          if ((q = quad[i]) && (c = q.value)) {\n\t            strength += c, x += c * q.x, y += c * q.y;\n\t          }\n\t        }\n\t        quad.x = x / strength;\n\t        quad.y = y / strength;\n\t      }\n\t\n\t      // For leaf nodes, accumulate forces from coincident quadrants.\n\t      else {\n\t        q = quad;\n\t        q.x = q.data.x;\n\t        q.y = q.data.y;\n\t        do strength += strengths[q.data.index];\n\t        while (q = q.next);\n\t      }\n\t\n\t      quad.value = strength;\n\t    }\n\t\n\t    function apply(quad, x1, _, x2) {\n\t      if (!quad.value) return true;\n\t\n\t      var x = quad.x - node.x,\n\t          y = quad.y - node.y,\n\t          w = x2 - x1,\n\t          l = x * x + y * y;\n\t\n\t      // Apply the Barnes-Hut approximation if possible.\n\t      // Limit forces for very close nodes; randomize direction if coincident.\n\t      if (w * w / theta2 < l) {\n\t        if (l < distanceMax2) {\n\t          if (x === 0) x = jiggle(), l += x * x;\n\t          if (y === 0) y = jiggle(), l += y * y;\n\t          if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t          node.vx += x * quad.value * alpha / l;\n\t          node.vy += y * quad.value * alpha / l;\n\t        }\n\t        return true;\n\t      }\n\t\n\t      // Otherwise, process points directly.\n\t      else if (quad.length || l >= distanceMax2) return;\n\t\n\t      // Limit forces for very close nodes; randomize direction if coincident.\n\t      if (quad.data !== node || quad.next) {\n\t        if (x === 0) x = jiggle(), l += x * x;\n\t        if (y === 0) y = jiggle(), l += y * y;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t      }\n\t\n\t      do if (quad.data !== node) {\n\t        w = strengths[quad.data.index] * alpha / l;\n\t        node.vx += x * w;\n\t        node.vy += y * w;\n\t      } while (quad = quad.next);\n\t    }\n\t\n\t    force.initialize = function(_) {\n\t      nodes = _;\n\t      initialize();\n\t    };\n\t\n\t    force.strength = function(_) {\n\t      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t    };\n\t\n\t    force.distanceMin = function(_) {\n\t      return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t    };\n\t\n\t    force.distanceMax = function(_) {\n\t      return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t    };\n\t\n\t    force.theta = function(_) {\n\t      return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t    };\n\t\n\t    return force;\n\t  }\n\t\n\t  function x$3(x) {\n\t    var strength = constant$6(0.1),\n\t        nodes,\n\t        strengths,\n\t        xz;\n\t\n\t    if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\t\n\t    function force(alpha) {\n\t      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t        node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t      }\n\t    }\n\t\n\t    function initialize() {\n\t      if (!nodes) return;\n\t      var i, n = nodes.length;\n\t      strengths = new Array(n);\n\t      xz = new Array(n);\n\t      for (i = 0; i < n; ++i) {\n\t        strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t      }\n\t    }\n\t\n\t    force.initialize = function(_) {\n\t      nodes = _;\n\t      initialize();\n\t    };\n\t\n\t    force.strength = function(_) {\n\t      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t    };\n\t\n\t    force.x = function(_) {\n\t      return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n\t    };\n\t\n\t    return force;\n\t  }\n\t\n\t  function y$3(y) {\n\t    var strength = constant$6(0.1),\n\t        nodes,\n\t        strengths,\n\t        yz;\n\t\n\t    if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\t\n\t    function force(alpha) {\n\t      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t        node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t      }\n\t    }\n\t\n\t    function initialize() {\n\t      if (!nodes) return;\n\t      var i, n = nodes.length;\n\t      strengths = new Array(n);\n\t      yz = new Array(n);\n\t      for (i = 0; i < n; ++i) {\n\t        strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t      }\n\t    }\n\t\n\t    force.initialize = function(_) {\n\t      nodes = _;\n\t      initialize();\n\t    };\n\t\n\t    force.strength = function(_) {\n\t      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t    };\n\t\n\t    force.y = function(_) {\n\t      return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n\t    };\n\t\n\t    return force;\n\t  }\n\t\n\t  function nopropagation() {\n\t    exports.event.stopImmediatePropagation();\n\t  }\n\t\n\t  function noevent() {\n\t    exports.event.preventDefault();\n\t    exports.event.stopImmediatePropagation();\n\t  }\n\t\n\t  function dragDisable(view) {\n\t    var root = view.document.documentElement,\n\t        selection = select(view).on(\"dragstart.drag\", noevent, true);\n\t    if (\"onselectstart\" in root) {\n\t      selection.on(\"selectstart.drag\", noevent, true);\n\t    } else {\n\t      root.__noselect = root.style.MozUserSelect;\n\t      root.style.MozUserSelect = \"none\";\n\t    }\n\t  }\n\t\n\t  function dragEnable(view, noclick) {\n\t    var root = view.document.documentElement,\n\t        selection = select(view).on(\"dragstart.drag\", null);\n\t    if (noclick) {\n\t      selection.on(\"click.drag\", noevent, true);\n\t      setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n\t    }\n\t    if (\"onselectstart\" in root) {\n\t      selection.on(\"selectstart.drag\", null);\n\t    } else {\n\t      root.style.MozUserSelect = root.__noselect;\n\t      delete root.__noselect;\n\t    }\n\t  }\n\t\n\t  function constant$7(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t    this.target = target;\n\t    this.type = type;\n\t    this.subject = subject;\n\t    this.identifier = id;\n\t    this.active = active;\n\t    this.x = x;\n\t    this.y = y;\n\t    this.dx = dx;\n\t    this.dy = dy;\n\t    this._ = dispatch;\n\t  }\n\t\n\t  DragEvent.prototype.on = function() {\n\t    var value = this._.on.apply(this._, arguments);\n\t    return value === this._ ? this : value;\n\t  };\n\t\n\t  // Ignore right-click, since that should open the context menu.\n\t  function defaultFilter() {\n\t    return !exports.event.button;\n\t  }\n\t\n\t  function defaultContainer() {\n\t    return this.parentNode;\n\t  }\n\t\n\t  function defaultSubject(d) {\n\t    return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t  }\n\t\n\t  function drag() {\n\t    var filter = defaultFilter,\n\t        container = defaultContainer,\n\t        subject = defaultSubject,\n\t        gestures = {},\n\t        listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t        active = 0,\n\t        mousemoving,\n\t        touchending;\n\t\n\t    function drag(selection) {\n\t      selection\n\t          .on(\"mousedown.drag\", mousedowned)\n\t          .on(\"touchstart.drag\", touchstarted)\n\t          .on(\"touchmove.drag\", touchmoved)\n\t          .on(\"touchend.drag touchcancel.drag\", touchended)\n\t          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t    }\n\t\n\t    function mousedowned() {\n\t      if (touchending || !filter.apply(this, arguments)) return;\n\t      var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t      if (!gesture) return;\n\t      select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t      dragDisable(exports.event.view);\n\t      nopropagation();\n\t      mousemoving = false;\n\t      gesture(\"start\");\n\t    }\n\t\n\t    function mousemoved() {\n\t      noevent();\n\t      mousemoving = true;\n\t      gestures.mouse(\"drag\");\n\t    }\n\t\n\t    function mouseupped() {\n\t      select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t      dragEnable(exports.event.view, mousemoving);\n\t      noevent();\n\t      gestures.mouse(\"end\");\n\t    }\n\t\n\t    function touchstarted() {\n\t      if (!filter.apply(this, arguments)) return;\n\t      var touches = exports.event.changedTouches,\n\t          c = container.apply(this, arguments),\n\t          n = touches.length, i, gesture;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n\t          nopropagation();\n\t          gesture(\"start\");\n\t        }\n\t      }\n\t    }\n\t\n\t    function touchmoved() {\n\t      var touches = exports.event.changedTouches,\n\t          n = touches.length, i, gesture;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        if (gesture = gestures[touches[i].identifier]) {\n\t          noevent();\n\t          gesture(\"drag\");\n\t        }\n\t      }\n\t    }\n\t\n\t    function touchended() {\n\t      var touches = exports.event.changedTouches,\n\t          n = touches.length, i, gesture;\n\t\n\t      if (touchending) clearTimeout(touchending);\n\t      touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t      for (i = 0; i < n; ++i) {\n\t        if (gesture = gestures[touches[i].identifier]) {\n\t          nopropagation();\n\t          gesture(\"end\");\n\t        }\n\t      }\n\t    }\n\t\n\t    function beforestart(id, container, point, that, args) {\n\t      var p = point(container, id), s, dx, dy,\n\t          sublisteners = listeners.copy();\n\t\n\t      if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t        if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t        dx = s.x - p[0] || 0;\n\t        dy = s.y - p[1] || 0;\n\t        return true;\n\t      })) return;\n\t\n\t      return function gesture(type) {\n\t        var p0 = p, n;\n\t        switch (type) {\n\t          case \"start\": gestures[id] = gesture, n = active++; break;\n\t          case \"end\": delete gestures[id], --active; // nobreak\n\t          case \"drag\": p = point(container, id), n = active; break;\n\t        }\n\t        customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t      };\n\t    }\n\t\n\t    drag.filter = function(_) {\n\t      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$7(!!_), drag) : filter;\n\t    };\n\t\n\t    drag.container = function(_) {\n\t      return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$7(_), drag) : container;\n\t    };\n\t\n\t    drag.subject = function(_) {\n\t      return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$7(_), drag) : subject;\n\t    };\n\t\n\t    drag.on = function() {\n\t      var value = listeners.on.apply(listeners, arguments);\n\t      return value === listeners ? drag : value;\n\t    };\n\t\n\t    return drag;\n\t  }\n\t\n\t  function constant$8(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function x$4(d) {\n\t    return d[0];\n\t  }\n\t\n\t  function y$4(d) {\n\t    return d[1];\n\t  }\n\t\n\t  function RedBlackTree() {\n\t    this._ = null; // root node\n\t  }\n\t\n\t  function RedBlackNode(node) {\n\t    node.U = // parent node\n\t    node.C = // color - true for red, false for black\n\t    node.L = // left node\n\t    node.R = // right node\n\t    node.P = // previous node\n\t    node.N = null; // next node\n\t  }\n\t\n\t  RedBlackTree.prototype = {\n\t    constructor: RedBlackTree,\n\t\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = RedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              RedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            RedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              RedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            RedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t\n\t      var parent = node.U,\n\t          sibling,\n\t          left = node.L,\n\t          right = node.R,\n\t          next,\n\t          red;\n\t\n\t      if (!left) next = right;\n\t      else if (!right) next = left;\n\t      else next = RedBlackFirst(right);\n\t\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next;\n\t        else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) { node.C = false; return; }\n\t\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            RedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if ((sibling.L && sibling.L.C)\n\t              || (sibling.R && sibling.R.C)) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              RedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            RedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            RedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              RedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            RedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t\n\t  function RedBlackRotateLeft(tree, node) {\n\t    var p = node,\n\t        q = node.R,\n\t        parent = p.U;\n\t\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q;\n\t      else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t\n\t  function RedBlackRotateRight(tree, node) {\n\t    var p = node,\n\t        q = node.L,\n\t        parent = p.U;\n\t\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q;\n\t      else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t\n\t  function RedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t\n\t  function createEdge(left, right, v0, v1) {\n\t    var edge = [null, null],\n\t        index = edges.push(edge) - 1;\n\t    edge.left = left;\n\t    edge.right = right;\n\t    if (v0) setEdgeEnd(edge, left, right, v0);\n\t    if (v1) setEdgeEnd(edge, right, left, v1);\n\t    cells[left.index].halfedges.push(index);\n\t    cells[right.index].halfedges.push(index);\n\t    return edge;\n\t  }\n\t\n\t  function createBorderEdge(left, v0, v1) {\n\t    var edge = [v0, v1];\n\t    edge.left = left;\n\t    return edge;\n\t  }\n\t\n\t  function setEdgeEnd(edge, left, right, vertex) {\n\t    if (!edge[0] && !edge[1]) {\n\t      edge[0] = vertex;\n\t      edge.left = left;\n\t      edge.right = right;\n\t    } else if (edge.left === right) {\n\t      edge[1] = vertex;\n\t    } else {\n\t      edge[0] = vertex;\n\t    }\n\t  }\n\t\n\t  // Liang–Barsky line clipping.\n\t  function clipEdge(edge, x0, y0, x1, y1) {\n\t    var a = edge[0],\n\t        b = edge[1],\n\t        ax = a[0],\n\t        ay = a[1],\n\t        bx = b[0],\n\t        by = b[1],\n\t        t0 = 0,\n\t        t1 = 1,\n\t        dx = bx - ax,\n\t        dy = by - ay,\n\t        r;\n\t\n\t    r = x0 - ax;\n\t    if (!dx && r > 0) return;\n\t    r /= dx;\n\t    if (dx < 0) {\n\t      if (r < t0) return;\n\t      if (r < t1) t1 = r;\n\t    } else if (dx > 0) {\n\t      if (r > t1) return;\n\t      if (r > t0) t0 = r;\n\t    }\n\t\n\t    r = x1 - ax;\n\t    if (!dx && r < 0) return;\n\t    r /= dx;\n\t    if (dx < 0) {\n\t      if (r > t1) return;\n\t      if (r > t0) t0 = r;\n\t    } else if (dx > 0) {\n\t      if (r < t0) return;\n\t      if (r < t1) t1 = r;\n\t    }\n\t\n\t    r = y0 - ay;\n\t    if (!dy && r > 0) return;\n\t    r /= dy;\n\t    if (dy < 0) {\n\t      if (r < t0) return;\n\t      if (r < t1) t1 = r;\n\t    } else if (dy > 0) {\n\t      if (r > t1) return;\n\t      if (r > t0) t0 = r;\n\t    }\n\t\n\t    r = y1 - ay;\n\t    if (!dy && r < 0) return;\n\t    r /= dy;\n\t    if (dy < 0) {\n\t      if (r > t1) return;\n\t      if (r > t0) t0 = r;\n\t    } else if (dy > 0) {\n\t      if (r < t0) return;\n\t      if (r < t1) t1 = r;\n\t    }\n\t\n\t    if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t    if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t    if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t    return true;\n\t  }\n\t\n\t  function connectEdge(edge, x0, y0, x1, y1) {\n\t    var v1 = edge[1];\n\t    if (v1) return true;\n\t\n\t    var v0 = edge[0],\n\t        left = edge.left,\n\t        right = edge.right,\n\t        lx = left[0],\n\t        ly = left[1],\n\t        rx = right[0],\n\t        ry = right[1],\n\t        fx = (lx + rx) / 2,\n\t        fy = (ly + ry) / 2,\n\t        fm,\n\t        fb;\n\t\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [fx, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [fx, y1];\n\t      } else {\n\t        if (!v0) v0 = [fx, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [fx, y0];\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t          else if (v0[1] >= y1) return;\n\t          v1 = [(y1 - fb) / fm, y1];\n\t        } else {\n\t          if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t          else if (v0[1] < y0) return;\n\t          v1 = [(y0 - fb) / fm, y0];\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!v0) v0 = [x0, fm * x0 + fb];\n\t          else if (v0[0] >= x1) return;\n\t          v1 = [x1, fm * x1 + fb];\n\t        } else {\n\t          if (!v0) v0 = [x1, fm * x1 + fb];\n\t          else if (v0[0] < x0) return;\n\t          v1 = [x0, fm * x0 + fb];\n\t        }\n\t      }\n\t    }\n\t\n\t    edge[0] = v0;\n\t    edge[1] = v1;\n\t    return true;\n\t  }\n\t\n\t  function clipEdges(x0, y0, x1, y1) {\n\t    var i = edges.length,\n\t        edge;\n\t\n\t    while (i--) {\n\t      if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t          || !clipEdge(edge, x0, y0, x1, y1)\n\t          || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n\t              || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n\t        delete edges[i];\n\t      }\n\t    }\n\t  }\n\t\n\t  function createCell(site) {\n\t    return cells[site.index] = {\n\t      site: site,\n\t      halfedges: []\n\t    };\n\t  }\n\t\n\t  function cellHalfedgeAngle(cell, edge) {\n\t    var site = cell.site,\n\t        va = edge.left,\n\t        vb = edge.right;\n\t    if (site === vb) vb = va, va = site;\n\t    if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t    if (site === va) va = edge[1], vb = edge[0];\n\t    else va = edge[0], vb = edge[1];\n\t    return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t  }\n\t\n\t  function cellHalfedgeStart(cell, edge) {\n\t    return edge[+(edge.left !== cell.site)];\n\t  }\n\t\n\t  function cellHalfedgeEnd(cell, edge) {\n\t    return edge[+(edge.left === cell.site)];\n\t  }\n\t\n\t  function sortCellHalfedges() {\n\t    for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t      if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t        var index = new Array(m),\n\t            array = new Array(m);\n\t        for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t        index.sort(function(i, j) { return array[j] - array[i]; });\n\t        for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t        for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t      }\n\t    }\n\t  }\n\t\n\t  function clipCells(x0, y0, x1, y1) {\n\t    var nCells = cells.length,\n\t        iCell,\n\t        cell,\n\t        site,\n\t        iHalfedge,\n\t        halfedges,\n\t        nHalfedges,\n\t        start,\n\t        startX,\n\t        startY,\n\t        end,\n\t        endX,\n\t        endY,\n\t        cover = true;\n\t\n\t    for (iCell = 0; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        halfedges = cell.halfedges;\n\t        iHalfedge = halfedges.length;\n\t\n\t        // Remove any dangling clipped edges.\n\t        while (iHalfedge--) {\n\t          if (!edges[halfedges[iHalfedge]]) {\n\t            halfedges.splice(iHalfedge, 1);\n\t          }\n\t        }\n\t\n\t        // Insert any border edges as necessary.\n\t        iHalfedge = 0, nHalfedges = halfedges.length;\n\t        while (iHalfedge < nHalfedges) {\n\t          end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t          start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t          if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n\t            halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t                Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n\t                : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n\t                : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n\t                : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n\t                : null)) - 1);\n\t            ++nHalfedges;\n\t          }\n\t        }\n\t\n\t        if (nHalfedges) cover = false;\n\t      }\n\t    }\n\t\n\t    // If there weren’t any edges, have the closest site cover the extent.\n\t    // It doesn’t matter which corner of the extent we measure!\n\t    if (cover) {\n\t      var dx, dy, d2, dc = Infinity;\n\t\n\t      for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t        if (cell = cells[iCell]) {\n\t          site = cell.site;\n\t          dx = site[0] - x0;\n\t          dy = site[1] - y0;\n\t          d2 = dx * dx + dy * dy;\n\t          if (d2 < dc) dc = d2, cover = cell;\n\t        }\n\t      }\n\t\n\t      if (cover) {\n\t        var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t        cover.halfedges.push(\n\t          edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t          edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t          edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t          edges.push(createBorderEdge(site, v10, v00)) - 1\n\t        );\n\t      }\n\t    }\n\t\n\t    // Lastly delete any cells with no edges; these were entirely clipped.\n\t    for (iCell = 0; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        if (!cell.halfedges.length) {\n\t          delete cells[iCell];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  var circlePool = [];\n\t\n\t  var firstCircle;\n\t\n\t  function Circle() {\n\t    RedBlackNode(this);\n\t    this.x =\n\t    this.y =\n\t    this.arc =\n\t    this.site =\n\t    this.cy = null;\n\t  }\n\t\n\t  function attachCircle(arc) {\n\t    var lArc = arc.P,\n\t        rArc = arc.N;\n\t\n\t    if (!lArc || !rArc) return;\n\t\n\t    var lSite = lArc.site,\n\t        cSite = arc.site,\n\t        rSite = rArc.site;\n\t\n\t    if (lSite === rSite) return;\n\t\n\t    var bx = cSite[0],\n\t        by = cSite[1],\n\t        ax = lSite[0] - bx,\n\t        ay = lSite[1] - by,\n\t        cx = rSite[0] - bx,\n\t        cy = rSite[1] - by;\n\t\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -epsilon2$1) return;\n\t\n\t    var ha = ax * ax + ay * ay,\n\t        hc = cx * cx + cy * cy,\n\t        x = (cy * ha - ay * hc) / d,\n\t        y = (ax * hc - cx * ha) / d;\n\t\n\t    var circle = circlePool.pop() || new Circle;\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t    arc.circle = circle;\n\t\n\t    var before = null,\n\t        node = circles._;\n\t\n\t    while (node) {\n\t      if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t        if (node.L) node = node.L;\n\t        else { before = node.P; break; }\n\t      } else {\n\t        if (node.R) node = node.R;\n\t        else { before = node; break; }\n\t      }\n\t    }\n\t\n\t    circles.insert(before, circle);\n\t    if (!before) firstCircle = circle;\n\t  }\n\t\n\t  function detachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) firstCircle = circle.N;\n\t      circles.remove(circle);\n\t      circlePool.push(circle);\n\t      RedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t\n\t  var beachPool = [];\n\t\n\t  function Beach() {\n\t    RedBlackNode(this);\n\t    this.edge =\n\t    this.site =\n\t    this.circle = null;\n\t  }\n\t\n\t  function createBeach(site) {\n\t    var beach = beachPool.pop() || new Beach;\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t\n\t  function detachBeach(beach) {\n\t    detachCircle(beach);\n\t    beaches.remove(beach);\n\t    beachPool.push(beach);\n\t    RedBlackNode(beach);\n\t  }\n\t\n\t  function removeBeach(beach) {\n\t    var circle = beach.circle,\n\t        x = circle.x,\n\t        y = circle.cy,\n\t        vertex = [x, y],\n\t        previous = beach.P,\n\t        next = beach.N,\n\t        disappearing = [beach];\n\t\n\t    detachBeach(beach);\n\t\n\t    var lArc = previous;\n\t    while (lArc.circle\n\t        && Math.abs(x - lArc.circle.x) < epsilon$3\n\t        && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      detachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t\n\t    disappearing.unshift(lArc);\n\t    detachCircle(lArc);\n\t\n\t    var rArc = next;\n\t    while (rArc.circle\n\t        && Math.abs(x - rArc.circle.x) < epsilon$3\n\t        && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      detachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t\n\t    disappearing.push(rArc);\n\t    detachCircle(rArc);\n\t\n\t    var nArcs = disappearing.length,\n\t        iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t  }\n\t\n\t  function addBeach(site) {\n\t    var x = site[0],\n\t        directrix = site[1],\n\t        lArc,\n\t        rArc,\n\t        dxl,\n\t        dxr,\n\t        node = beaches._;\n\t\n\t    while (node) {\n\t      dxl = leftBreakPoint(node, directrix) - x;\n\t      if (dxl > epsilon$3) node = node.L; else {\n\t        dxr = x - rightBreakPoint(node, directrix);\n\t        if (dxr > epsilon$3) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -epsilon$3) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -epsilon$3) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    createCell(site);\n\t    var newArc = createBeach(site);\n\t    beaches.insert(lArc, newArc);\n\t\n\t    if (!lArc && !rArc) return;\n\t\n\t    if (lArc === rArc) {\n\t      detachCircle(lArc);\n\t      rArc = createBeach(lArc.site);\n\t      beaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t      attachCircle(lArc);\n\t      attachCircle(rArc);\n\t      return;\n\t    }\n\t\n\t    if (!rArc) { // && lArc\n\t      newArc.edge = createEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t\n\t    // else lArc !== rArc\n\t    detachCircle(lArc);\n\t    detachCircle(rArc);\n\t\n\t    var lSite = lArc.site,\n\t        ax = lSite[0],\n\t        ay = lSite[1],\n\t        bx = site[0] - ax,\n\t        by = site[1] - ay,\n\t        rSite = rArc.site,\n\t        cx = rSite[0] - ax,\n\t        cy = rSite[1] - ay,\n\t        d = 2 * (bx * cy - by * cx),\n\t        hb = bx * bx + by * by,\n\t        hc = cx * cx + cy * cy,\n\t        vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t    setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = createEdge(lSite, site, null, vertex);\n\t    rArc.edge = createEdge(site, rSite, null, vertex);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t  }\n\t\n\t  function leftBreakPoint(arc, directrix) {\n\t    var site = arc.site,\n\t        rfocx = site[0],\n\t        rfocy = site[1],\n\t        pby2 = rfocy - directrix;\n\t\n\t    if (!pby2) return rfocx;\n\t\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t\n\t    site = lArc.site;\n\t    var lfocx = site[0],\n\t        lfocy = site[1],\n\t        plby2 = lfocy - directrix;\n\t\n\t    if (!plby2) return lfocx;\n\t\n\t    var hl = lfocx - rfocx,\n\t        aby2 = 1 / pby2 - 1 / plby2,\n\t        b = hl / plby2;\n\t\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t\n\t  function rightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return leftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site[1] === directrix ? site[0] : Infinity;\n\t  }\n\t\n\t  var epsilon$3 = 1e-6;\n\t  var epsilon2$1 = 1e-12;\n\t  var beaches;\n\t  var cells;\n\t  var circles;\n\t  var edges;\n\t\n\t  function triangleArea(a, b, c) {\n\t    return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t  }\n\t\n\t  function lexicographic(a, b) {\n\t    return b[1] - a[1]\n\t        || b[0] - a[0];\n\t  }\n\t\n\t  function Diagram(sites, extent) {\n\t    var site = sites.sort(lexicographic).pop(),\n\t        x,\n\t        y,\n\t        circle;\n\t\n\t    edges = [];\n\t    cells = new Array(sites.length);\n\t    beaches = new RedBlackTree;\n\t    circles = new RedBlackTree;\n\t\n\t    while (true) {\n\t      circle = firstCircle;\n\t      if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t        if (site[0] !== x || site[1] !== y) {\n\t          addBeach(site);\n\t          x = site[0], y = site[1];\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        removeBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t\n\t    sortCellHalfedges();\n\t\n\t    if (extent) {\n\t      var x0 = +extent[0][0],\n\t          y0 = +extent[0][1],\n\t          x1 = +extent[1][0],\n\t          y1 = +extent[1][1];\n\t      clipEdges(x0, y0, x1, y1);\n\t      clipCells(x0, y0, x1, y1);\n\t    }\n\t\n\t    this.edges = edges;\n\t    this.cells = cells;\n\t\n\t    beaches =\n\t    circles =\n\t    edges =\n\t    cells = null;\n\t  }\n\t\n\t  Diagram.prototype = {\n\t    constructor: Diagram,\n\t\n\t    polygons: function() {\n\t      var edges = this.edges;\n\t\n\t      return this.cells.map(function(cell) {\n\t        var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t        polygon.data = cell.site.data;\n\t        return polygon;\n\t      });\n\t    },\n\t\n\t    triangles: function() {\n\t      var triangles = [],\n\t          edges = this.edges;\n\t\n\t      this.cells.forEach(function(cell, i) {\n\t        var site = cell.site,\n\t            halfedges = cell.halfedges,\n\t            j = -1,\n\t            m = halfedges.length,\n\t            s0,\n\t            e1 = edges[halfedges[m - 1]],\n\t            s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t        while (++j < m) {\n\t          s0 = s1;\n\t          e1 = edges[halfedges[j]];\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t          if (i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t            triangles.push([site.data, s0.data, s1.data]);\n\t          }\n\t        }\n\t      });\n\t\n\t      return triangles;\n\t    },\n\t\n\t    links: function() {\n\t      return this.edges.filter(function(edge) {\n\t        return edge.right;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: edge.left.data,\n\t          target: edge.right.data\n\t        };\n\t      });\n\t    }\n\t  }\n\t\n\t  function voronoi() {\n\t    var x = x$4,\n\t        y = y$4,\n\t        extent = null;\n\t\n\t    function voronoi(data) {\n\t      return new Diagram(data.map(function(d, i) {\n\t        var s = [Math.round(x(d, i, data) / epsilon$3) * epsilon$3, Math.round(y(d, i, data) / epsilon$3) * epsilon$3];\n\t        s.index = i;\n\t        s.data = d;\n\t        return s;\n\t      }), extent);\n\t    }\n\t\n\t    voronoi.polygons = function(data) {\n\t      return voronoi(data).polygons();\n\t    };\n\t\n\t    voronoi.links = function(data) {\n\t      return voronoi(data).links();\n\t    };\n\t\n\t    voronoi.triangles = function(data) {\n\t      return voronoi(data).triangles();\n\t    };\n\t\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$8(+_), voronoi) : x;\n\t    };\n\t\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$8(+_), voronoi) : y;\n\t    };\n\t\n\t    voronoi.extent = function(_) {\n\t      return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t    };\n\t\n\t    voronoi.size = function(_) {\n\t      return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t    };\n\t\n\t    return voronoi;\n\t  }\n\t\n\t  function constant$9(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function ZoomEvent(target, type, transform) {\n\t    this.target = target;\n\t    this.type = type;\n\t    this.transform = transform;\n\t  }\n\t\n\t  function Transform(k, x, y) {\n\t    this.k = k;\n\t    this.x = x;\n\t    this.y = y;\n\t  }\n\t\n\t  Transform.prototype = {\n\t    constructor: Transform,\n\t    scale: function(k) {\n\t      return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t    },\n\t    translate: function(x, y) {\n\t      return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t    },\n\t    apply: function(point) {\n\t      return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t    },\n\t    applyX: function(x) {\n\t      return x * this.k + this.x;\n\t    },\n\t    applyY: function(y) {\n\t      return y * this.k + this.y;\n\t    },\n\t    invert: function(location) {\n\t      return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t    },\n\t    invertX: function(x) {\n\t      return (x - this.x) / this.k;\n\t    },\n\t    invertY: function(y) {\n\t      return (y - this.y) / this.k;\n\t    },\n\t    rescaleX: function(x) {\n\t      return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t    },\n\t    rescaleY: function(y) {\n\t      return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t    },\n\t    toString: function() {\n\t      return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t    }\n\t  };\n\t\n\t  var identity$6 = new Transform(1, 0, 0);\n\t\n\t  transform.prototype = Transform.prototype;\n\t\n\t  function transform(node) {\n\t    return node.__zoom || identity$6;\n\t  }\n\t\n\t  function nopropagation$1() {\n\t    exports.event.stopImmediatePropagation();\n\t  }\n\t\n\t  function noevent$1() {\n\t    exports.event.preventDefault();\n\t    exports.event.stopImmediatePropagation();\n\t  }\n\t\n\t  // Ignore right-click, since that should open the context menu.\n\t  function defaultFilter$1() {\n\t    return !exports.event.button;\n\t  }\n\t\n\t  function defaultExtent() {\n\t    var e = this, w, h;\n\t    if (e instanceof SVGElement) {\n\t      e = e.ownerSVGElement || e;\n\t      w = e.width.baseVal.value;\n\t      h = e.height.baseVal.value;\n\t    } else {\n\t      w = e.clientWidth;\n\t      h = e.clientHeight;\n\t    }\n\t    return [[0, 0], [w, h]];\n\t  }\n\t\n\t  function defaultTransform() {\n\t    return this.__zoom || identity$6;\n\t  }\n\t\n\t  function zoom() {\n\t    var filter = defaultFilter$1,\n\t        extent = defaultExtent,\n\t        k0 = 0,\n\t        k1 = Infinity,\n\t        x0 = -k1,\n\t        x1 = k1,\n\t        y0 = x0,\n\t        y1 = x1,\n\t        duration = 250,\n\t        gestures = [],\n\t        listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t        touchstarting,\n\t        touchending,\n\t        touchDelay = 500,\n\t        wheelDelay = 150;\n\t\n\t    function zoom(selection) {\n\t      selection\n\t          .on(\"wheel.zoom\", wheeled)\n\t          .on(\"mousedown.zoom\", mousedowned)\n\t          .on(\"dblclick.zoom\", dblclicked)\n\t          .on(\"touchstart.zoom\", touchstarted)\n\t          .on(\"touchmove.zoom\", touchmoved)\n\t          .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t          .property(\"__zoom\", defaultTransform);\n\t    }\n\t\n\t    zoom.transform = function(collection, transform) {\n\t      var selection = collection.selection ? collection.selection() : collection;\n\t      selection.property(\"__zoom\", defaultTransform);\n\t      if (collection !== selection) {\n\t        schedule(collection, transform);\n\t      } else {\n\t        selection.interrupt().each(function() {\n\t          gesture(this, arguments)\n\t              .start()\n\t              .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n\t              .end();\n\t        });\n\t      }\n\t    };\n\t\n\t    zoom.scaleBy = function(selection, k) {\n\t      zoom.scaleTo(selection, function() {\n\t        var k0 = this.__zoom.k,\n\t            k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t        return k0 * k1;\n\t      });\n\t    };\n\t\n\t    zoom.scaleTo = function(selection, k) {\n\t      zoom.transform(selection, function() {\n\t        var e = extent.apply(this, arguments),\n\t            t0 = this.__zoom,\n\t            p0 = centroid(e),\n\t            p1 = t0.invert(p0),\n\t            k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t        return constrain(translate(scale(t0, k1), p0, p1), e);\n\t      });\n\t    };\n\t\n\t    zoom.translateBy = function(selection, x, y) {\n\t      zoom.transform(selection, function() {\n\t        return constrain(this.__zoom.translate(\n\t          typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t          typeof y === \"function\" ? y.apply(this, arguments) : y\n\t        ), extent.apply(this, arguments));\n\t      });\n\t    };\n\t\n\t    function scale(transform, k) {\n\t      k = Math.max(k0, Math.min(k1, k));\n\t      return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n\t    }\n\t\n\t    function translate(transform, p0, p1) {\n\t      var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n\t      return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n\t    }\n\t\n\t    function constrain(transform, extent) {\n\t      var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),\n\t          dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);\n\t      return dx || dy ? transform.translate(dx, dy) : transform;\n\t    }\n\t\n\t    function centroid(extent) {\n\t      return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t    }\n\t\n\t    function schedule(transition, transform, center) {\n\t      transition\n\t          .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t          .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t          .tween(\"zoom\", function() {\n\t            var that = this,\n\t                args = arguments,\n\t                g = gesture(that, args),\n\t                e = extent.apply(that, args),\n\t                p = center || centroid(e),\n\t                w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t                a = that.__zoom,\n\t                b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n\t                i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t            return function(t) {\n\t              if (t === 1) t = b; // Avoid rounding error on end.\n\t              else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t              g.zoom(null, t);\n\t            };\n\t          });\n\t    }\n\t\n\t    function gesture(that, args) {\n\t      for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t        if ((g = gestures[i]).that === that) {\n\t          return g;\n\t        }\n\t      }\n\t      return new Gesture(that, args);\n\t    }\n\t\n\t    function Gesture(that, args) {\n\t      this.that = that;\n\t      this.args = args;\n\t      this.index = -1;\n\t      this.active = 0;\n\t      this.extent = extent.apply(that, args);\n\t    }\n\t\n\t    Gesture.prototype = {\n\t      start: function() {\n\t        if (++this.active === 1) {\n\t          this.index = gestures.push(this) - 1;\n\t          this.emit(\"start\");\n\t        }\n\t        return this;\n\t      },\n\t      zoom: function(key, transform) {\n\t        if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n\t        if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n\t        if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n\t        this.that.__zoom = transform;\n\t        this.emit(\"zoom\");\n\t        return this;\n\t      },\n\t      end: function() {\n\t        if (--this.active === 0) {\n\t          gestures.splice(this.index, 1);\n\t          this.index = -1;\n\t          this.emit(\"end\");\n\t        }\n\t        return this;\n\t      },\n\t      emit: function(type) {\n\t        customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t      }\n\t    };\n\t\n\t    function wheeled() {\n\t      if (!filter.apply(this, arguments)) return;\n\t      var g = gesture(this, arguments),\n\t          t = this.__zoom,\n\t          k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n\t          p = mouse(this);\n\t\n\t      // If the mouse is in the same location as before, reuse it.\n\t      // If there were recent wheel events, reset the wheel idle timeout.\n\t      if (g.wheel) {\n\t        if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t          g.mouse[1] = t.invert(g.mouse[0] = p);\n\t        }\n\t        clearTimeout(g.wheel);\n\t      }\n\t\n\t      // If this wheel event won’t trigger a transform change, ignore it.\n\t      else if (t.k === k) return;\n\t\n\t      // Otherwise, capture the mouse point and location at the start.\n\t      else {\n\t        g.mouse = [p, t.invert(p)];\n\t        interrupt(this);\n\t        g.start();\n\t      }\n\t\n\t      noevent$1();\n\t      g.wheel = setTimeout(wheelidled, wheelDelay);\n\t      g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t      function wheelidled() {\n\t        g.wheel = null;\n\t        g.end();\n\t      }\n\t    }\n\t\n\t    function mousedowned() {\n\t      if (touchending || !filter.apply(this, arguments)) return;\n\t      var g = gesture(this, arguments),\n\t          v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t          p = mouse(this);\n\t\n\t      dragDisable(exports.event.view);\n\t      nopropagation$1();\n\t      g.mouse = [p, this.__zoom.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t\n\t      function mousemoved() {\n\t        noevent$1();\n\t        g.moved = true;\n\t        g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t      }\n\t\n\t      function mouseupped() {\n\t        v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t        dragEnable(exports.event.view, g.moved);\n\t        noevent$1();\n\t        g.end();\n\t      }\n\t    }\n\t\n\t    function dblclicked() {\n\t      if (!filter.apply(this, arguments)) return;\n\t      var t0 = this.__zoom,\n\t          p0 = mouse(this),\n\t          p1 = t0.invert(p0),\n\t          k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t          t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t      noevent$1();\n\t      if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t      else select(this).call(zoom.transform, t1);\n\t    }\n\t\n\t    function touchstarted() {\n\t      if (!filter.apply(this, arguments)) return;\n\t      var g = gesture(this, arguments),\n\t          touches = exports.event.changedTouches,\n\t          n = touches.length, i, t, p;\n\t\n\t      nopropagation$1();\n\t      for (i = 0; i < n; ++i) {\n\t        t = touches[i], p = touch(this, touches, t.identifier);\n\t        p = [p, this.__zoom.invert(p), t.identifier];\n\t        if (!g.touch0) g.touch0 = p;\n\t        else if (!g.touch1) g.touch1 = p;\n\t      }\n\t      if (touchstarting) {\n\t        touchstarting = clearTimeout(touchstarting);\n\t        if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);\n\t      }\n\t      if (exports.event.touches.length === n) {\n\t        touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t        interrupt(this);\n\t        g.start();\n\t      }\n\t    }\n\t\n\t    function touchmoved() {\n\t      var g = gesture(this, arguments),\n\t          touches = exports.event.changedTouches,\n\t          n = touches.length, i, t, p, l;\n\t\n\t      noevent$1();\n\t      if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t      for (i = 0; i < n; ++i) {\n\t        t = touches[i], p = touch(this, touches, t.identifier);\n\t        if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t        else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t      }\n\t      t = g.that.__zoom;\n\t      if (g.touch1) {\n\t        var p0 = g.touch0[0], l0 = g.touch0[1],\n\t            p1 = g.touch1[0], l1 = g.touch1[1],\n\t            dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t            dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t        t = scale(t, Math.sqrt(dp / dl));\n\t        p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t        l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t      }\n\t      else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t      else return;\n\t      g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t    }\n\t\n\t    function touchended() {\n\t      var g = gesture(this, arguments),\n\t          touches = exports.event.changedTouches,\n\t          n = touches.length, i, t;\n\t\n\t      nopropagation$1();\n\t      if (touchending) clearTimeout(touchending);\n\t      touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t      for (i = 0; i < n; ++i) {\n\t        t = touches[i];\n\t        if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t        else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t      }\n\t      if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t      if (!g.touch0) g.end();\n\t    }\n\t\n\t    zoom.filter = function(_) {\n\t      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$9(!!_), zoom) : filter;\n\t    };\n\t\n\t    zoom.extent = function(_) {\n\t      return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$9([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t    };\n\t\n\t    zoom.scaleExtent = function(_) {\n\t      return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t    };\n\t\n\t    zoom.translateExtent = function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t    };\n\t\n\t    zoom.duration = function(_) {\n\t      return arguments.length ? (duration = +_, zoom) : duration;\n\t    };\n\t\n\t    zoom.on = function() {\n\t      var value = listeners.on.apply(listeners, arguments);\n\t      return value === listeners ? zoom : value;\n\t    };\n\t\n\t    return zoom;\n\t  }\n\t\n\t  function constant$10(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function BrushEvent(target, type, selection) {\n\t    this.target = target;\n\t    this.type = type;\n\t    this.selection = selection;\n\t  }\n\t\n\t  function nopropagation$2() {\n\t    exports.event.stopImmediatePropagation();\n\t  }\n\t\n\t  function noevent$2() {\n\t    exports.event.preventDefault();\n\t    exports.event.stopImmediatePropagation();\n\t  }\n\t\n\t  var MODE_DRAG = {name: \"drag\"};\n\t  var MODE_SPACE = {name: \"space\"};\n\t  var MODE_HANDLE = {name: \"handle\"};\n\t  var MODE_CENTER = {name: \"center\"};\n\t  var X = {\n\t    name: \"x\",\n\t    handles: [\"e\", \"w\"].map(type$1),\n\t    input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t    output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t  };\n\t\n\t  var Y = {\n\t    name: \"y\",\n\t    handles: [\"n\", \"s\"].map(type$1),\n\t    input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t    output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t  };\n\t\n\t  var XY = {\n\t    name: \"xy\",\n\t    handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n\t    input: function(xy) { return xy; },\n\t    output: function(xy) { return xy; }\n\t  };\n\t\n\t  var cursors = {\n\t    overlay: \"crosshair\",\n\t    selection: \"move\",\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t\n\t  var flipX = {\n\t    e: \"w\",\n\t    w: \"e\",\n\t    nw: \"ne\",\n\t    ne: \"nw\",\n\t    se: \"sw\",\n\t    sw: \"se\"\n\t  };\n\t\n\t  var flipY = {\n\t    n: \"s\",\n\t    s: \"n\",\n\t    nw: \"sw\",\n\t    ne: \"se\",\n\t    se: \"ne\",\n\t    sw: \"nw\"\n\t  };\n\t\n\t  var signsX = {\n\t    overlay: +1,\n\t    selection: +1,\n\t    n: null,\n\t    e: +1,\n\t    s: null,\n\t    w: -1,\n\t    nw: -1,\n\t    ne: +1,\n\t    se: +1,\n\t    sw: -1\n\t  };\n\t\n\t  var signsY = {\n\t    overlay: +1,\n\t    selection: +1,\n\t    n: -1,\n\t    e: null,\n\t    s: +1,\n\t    w: null,\n\t    nw: -1,\n\t    ne: -1,\n\t    se: +1,\n\t    sw: +1\n\t  };\n\t\n\t  function type$1(t) {\n\t    return {type: t};\n\t  }\n\t\n\t  // Ignore right-click, since that should open the context menu.\n\t  function defaultFilter$2() {\n\t    return !exports.event.button;\n\t  }\n\t\n\t  function defaultExtent$1() {\n\t    var svg = this.ownerSVGElement || this;\n\t    return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t  }\n\t\n\t  // Like d3.local, but with the name “__brush” rather than auto-generated.\n\t  function local$1(node) {\n\t    while (!node.__brush) if (!(node = node.parentNode)) return;\n\t    return node.__brush;\n\t  }\n\t\n\t  function empty$1(extent) {\n\t    return extent[0][0] === extent[1][0]\n\t        || extent[0][1] === extent[1][1];\n\t  }\n\t\n\t  function brushSelection(node) {\n\t    var state = node.__brush;\n\t    return state ? state.dim.output(state.selection) : null;\n\t  }\n\t\n\t  function brushX() {\n\t    return brush$1(X);\n\t  }\n\t\n\t  function brushY() {\n\t    return brush$1(Y);\n\t  }\n\t\n\t  function brush() {\n\t    return brush$1(XY);\n\t  }\n\t\n\t  function brush$1(dim) {\n\t    var extent = defaultExtent$1,\n\t        filter = defaultFilter$2,\n\t        listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t        handleSize = 6,\n\t        touchending;\n\t\n\t    function brush(group) {\n\t      var overlay = group\n\t          .property(\"__brush\", initialize)\n\t        .selectAll(\".overlay\")\n\t        .data([type$1(\"overlay\")]);\n\t\n\t      overlay.enter().append(\"rect\")\n\t          .attr(\"class\", \"overlay\")\n\t          .attr(\"pointer-events\", \"all\")\n\t          .attr(\"cursor\", cursors.overlay)\n\t        .merge(overlay)\n\t          .each(function() {\n\t            var extent = local$1(this).extent;\n\t            select(this)\n\t                .attr(\"x\", extent[0][0])\n\t                .attr(\"y\", extent[0][1])\n\t                .attr(\"width\", extent[1][0] - extent[0][0])\n\t                .attr(\"height\", extent[1][1] - extent[0][1]);\n\t          });\n\t\n\t      group.selectAll(\".selection\")\n\t        .data([type$1(\"selection\")])\n\t        .enter().append(\"rect\")\n\t          .attr(\"class\", \"selection\")\n\t          .attr(\"cursor\", cursors.selection)\n\t          .attr(\"fill\", \"#777\")\n\t          .attr(\"fill-opacity\", 0.3)\n\t          .attr(\"stroke\", \"#fff\")\n\t          .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t      var handle = group.selectAll(\".handle\")\n\t        .data(dim.handles, function(d) { return d.type; });\n\t\n\t      handle.exit().remove();\n\t\n\t      handle.enter().append(\"rect\")\n\t          .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t          .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t      group\n\t          .each(redraw)\n\t          .attr(\"fill\", \"none\")\n\t          .attr(\"pointer-events\", \"all\")\n\t          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t          .on(\"mousedown.brush touchstart.brush\", started);\n\t    }\n\t\n\t    brush.move = function(group, selection) {\n\t      if (group.selection) {\n\t        group\n\t            .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t            .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t            .tween(\"brush\", function() {\n\t              var that = this,\n\t                  state = that.__brush,\n\t                  emit = emitter(that, arguments),\n\t                  selection0 = state.selection,\n\t                  selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n\t                  i = interpolate(selection0, selection1);\n\t\n\t              function tween(t) {\n\t                state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n\t                redraw.call(that);\n\t                emit.brush();\n\t              }\n\t\n\t              return selection0 && selection1 ? tween : tween(1);\n\t            });\n\t      } else {\n\t        group\n\t            .each(function() {\n\t              var that = this,\n\t                  args = arguments,\n\t                  state = that.__brush,\n\t                  selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n\t                  emit = emitter(that, args).beforestart();\n\t\n\t              interrupt(that);\n\t              state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n\t              redraw.call(that);\n\t              emit.start().brush().end();\n\t            });\n\t      }\n\t    };\n\t\n\t    function redraw() {\n\t      var group = select(this),\n\t          selection = local$1(this).selection;\n\t\n\t      if (selection) {\n\t        group.selectAll(\".selection\")\n\t            .style(\"display\", null)\n\t            .attr(\"x\", selection[0][0])\n\t            .attr(\"y\", selection[0][1])\n\t            .attr(\"width\", selection[1][0] - selection[0][0])\n\t            .attr(\"height\", selection[1][1] - selection[0][1]);\n\t\n\t        group.selectAll(\".handle\")\n\t            .style(\"display\", null)\n\t            .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n\t            .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n\t            .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n\t            .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n\t      }\n\t\n\t      else {\n\t        group.selectAll(\".selection,.handle\")\n\t            .style(\"display\", \"none\")\n\t            .attr(\"x\", null)\n\t            .attr(\"y\", null)\n\t            .attr(\"width\", null)\n\t            .attr(\"height\", null);\n\t      }\n\t    }\n\t\n\t    function emitter(that, args) {\n\t      return that.__brush.emitter || new Emitter(that, args);\n\t    }\n\t\n\t    function Emitter(that, args) {\n\t      this.that = that;\n\t      this.args = args;\n\t      this.state = that.__brush;\n\t      this.active = 0;\n\t    }\n\t\n\t    Emitter.prototype = {\n\t      beforestart: function() {\n\t        if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t        return this;\n\t      },\n\t      start: function() {\n\t        if (this.starting) this.starting = false, this.emit(\"start\");\n\t        return this;\n\t      },\n\t      brush: function() {\n\t        this.emit(\"brush\");\n\t        return this;\n\t      },\n\t      end: function() {\n\t        if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t        return this;\n\t      },\n\t      emit: function(type) {\n\t        customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t      }\n\t    };\n\t\n\t    function started() {\n\t      if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n\t      else if (touchending) return;\n\t      if (!filter.apply(this, arguments)) return;\n\t\n\t      var that = this,\n\t          type = exports.event.target.__data__.type,\n\t          mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t          signX = dim === Y ? null : signsX[type],\n\t          signY = dim === X ? null : signsY[type],\n\t          state = local$1(that),\n\t          extent = state.extent,\n\t          selection = state.selection,\n\t          W = extent[0][0], w0, w1,\n\t          N = extent[0][1], n0, n1,\n\t          E = extent[1][0], e0, e1,\n\t          S = extent[1][1], s0, s1,\n\t          dx,\n\t          dy,\n\t          moving,\n\t          shifting = signX && signY && exports.event.shiftKey,\n\t          lockX,\n\t          lockY,\n\t          point0 = mouse(that),\n\t          point = point0,\n\t          emit = emitter(that, arguments).beforestart();\n\t\n\t      if (type === \"overlay\") {\n\t        state.selection = selection = [\n\t          [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t          [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t        ];\n\t      } else {\n\t        w0 = selection[0][0];\n\t        n0 = selection[0][1];\n\t        e0 = selection[1][0];\n\t        s0 = selection[1][1];\n\t      }\n\t\n\t      w1 = w0;\n\t      n1 = n0;\n\t      e1 = e0;\n\t      s1 = s0;\n\t\n\t      var group = select(that)\n\t          .attr(\"pointer-events\", \"none\");\n\t\n\t      var overlay = group.selectAll(\".overlay\")\n\t          .attr(\"cursor\", cursors[type]);\n\t\n\t      if (exports.event.touches) {\n\t        group\n\t            .on(\"touchmove.brush\", moved, true)\n\t            .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t      } else {\n\t        var view = select(exports.event.view)\n\t            .on(\"keydown.brush\", keydowned, true)\n\t            .on(\"keyup.brush\", keyupped, true)\n\t            .on(\"mousemove.brush\", moved, true)\n\t            .on(\"mouseup.brush\", ended, true);\n\t\n\t        dragDisable(exports.event.view);\n\t      }\n\t\n\t      nopropagation$2();\n\t      interrupt(that);\n\t      redraw.call(that);\n\t      emit.start();\n\t\n\t      function moved() {\n\t        var point1 = mouse(that);\n\t        if (shifting && !lockX && !lockY) {\n\t          if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t          else lockX = true;\n\t        }\n\t        point = point1;\n\t        moving = true;\n\t        noevent$2();\n\t        move();\n\t      }\n\t\n\t      function move() {\n\t        var t;\n\t\n\t        dx = point[0] - point0[0];\n\t        dy = point[1] - point0[1];\n\t\n\t        switch (mode) {\n\t          case MODE_SPACE:\n\t          case MODE_DRAG: {\n\t            if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t            if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t            break;\n\t          }\n\t          case MODE_HANDLE: {\n\t            if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t            else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t            if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t            else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t            break;\n\t          }\n\t          case MODE_CENTER: {\n\t            if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t            if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t            break;\n\t          }\n\t        }\n\t\n\t        if (e1 < w1) {\n\t          signX *= -1;\n\t          t = w0, w0 = e0, e0 = t;\n\t          t = w1, w1 = e1, e1 = t;\n\t          if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t        }\n\t\n\t        if (s1 < n1) {\n\t          signY *= -1;\n\t          t = n0, n0 = s0, s0 = t;\n\t          t = n1, n1 = s1, s1 = t;\n\t          if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t        }\n\t\n\t        selection = state.selection; // May be set by brush.move!\n\t\n\t        if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n\t        if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\t\n\t        if (selection[0][0] !== w1\n\t            || selection[0][1] !== n1\n\t            || selection[1][0] !== e1\n\t            || selection[1][1] !== s1) {\n\t          state.selection = [[w1, n1], [e1, s1]];\n\t          redraw.call(that);\n\t          emit.brush();\n\t        }\n\t      }\n\t\n\t      function ended() {\n\t        nopropagation$2();\n\t        if (exports.event.touches) {\n\t          if (exports.event.touches.length) return;\n\t          if (touchending) clearTimeout(touchending);\n\t          touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t          group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t        } else {\n\t          dragEnable(exports.event.view, moving);\n\t          view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t        }\n\t        group.attr(\"pointer-events\", \"all\");\n\t        overlay.attr(\"cursor\", cursors.overlay);\n\t        if (empty$1(selection)) state.selection = null, redraw.call(that);\n\t        emit.end();\n\t      }\n\t\n\t      function keydowned() {\n\t        switch (exports.event.keyCode) {\n\t          case 16: { // SHIFT\n\t            shifting = signX && signY;\n\t            break;\n\t          }\n\t          case 18: { // ALT\n\t            if (mode === MODE_HANDLE) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t              move();\n\t            }\n\t            break;\n\t          }\n\t          case 32: { // SPACE; takes priority over ALT\n\t            if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t              if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t              if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t              mode = MODE_SPACE;\n\t              overlay.attr(\"cursor\", cursors.selection);\n\t              move();\n\t            }\n\t            break;\n\t          }\n\t          default: return;\n\t        }\n\t        noevent$2();\n\t      }\n\t\n\t      function keyupped() {\n\t        switch (exports.event.keyCode) {\n\t          case 16: { // SHIFT\n\t            if (shifting) {\n\t              lockX = lockY = shifting = false;\n\t              move();\n\t            }\n\t            break;\n\t          }\n\t          case 18: { // ALT\n\t            if (mode === MODE_CENTER) {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t              move();\n\t            }\n\t            break;\n\t          }\n\t          case 32: { // SPACE\n\t            if (mode === MODE_SPACE) {\n\t              if (exports.event.altKey) {\n\t                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t                mode = MODE_CENTER;\n\t              } else {\n\t                if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t                if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t                mode = MODE_HANDLE;\n\t              }\n\t              overlay.attr(\"cursor\", cursors[type]);\n\t              move();\n\t            }\n\t            break;\n\t          }\n\t          default: return;\n\t        }\n\t        noevent$2();\n\t      }\n\t    }\n\t\n\t    function initialize() {\n\t      var state = this.__brush || {selection: null};\n\t      state.extent = extent.apply(this, arguments);\n\t      state.dim = dim;\n\t      return state;\n\t    }\n\t\n\t    brush.extent = function(_) {\n\t      return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t    };\n\t\n\t    brush.filter = function(_) {\n\t      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), brush) : filter;\n\t    };\n\t\n\t    brush.handleSize = function(_) {\n\t      return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t    };\n\t\n\t    brush.on = function() {\n\t      var value = listeners.on.apply(listeners, arguments);\n\t      return value === listeners ? brush : value;\n\t    };\n\t\n\t    return brush;\n\t  }\n\t\n\t  var cos = Math.cos;\n\t  var sin = Math.sin;\n\t  var pi$3 = Math.PI;\n\t  var halfPi$2 = pi$3 / 2;\n\t  var tau$3 = pi$3 * 2;\n\t  var max$1 = Math.max;\n\t\n\t  function compareValue(compare) {\n\t    return function(a, b) {\n\t      return compare(\n\t        a.source.value + a.target.value,\n\t        b.source.value + b.target.value\n\t      );\n\t    };\n\t  }\n\t\n\t  function chord() {\n\t    var padAngle = 0,\n\t        sortGroups = null,\n\t        sortSubgroups = null,\n\t        sortChords = null;\n\t\n\t    function chord(matrix) {\n\t      var n = matrix.length,\n\t          groupSums = [],\n\t          groupIndex = range(n),\n\t          subgroupIndex = [],\n\t          chords = [],\n\t          groups = chords.groups = new Array(n),\n\t          subgroups = new Array(n * n),\n\t          k,\n\t          x,\n\t          x0,\n\t          dx,\n\t          i,\n\t          j;\n\t\n\t      // Compute the sum.\n\t      k = 0, i = -1; while (++i < n) {\n\t        x = 0, j = -1; while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(range(n));\n\t        k += x;\n\t      }\n\t\n\t      // Sort groups…\n\t      if (sortGroups) groupIndex.sort(function(a, b) {\n\t        return sortGroups(groupSums[a], groupSums[b]);\n\t      });\n\t\n\t      // Sort subgroups…\n\t      if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t        d.sort(function(a, b) {\n\t          return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t        });\n\t      });\n\t\n\t      // Convert the sum to scaling factor for [0, 2pi].\n\t      // TODO Allow start and end angle to be specified?\n\t      // TODO Allow padding to be specified as percentage?\n\t      k = max$1(0, tau$3 - padAngle * n) / k;\n\t      dx = k ? padAngle : tau$3 / n;\n\t\n\t      // Compute the start and end angle for each group and subgroup.\n\t      // Note: Opera has a bug reordering object literal properties!\n\t      x = 0, i = -1; while (++i < n) {\n\t        x0 = x, j = -1; while (++j < n) {\n\t          var di = groupIndex[i],\n\t              dj = subgroupIndex[di][j],\n\t              v = matrix[di][dj],\n\t              a0 = x,\n\t              a1 = x += v * k;\n\t          subgroups[dj * n + di] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += dx;\n\t      }\n\t\n\t      // Generate chords for each (non-empty) subgroup-subgroup link.\n\t      i = -1; while (++i < n) {\n\t        j = i - 1; while (++j < n) {\n\t          var source = subgroups[j * n + i],\n\t              target = subgroups[i * n + j];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value\n\t                ? {source: target, target: source}\n\t                : {source: source, target: target});\n\t          }\n\t        }\n\t      }\n\t\n\t      return sortChords ? chords.sort(sortChords) : chords;\n\t    }\n\t\n\t    chord.padAngle = function(_) {\n\t      return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t    };\n\t\n\t    chord.sortGroups = function(_) {\n\t      return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t    };\n\t\n\t    chord.sortSubgroups = function(_) {\n\t      return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t    };\n\t\n\t    chord.sortChords = function(_) {\n\t      return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t    };\n\t\n\t    return chord;\n\t  }\n\t\n\t  var slice$5 = Array.prototype.slice;\n\t\n\t  function constant$11(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function defaultSource(d) {\n\t    return d.source;\n\t  }\n\t\n\t  function defaultTarget(d) {\n\t    return d.target;\n\t  }\n\t\n\t  function defaultRadius$1(d) {\n\t    return d.radius;\n\t  }\n\t\n\t  function defaultStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t\n\t  function defaultEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t\n\t  function ribbon() {\n\t    var source = defaultSource,\n\t        target = defaultTarget,\n\t        radius = defaultRadius$1,\n\t        startAngle = defaultStartAngle,\n\t        endAngle = defaultEndAngle,\n\t        context = null;\n\t\n\t    function ribbon() {\n\t      var buffer,\n\t          argv = slice$5.call(arguments),\n\t          s = source.apply(this, argv),\n\t          t = target.apply(this, argv),\n\t          sr = +radius.apply(this, (argv[0] = s, argv)),\n\t          sa0 = startAngle.apply(this, argv) - halfPi$2,\n\t          sa1 = endAngle.apply(this, argv) - halfPi$2,\n\t          sx0 = sr * cos(sa0),\n\t          sy0 = sr * sin(sa0),\n\t          tr = +radius.apply(this, (argv[0] = t, argv)),\n\t          ta0 = startAngle.apply(this, argv) - halfPi$2,\n\t          ta1 = endAngle.apply(this, argv) - halfPi$2;\n\t\n\t      if (!context) context = buffer = path();\n\t\n\t      context.moveTo(sx0, sy0);\n\t      context.arc(0, 0, sr, sa0, sa1);\n\t      if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t        context.arc(0, 0, tr, ta0, ta1);\n\t      }\n\t      context.quadraticCurveTo(0, 0, sx0, sy0);\n\t      context.closePath();\n\t\n\t      if (buffer) return context = null, buffer + \"\" || null;\n\t    }\n\t\n\t    ribbon.radius = function(_) {\n\t      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$11(+_), ribbon) : radius;\n\t    };\n\t\n\t    ribbon.startAngle = function(_) {\n\t      return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$11(+_), ribbon) : startAngle;\n\t    };\n\t\n\t    ribbon.endAngle = function(_) {\n\t      return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$11(+_), ribbon) : endAngle;\n\t    };\n\t\n\t    ribbon.source = function(_) {\n\t      return arguments.length ? (source = _, ribbon) : source;\n\t    };\n\t\n\t    ribbon.target = function(_) {\n\t      return arguments.length ? (target = _, ribbon) : target;\n\t    };\n\t\n\t    ribbon.context = function(_) {\n\t      return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t    };\n\t\n\t    return ribbon;\n\t  }\n\t\n\t  // Adds floating point numbers with twice the normal precision.\n\t  // Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t  // Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t  // 305–363 (1997).\n\t  // Code adapted from GeographicLib by Charles F. F. Karney,\n\t  // http://geographiclib.sourceforge.net/\n\t\n\t  function adder() {\n\t    return new Adder;\n\t  }\n\t\n\t  function Adder() {\n\t    this.reset();\n\t  }\n\t\n\t  Adder.prototype = {\n\t    constructor: Adder,\n\t    reset: function() {\n\t      this.s = // rounded value\n\t      this.t = 0; // exact error\n\t    },\n\t    add: function(y) {\n\t      add$1(temp, y, this.t);\n\t      add$1(this, temp.s, this.s);\n\t      if (this.s) this.t += temp.t;\n\t      else this.s = temp.t;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t\n\t  var temp = new Adder;\n\t\n\t  function add$1(adder, a, b) {\n\t    var x = adder.s = a + b,\n\t        bv = x - a,\n\t        av = x - bv;\n\t    adder.t = (a - av) + (b - bv);\n\t  }\n\t\n\t  var epsilon$4 = 1e-6;\n\t  var epsilon2$2 = 1e-12;\n\t  var pi$4 = Math.PI;\n\t  var halfPi$3 = pi$4 / 2;\n\t  var quarterPi = pi$4 / 4;\n\t  var tau$4 = pi$4 * 2;\n\t\n\t  var degrees$1 = 180 / pi$4;\n\t  var radians = pi$4 / 180;\n\t\n\t  var abs = Math.abs;\n\t  var atan = Math.atan;\n\t  var atan2 = Math.atan2;\n\t  var cos$1 = Math.cos;\n\t  var ceil = Math.ceil;\n\t  var exp = Math.exp;\n\t  var log$1 = Math.log;\n\t  var pow$1 = Math.pow;\n\t  var sin$1 = Math.sin;\n\t  var sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\t  var sqrt$1 = Math.sqrt;\n\t  var tan = Math.tan;\n\t\n\t  function acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t  }\n\t\n\t  function asin$1(x) {\n\t    return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n\t  }\n\t\n\t  function haversin(x) {\n\t    return (x = sin$1(x / 2)) * x;\n\t  }\n\t\n\t  function noop$2() {}\n\t\n\t  function streamGeometry(geometry, stream) {\n\t    if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      streamGeometryType[geometry.type](geometry, stream);\n\t    }\n\t  }\n\t\n\t  var streamObjectType = {\n\t    Feature: function(feature, stream) {\n\t      streamGeometry(feature.geometry, stream);\n\t    },\n\t    FeatureCollection: function(object, stream) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) streamGeometry(features[i].geometry, stream);\n\t    }\n\t  };\n\t\n\t  var streamGeometryType = {\n\t    Sphere: function(object, stream) {\n\t      stream.sphere();\n\t    },\n\t    Point: function(object, stream) {\n\t      object = object.coordinates;\n\t      stream.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, stream) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, stream) {\n\t      streamLine(object.coordinates, stream, 0);\n\t    },\n\t    MultiLineString: function(object, stream) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) streamLine(coordinates[i], stream, 0);\n\t    },\n\t    Polygon: function(object, stream) {\n\t      streamPolygon(object.coordinates, stream);\n\t    },\n\t    MultiPolygon: function(object, stream) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) streamPolygon(coordinates[i], stream);\n\t    },\n\t    GeometryCollection: function(object, stream) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) streamGeometry(geometries[i], stream);\n\t    }\n\t  };\n\t\n\t  function streamLine(coordinates, stream, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    stream.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    stream.lineEnd();\n\t  }\n\t\n\t  function streamPolygon(coordinates, stream) {\n\t    var i = -1, n = coordinates.length;\n\t    stream.polygonStart();\n\t    while (++i < n) streamLine(coordinates[i], stream, 1);\n\t    stream.polygonEnd();\n\t  }\n\t\n\t  function stream(object, stream) {\n\t    if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t      streamObjectType[object.type](object, stream);\n\t    } else {\n\t      streamGeometry(object, stream);\n\t    }\n\t  }\n\t\n\t  var areaRingSum;\n\t\n\t  var areaSum;\n\t  var lambda00;\n\t  var phi00;\n\t  var lambda0;\n\t  var cosPhi0;\n\t  var sinPhi0;\n\t  var areaStream = {\n\t    point: noop$2,\n\t    lineStart: noop$2,\n\t    lineEnd: noop$2,\n\t    polygonStart: function() {\n\t      areaRingSum.reset();\n\t      areaStream.lineStart = areaRingStart;\n\t      areaStream.lineEnd = areaRingEnd;\n\t    },\n\t    polygonEnd: function() {\n\t      var areaRing = +areaRingSum;\n\t      areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n\t      this.lineStart = this.lineEnd = this.point = noop$2;\n\t    },\n\t    sphere: function() {\n\t      areaSum.add(tau$4);\n\t    }\n\t  };\n\t\n\t  function areaRingStart() {\n\t    areaStream.point = areaPointFirst;\n\t  }\n\t\n\t  function areaRingEnd() {\n\t    areaPoint(lambda00, phi00);\n\t  }\n\t\n\t  function areaPointFirst(lambda, phi) {\n\t    areaStream.point = areaPoint;\n\t    lambda00 = lambda, phi00 = phi;\n\t    lambda *= radians, phi *= radians;\n\t    lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t  }\n\t\n\t  function areaPoint(lambda, phi) {\n\t    lambda *= radians, phi *= radians;\n\t    phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t    // Spherical excess E for a spherical triangle with vertices: south pole,\n\t    // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t    var dLambda = lambda - lambda0,\n\t        sdLambda = dLambda >= 0 ? 1 : -1,\n\t        adLambda = sdLambda * dLambda,\n\t        cosPhi = cos$1(phi),\n\t        sinPhi = sin$1(phi),\n\t        k = sinPhi0 * sinPhi,\n\t        u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t        v = k * sdLambda * sin$1(adLambda);\n\t    areaRingSum.add(atan2(v, u));\n\t\n\t    // Advance the previous points.\n\t    lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t  }\n\t\n\t  function area$2(object) {\n\t    if (areaSum) areaSum.reset();\n\t    else areaSum = adder(), areaRingSum = adder();\n\t    stream(object, areaStream);\n\t    return areaSum * 2;\n\t  }\n\t\n\t  function spherical(cartesian) {\n\t    return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n\t  }\n\t\n\t  function cartesian(spherical) {\n\t    var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t    return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t  }\n\t\n\t  function cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t\n\t  function cartesianCross(a, b) {\n\t    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t  }\n\t\n\t  // TODO return a\n\t  function cartesianAddInPlace(a, b) {\n\t    a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t  }\n\t\n\t  function cartesianScale(vector, k) {\n\t    return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t  }\n\t\n\t  // TODO return d\n\t  function cartesianNormalizeInPlace(d) {\n\t    var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l, d[1] /= l, d[2] /= l;\n\t  }\n\t\n\tvar   lambda0$1;\n\t  var phi0;\n\t  var lambda1;\n\t  var phi1;\n\t  var lambda2;\n\tvar   lambda00$1;\n\tvar   phi00$1;\n\t  var p0;\n\t  var deltaSum;\n\t  var ranges;\n\tvar   range$1;\n\t  var boundsStream = {\n\t    point: boundsPoint,\n\t    lineStart: boundsLineStart,\n\t    lineEnd: boundsLineEnd,\n\t    polygonStart: function() {\n\t      boundsStream.point = boundsRingPoint;\n\t      boundsStream.lineStart = boundsRingStart;\n\t      boundsStream.lineEnd = boundsRingEnd;\n\t      deltaSum.reset();\n\t      areaStream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      areaStream.polygonEnd();\n\t      boundsStream.point = boundsPoint;\n\t      boundsStream.lineStart = boundsLineStart;\n\t      boundsStream.lineEnd = boundsLineEnd;\n\t      if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t      else if (deltaSum > epsilon$4) phi1 = 90;\n\t      else if (deltaSum < -epsilon$4) phi0 = -90;\n\t      range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t    }\n\t  };\n\t\n\t  function boundsPoint(lambda, phi) {\n\t    ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n\t    if (phi < phi0) phi0 = phi;\n\t    if (phi > phi1) phi1 = phi;\n\t  }\n\t\n\t  function linePoint(lambda, phi) {\n\t    var p = cartesian([lambda * radians, phi * radians]);\n\t    if (p0) {\n\t      var normal = cartesianCross(p0, p),\n\t          equatorial = [normal[1], -normal[0], 0],\n\t          inflection = cartesianCross(equatorial, normal);\n\t      cartesianNormalizeInPlace(inflection);\n\t      inflection = spherical(inflection);\n\t      var delta = lambda - lambda2,\n\t          sign = delta > 0 ? 1 : -1,\n\t          lambdai = inflection[0] * degrees$1 * sign,\n\t          phii,\n\t          antimeridian = abs(delta) > 180;\n\t      if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n\t        phii = inflection[1] * degrees$1;\n\t        if (phii > phi1) phi1 = phii;\n\t      } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n\t        phii = -inflection[1] * degrees$1;\n\t        if (phii < phi0) phi0 = phii;\n\t      } else {\n\t        if (phi < phi0) phi0 = phi;\n\t        if (phi > phi1) phi1 = phi;\n\t      }\n\t      if (antimeridian) {\n\t        if (lambda < lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      } else {\n\t        if (lambda1 >= lambda0$1) {\n\t          if (lambda < lambda0$1) lambda0$1 = lambda;\n\t          if (lambda > lambda1) lambda1 = lambda;\n\t        } else {\n\t          if (lambda > lambda2) {\n\t            if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t          } else {\n\t            if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t          }\n\t        }\n\t      }\n\t    } else {\n\t      boundsPoint(lambda, phi);\n\t    }\n\t    p0 = p, lambda2 = lambda;\n\t  }\n\t\n\t  function boundsLineStart() {\n\t    boundsStream.point = linePoint;\n\t  }\n\t\n\t  function boundsLineEnd() {\n\t    range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t    boundsStream.point = boundsPoint;\n\t    p0 = null;\n\t  }\n\t\n\t  function boundsRingPoint(lambda, phi) {\n\t    if (p0) {\n\t      var delta = lambda - lambda2;\n\t      deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t    } else {\n\t      lambda00$1 = lambda, phi00$1 = phi;\n\t    }\n\t    areaStream.point(lambda, phi);\n\t    linePoint(lambda, phi);\n\t  }\n\t\n\t  function boundsRingStart() {\n\t    areaStream.lineStart();\n\t  }\n\t\n\t  function boundsRingEnd() {\n\t    boundsRingPoint(lambda00$1, phi00$1);\n\t    areaStream.lineEnd();\n\t    if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n\t    range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t    p0 = null;\n\t  }\n\t\n\t  // Finds the left-right distance between two longitudes.\n\t  // This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t  // the distance between ±180° to be 360°.\n\t  function angle(lambda0, lambda1) {\n\t    return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t  }\n\t\n\t  function rangeCompare(a, b) {\n\t    return a[0] - b[0];\n\t  }\n\t\n\t  function rangeContains(range, x) {\n\t    return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t  }\n\t\n\t  function bounds(feature) {\n\t    var i, n, a, b, merged, deltaMax, delta;\n\t\n\t    if (deltaSum) deltaSum.reset();\n\t    else deltaSum = adder();\n\t    phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t    ranges = [];\n\t    stream(feature, boundsStream);\n\t\n\t    // First, sort ranges by their minimum longitudes.\n\t    if (n = ranges.length) {\n\t      ranges.sort(rangeCompare);\n\t\n\t      // Then, merge any ranges that overlap.\n\t      for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t        b = ranges[i];\n\t        if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t          if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t          if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t        } else {\n\t          merged.push(a = b);\n\t        }\n\t      }\n\t\n\t      // Finally, find the largest gap between the merged ranges.\n\t      // The final bounding box will be the inverse of this gap.\n\t      for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t        b = merged[i];\n\t        if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t      }\n\t    }\n\t\n\t    ranges = range$1 = null;\n\t\n\t    return lambda0$1 === Infinity || phi0 === Infinity\n\t        ? [[NaN, NaN], [NaN, NaN]]\n\t        : [[lambda0$1, phi0], [lambda1, phi1]];\n\t  }\n\t\n\t  var W0;\n\t  var W1;\n\t  var X0;\n\t  var Y0;\n\t  var Z0;\n\t  var X1;\n\t  var Y1;\n\t  var Z1;\n\t  var X2;\n\t  var Y2;\n\t  var Z2;\n\tvar   lambda00$2;\n\tvar   phi00$2;\n\t  var x0;\n\t  var y0;\n\t  var z0;\n\t  // previous point\n\t\n\t  var centroidStream = {\n\t    sphere: noop$2,\n\t    point: centroidPoint,\n\t    lineStart: centroidLineStart,\n\t    lineEnd: centroidLineEnd,\n\t    polygonStart: function() {\n\t      centroidStream.lineStart = centroidRingStart;\n\t      centroidStream.lineEnd = centroidRingEnd;\n\t    },\n\t    polygonEnd: function() {\n\t      centroidStream.lineStart = centroidLineStart;\n\t      centroidStream.lineEnd = centroidLineEnd;\n\t    }\n\t  };\n\t\n\t  // Arithmetic mean of Cartesian vectors.\n\t  function centroidPoint(lambda, phi) {\n\t    lambda *= radians, phi *= radians;\n\t    var cosPhi = cos$1(phi);\n\t    centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t  }\n\t\n\t  function centroidPointCartesian(x, y, z) {\n\t    ++W0;\n\t    X0 += (x - X0) / W0;\n\t    Y0 += (y - Y0) / W0;\n\t    Z0 += (z - Z0) / W0;\n\t  }\n\t\n\t  function centroidLineStart() {\n\t    centroidStream.point = centroidLinePointFirst;\n\t  }\n\t\n\t  function centroidLinePointFirst(lambda, phi) {\n\t    lambda *= radians, phi *= radians;\n\t    var cosPhi = cos$1(phi);\n\t    x0 = cosPhi * cos$1(lambda);\n\t    y0 = cosPhi * sin$1(lambda);\n\t    z0 = sin$1(phi);\n\t    centroidStream.point = centroidLinePoint;\n\t    centroidPointCartesian(x0, y0, z0);\n\t  }\n\t\n\t  function centroidLinePoint(lambda, phi) {\n\t    lambda *= radians, phi *= radians;\n\t    var cosPhi = cos$1(phi),\n\t        x = cosPhi * cos$1(lambda),\n\t        y = cosPhi * sin$1(lambda),\n\t        z = sin$1(phi),\n\t        w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t    W1 += w;\n\t    X1 += w * (x0 + (x0 = x));\n\t    Y1 += w * (y0 + (y0 = y));\n\t    Z1 += w * (z0 + (z0 = z));\n\t    centroidPointCartesian(x0, y0, z0);\n\t  }\n\t\n\t  function centroidLineEnd() {\n\t    centroidStream.point = centroidPoint;\n\t  }\n\t\n\t  // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t  // J. Applied Mechanics 42, 239 (1975).\n\t  function centroidRingStart() {\n\t    centroidStream.point = centroidRingPointFirst;\n\t  }\n\t\n\t  function centroidRingEnd() {\n\t    centroidRingPoint(lambda00$2, phi00$2);\n\t    centroidStream.point = centroidPoint;\n\t  }\n\t\n\t  function centroidRingPointFirst(lambda, phi) {\n\t    lambda00$2 = lambda, phi00$2 = phi;\n\t    lambda *= radians, phi *= radians;\n\t    centroidStream.point = centroidRingPoint;\n\t    var cosPhi = cos$1(phi);\n\t    x0 = cosPhi * cos$1(lambda);\n\t    y0 = cosPhi * sin$1(lambda);\n\t    z0 = sin$1(phi);\n\t    centroidPointCartesian(x0, y0, z0);\n\t  }\n\t\n\t  function centroidRingPoint(lambda, phi) {\n\t    lambda *= radians, phi *= radians;\n\t    var cosPhi = cos$1(phi),\n\t        x = cosPhi * cos$1(lambda),\n\t        y = cosPhi * sin$1(lambda),\n\t        z = sin$1(phi),\n\t        cx = y0 * z - z0 * y,\n\t        cy = z0 * x - x0 * z,\n\t        cz = x0 * y - y0 * x,\n\t        m = sqrt$1(cx * cx + cy * cy + cz * cz),\n\t        u = x0 * x + y0 * y + z0 * z,\n\t        v = m && -acos(u) / m, // area weight\n\t        w = atan2(m, u); // line weight\n\t    X2 += v * cx;\n\t    Y2 += v * cy;\n\t    Z2 += v * cz;\n\t    W1 += w;\n\t    X1 += w * (x0 + (x0 = x));\n\t    Y1 += w * (y0 + (y0 = y));\n\t    Z1 += w * (z0 + (z0 = z));\n\t    centroidPointCartesian(x0, y0, z0);\n\t  }\n\t\n\t  function centroid$1(object) {\n\t    W0 = W1 =\n\t    X0 = Y0 = Z0 =\n\t    X1 = Y1 = Z1 =\n\t    X2 = Y2 = Z2 = 0;\n\t    stream(object, centroidStream);\n\t\n\t    var x = X2,\n\t        y = Y2,\n\t        z = Z2,\n\t        m = x * x + y * y + z * z;\n\t\n\t    // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t    if (m < epsilon2$2) {\n\t      x = X1, y = Y1, z = Z1;\n\t      // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t      if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n\t      m = x * x + y * y + z * z;\n\t      // If the feature still has an undefined ccentroid, then return.\n\t      if (m < epsilon2$2) return [NaN, NaN];\n\t    }\n\t\n\t    return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n\t  }\n\t\n\t  function constant$12(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function compose(a, b) {\n\t\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t\n\t    return compose;\n\t  }\n\t\n\t  function rotationIdentity(lambda, phi) {\n\t    return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t  }\n\t\n\t  rotationIdentity.invert = rotationIdentity;\n\t\n\t  function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t    return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t      : rotationLambda(deltaLambda))\n\t      : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t      : rotationIdentity);\n\t  }\n\t\n\t  function forwardRotationLambda(deltaLambda) {\n\t    return function(lambda, phi) {\n\t      return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t    };\n\t  }\n\t\n\t  function rotationLambda(deltaLambda) {\n\t    var rotation = forwardRotationLambda(deltaLambda);\n\t    rotation.invert = forwardRotationLambda(-deltaLambda);\n\t    return rotation;\n\t  }\n\t\n\t  function rotationPhiGamma(deltaPhi, deltaGamma) {\n\t    var cosDeltaPhi = cos$1(deltaPhi),\n\t        sinDeltaPhi = sin$1(deltaPhi),\n\t        cosDeltaGamma = cos$1(deltaGamma),\n\t        sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t    function rotation(lambda, phi) {\n\t      var cosPhi = cos$1(phi),\n\t          x = cos$1(lambda) * cosPhi,\n\t          y = sin$1(lambda) * cosPhi,\n\t          z = sin$1(phi),\n\t          k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t      return [\n\t        atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t        asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n\t      ];\n\t    }\n\t\n\t    rotation.invert = function(lambda, phi) {\n\t      var cosPhi = cos$1(phi),\n\t          x = cos$1(lambda) * cosPhi,\n\t          y = sin$1(lambda) * cosPhi,\n\t          z = sin$1(phi),\n\t          k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t      return [\n\t        atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t        asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n\t      ];\n\t    };\n\t\n\t    return rotation;\n\t  }\n\t\n\t  function rotation(rotate) {\n\t    rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t      return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t    }\n\t\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t      return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t    };\n\t\n\t    return forward;\n\t  }\n\t\n\t  // Generates a circle centered at [0°, 0°], with a given radius and precision.\n\t  function circleStream(stream, radius, delta, direction, t0, t1) {\n\t    if (!delta) return;\n\t    var cosRadius = cos$1(radius),\n\t        sinRadius = sin$1(radius),\n\t        step = direction * delta;\n\t    if (t0 == null) {\n\t      t0 = radius + direction * tau$4;\n\t      t1 = radius - step / 2;\n\t    } else {\n\t      t0 = circleRadius(cosRadius, t0);\n\t      t1 = circleRadius(cosRadius, t1);\n\t      if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n\t    }\n\t    for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t      point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t      stream.point(point[0], point[1]);\n\t    }\n\t  }\n\t\n\t  // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\t  function circleRadius(cosRadius, point) {\n\t    point = cartesian(point), point[0] -= cosRadius;\n\t    cartesianNormalizeInPlace(point);\n\t    var radius = acos(-point[1]);\n\t    return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n\t  }\n\t\n\t  function circle$1() {\n\t    var center = constant$12([0, 0]),\n\t        radius = constant$12(90),\n\t        precision = constant$12(6),\n\t        ring,\n\t        rotate,\n\t        stream = {point: point};\n\t\n\t    function point(x, y) {\n\t      ring.push(x = rotate(x, y));\n\t      x[0] *= degrees$1, x[1] *= degrees$1;\n\t    }\n\t\n\t    function circle() {\n\t      var c = center.apply(this, arguments),\n\t          r = radius.apply(this, arguments) * radians,\n\t          p = precision.apply(this, arguments) * radians;\n\t      ring = [];\n\t      rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t      circleStream(stream, r, p, 1);\n\t      c = {type: \"Polygon\", coordinates: [ring]};\n\t      ring = rotate = null;\n\t      return c;\n\t    }\n\t\n\t    circle.center = function(_) {\n\t      return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$12([+_[0], +_[1]]), circle) : center;\n\t    };\n\t\n\t    circle.radius = function(_) {\n\t      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), circle) : radius;\n\t    };\n\t\n\t    circle.precision = function(_) {\n\t      return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$12(+_), circle) : precision;\n\t    };\n\t\n\t    return circle;\n\t  }\n\t\n\t  function clipBuffer() {\n\t    var lines = [],\n\t        line;\n\t    return {\n\t      point: function(x, y) {\n\t        line.push([x, y]);\n\t      },\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      lineEnd: noop$2,\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      },\n\t      result: function() {\n\t        var result = lines;\n\t        lines = [];\n\t        line = null;\n\t        return result;\n\t      }\n\t    };\n\t  }\n\t\n\t  function clipLine(a, b, x0, y0, x1, y1) {\n\t    var ax = a[0],\n\t        ay = a[1],\n\t        bx = b[0],\n\t        by = b[1],\n\t        t0 = 0,\n\t        t1 = 1,\n\t        dx = bx - ax,\n\t        dy = by - ay,\n\t        r;\n\t\n\t    r = x0 - ax;\n\t    if (!dx && r > 0) return;\n\t    r /= dx;\n\t    if (dx < 0) {\n\t      if (r < t0) return;\n\t      if (r < t1) t1 = r;\n\t    } else if (dx > 0) {\n\t      if (r > t1) return;\n\t      if (r > t0) t0 = r;\n\t    }\n\t\n\t    r = x1 - ax;\n\t    if (!dx && r < 0) return;\n\t    r /= dx;\n\t    if (dx < 0) {\n\t      if (r > t1) return;\n\t      if (r > t0) t0 = r;\n\t    } else if (dx > 0) {\n\t      if (r < t0) return;\n\t      if (r < t1) t1 = r;\n\t    }\n\t\n\t    r = y0 - ay;\n\t    if (!dy && r > 0) return;\n\t    r /= dy;\n\t    if (dy < 0) {\n\t      if (r < t0) return;\n\t      if (r < t1) t1 = r;\n\t    } else if (dy > 0) {\n\t      if (r > t1) return;\n\t      if (r > t0) t0 = r;\n\t    }\n\t\n\t    r = y1 - ay;\n\t    if (!dy && r < 0) return;\n\t    r /= dy;\n\t    if (dy < 0) {\n\t      if (r > t1) return;\n\t      if (r > t0) t0 = r;\n\t    } else if (dy > 0) {\n\t      if (r < t0) return;\n\t      if (r < t1) t1 = r;\n\t    }\n\t\n\t    if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t    if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t    return true;\n\t  }\n\t\n\t  function pointEqual(a, b) {\n\t    return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n\t  }\n\t\n\t  function Intersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other; // another intersection\n\t    this.e = entry; // is an entry?\n\t    this.v = false; // visited\n\t    this.n = this.p = null; // next & previous\n\t  }\n\t\n\t  // A generalized polygon clipping algorithm: given a polygon that has been cut\n\t  // into its visible line segments, and rejoins the segments by interpolating\n\t  // along the clip edge.\n\t  function clipPolygon(segments, compareIntersection, startInside, interpolate, stream) {\n\t    var subject = [],\n\t        clip = [],\n\t        i,\n\t        n;\n\t\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t      // If the first and last points of a segment are coincident, then treat as a\n\t      // closed ring. TODO if all rings are closed, then the winding order of the\n\t      // exterior ring should be checked.\n\t      if (pointEqual(p0, p1)) {\n\t        stream.lineStart();\n\t        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t        stream.lineEnd();\n\t        return;\n\t      }\n\t\n\t      subject.push(x = new Intersection(p0, segment, null, true));\n\t      clip.push(x.o = new Intersection(p0, null, x, false));\n\t      subject.push(x = new Intersection(p1, segment, null, false));\n\t      clip.push(x.o = new Intersection(p1, null, x, true));\n\t    });\n\t\n\t    if (!subject.length) return;\n\t\n\t    clip.sort(compareIntersection);\n\t    link$1(subject);\n\t    link$1(clip);\n\t\n\t    for (i = 0, n = clip.length; i < n; ++i) {\n\t      clip[i].e = startInside = !startInside;\n\t    }\n\t\n\t    var start = subject[0],\n\t        points,\n\t        point;\n\t\n\t    while (1) {\n\t      // Find first unvisited intersection.\n\t      var current = start,\n\t          isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      stream.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, stream);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, stream);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      stream.lineEnd();\n\t    }\n\t  }\n\t\n\t  function link$1(array) {\n\t    if (!(n = array.length)) return;\n\t    var n,\n\t        i = 0,\n\t        a = array[0],\n\t        b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t\n\t  var clipMax = 1e9;\n\t  var clipMin = -clipMax;\n\t  // TODO Use d3-polygon’s polygonContains here for the ring check?\n\t  // TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\t  function clipExtent(x0, y0, x1, y1) {\n\t\n\t    function visible(x, y) {\n\t      return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t    }\n\t\n\t    function interpolate(from, to, direction, stream) {\n\t      var a = 0, a1 = 0;\n\t      if (from == null\n\t          || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t          || comparePoint(from, to) < 0 ^ direction > 0) {\n\t        do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t        while ((a = (a + direction + 4) % 4) !== a1);\n\t      } else {\n\t        stream.point(to[0], to[1]);\n\t      }\n\t    }\n\t\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n\t          : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n\t          : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n\t          : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t    }\n\t\n\t    function compareIntersection(a, b) {\n\t      return comparePoint(a.x, b.x);\n\t    }\n\t\n\t    function comparePoint(a, b) {\n\t      var ca = corner(a, 1),\n\t          cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb\n\t          : ca === 0 ? b[1] - a[1]\n\t          : ca === 1 ? a[0] - b[0]\n\t          : ca === 2 ? a[1] - b[1]\n\t          : b[0] - a[0];\n\t    }\n\t\n\t    return function(stream) {\n\t      var activeStream = stream,\n\t          bufferStream = clipBuffer(),\n\t          segments,\n\t          polygon,\n\t          ring,\n\t          x__, y__, v__, // first point\n\t          x_, y_, v_, // previous point\n\t          first,\n\t          clean;\n\t\n\t      var clipStream = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: polygonStart,\n\t        polygonEnd: polygonEnd\n\t      };\n\t\n\t      function point(x, y) {\n\t        if (visible(x, y)) activeStream.point(x, y);\n\t      }\n\t\n\t      function polygonInside() {\n\t        var winding = 0;\n\t\n\t        for (var i = 0, n = polygon.length; i < n; ++i) {\n\t          for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t            a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t            if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t            else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t          }\n\t        }\n\t\n\t        return winding;\n\t      }\n\t\n\t      // Buffer geometry within a polygon and then clip it en masse.\n\t      function polygonStart() {\n\t        activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t      }\n\t\n\t      function polygonEnd() {\n\t        var startInside = polygonInside(),\n\t            cleanInside = clean && startInside,\n\t            visible = (segments = merge(segments)).length;\n\t        if (cleanInside || visible) {\n\t          stream.polygonStart();\n\t          if (cleanInside) {\n\t            stream.lineStart();\n\t            interpolate(null, null, 1, stream);\n\t            stream.lineEnd();\n\t          }\n\t          if (visible) {\n\t            clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n\t          }\n\t          stream.polygonEnd();\n\t        }\n\t        activeStream = stream, segments = polygon = ring = null;\n\t      }\n\t\n\t      function lineStart() {\n\t        clipStream.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t\n\t      // TODO rather than special-case polygons, simply handle them separately.\n\t      // Ideally, coincident intersection points should be jittered to avoid\n\t      // clipping issues.\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferStream.rejoin();\n\t          segments.push(bufferStream.result());\n\t        }\n\t        clipStream.point = point;\n\t        if (v_) activeStream.lineEnd();\n\t      }\n\t\n\t      function linePoint(x, y) {\n\t        var v = visible(x, y);\n\t        if (polygon) ring.push([x, y]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) activeStream.point(x, y);\n\t          else {\n\t            var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t                b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t            if (clipLine(a, b, x0, y0, x1, y1)) {\n\t              if (!v_) {\n\t                activeStream.lineStart();\n\t                activeStream.point(a[0], a[1]);\n\t              }\n\t              activeStream.point(b[0], b[1]);\n\t              if (!v) activeStream.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              activeStream.lineStart();\n\t              activeStream.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t\n\t      return clipStream;\n\t    };\n\t  }\n\t\n\t  function extent$1() {\n\t    var x0 = 0,\n\t        y0 = 0,\n\t        x1 = 960,\n\t        y1 = 500,\n\t        cache,\n\t        cacheStream,\n\t        clip;\n\t\n\t    return clip = {\n\t      stream: function(stream) {\n\t        return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n\t      },\n\t      extent: function(_) {\n\t        return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t      }\n\t    };\n\t  }\n\t\n\t  var lengthSum;\n\tvar   lambda0$2;\n\tvar   sinPhi0$1;\n\tvar   cosPhi0$1;\n\t  var lengthStream = {\n\t    sphere: noop$2,\n\t    point: noop$2,\n\t    lineStart: lengthLineStart,\n\t    lineEnd: noop$2,\n\t    polygonStart: noop$2,\n\t    polygonEnd: noop$2\n\t  };\n\t\n\t  function lengthLineStart() {\n\t    lengthStream.point = lengthPointFirst;\n\t    lengthStream.lineEnd = lengthLineEnd;\n\t  }\n\t\n\t  function lengthLineEnd() {\n\t    lengthStream.point = lengthStream.lineEnd = noop$2;\n\t  }\n\t\n\t  function lengthPointFirst(lambda, phi) {\n\t    lambda *= radians, phi *= radians;\n\t    lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t    lengthStream.point = lengthPoint;\n\t  }\n\t\n\t  function lengthPoint(lambda, phi) {\n\t    lambda *= radians, phi *= radians;\n\t    var sinPhi = sin$1(phi),\n\t        cosPhi = cos$1(phi),\n\t        delta = abs(lambda - lambda0$2),\n\t        cosDelta = cos$1(delta),\n\t        sinDelta = sin$1(delta),\n\t        x = cosPhi * sinDelta,\n\t        y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t        z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t    lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n\t    lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t  }\n\t\n\t  function length$2(object) {\n\t    if (lengthSum) lengthSum.reset();\n\t    else lengthSum = adder();\n\t    stream(object, lengthStream);\n\t    return +lengthSum;\n\t  }\n\t\n\t  var coordinates = [null, null];\n\tvar   object$1 = {type: \"LineString\", coordinates: coordinates};\n\t  function distance(a, b) {\n\t    coordinates[0] = a;\n\t    coordinates[1] = b;\n\t    return length$2(object$1);\n\t  }\n\t\n\t  function graticuleX(y0, y1, dy) {\n\t    var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n\t    return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t  }\n\t\n\t  function graticuleY(x0, x1, dx) {\n\t    var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n\t    return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t  }\n\t\n\t  function graticule() {\n\t    var x1, x0, X1, X0,\n\t        y1, y0, Y1, Y0,\n\t        dx = 10, dy = dx, DX = 90, DY = 360,\n\t        x, y, X, Y,\n\t        precision = 2.5;\n\t\n\t    function graticule() {\n\t      return {type: \"MultiLineString\", coordinates: lines()};\n\t    }\n\t\n\t    function lines() {\n\t      return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t          .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t          .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n\t          .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n\t    }\n\t\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t    };\n\t\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [\n\t          X(X0).concat(\n\t          Y(Y1).slice(1),\n\t          X(X1).reverse().slice(1),\n\t          Y(Y0).reverse().slice(1))\n\t        ]\n\t      };\n\t    };\n\t\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.extentMinor();\n\t      return graticule.extentMajor(_).extentMinor(_);\n\t    };\n\t\n\t    graticule.extentMajor = function(_) {\n\t      if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t\n\t    graticule.extentMinor = function(_) {\n\t      if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.stepMinor();\n\t      return graticule.stepMajor(_).stepMinor(_);\n\t    };\n\t\n\t    graticule.stepMajor = function(_) {\n\t      if (!arguments.length) return [DX, DY];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t\n\t    graticule.stepMinor = function(_) {\n\t      if (!arguments.length) return [dx, dy];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = graticuleX(y0, y1, 90);\n\t      y = graticuleY(x0, x1, precision);\n\t      X = graticuleX(Y0, Y1, 90);\n\t      Y = graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t\n\t    return graticule\n\t        .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n\t        .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n\t  }\n\t\n\t  function interpolate$2(a, b) {\n\t    var x0 = a[0] * radians,\n\t        y0 = a[1] * radians,\n\t        x1 = b[0] * radians,\n\t        y1 = b[1] * radians,\n\t        cy0 = cos$1(y0),\n\t        sy0 = sin$1(y0),\n\t        cy1 = cos$1(y1),\n\t        sy1 = sin$1(y1),\n\t        kx0 = cy0 * cos$1(x0),\n\t        ky0 = cy0 * sin$1(x0),\n\t        kx1 = cy1 * cos$1(x1),\n\t        ky1 = cy1 * sin$1(x1),\n\t        d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t        k = sin$1(d);\n\t\n\t    var interpolate = d ? function(t) {\n\t      var B = sin$1(t *= d) / k,\n\t          A = sin$1(d - t) / k,\n\t          x = A * kx0 + B * kx1,\n\t          y = A * ky0 + B * ky1,\n\t          z = A * sy0 + B * sy1;\n\t      return [\n\t        atan2(y, x) * degrees$1,\n\t        atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n\t      ];\n\t    } : function() {\n\t      return [x0 * degrees$1, y0 * degrees$1];\n\t    };\n\t\n\t    interpolate.distance = d;\n\t\n\t    return interpolate;\n\t  }\n\t\n\t  function identity$7(x) {\n\t    return x;\n\t  }\n\t\n\tvar   areaSum$1 = adder();\n\tvar   areaRingSum$1 = adder();\n\t  var x00;\n\t  var y00;\n\tvar   x0$1;\n\tvar   y0$1;\n\t  var areaStream$1 = {\n\t    point: noop$2,\n\t    lineStart: noop$2,\n\t    lineEnd: noop$2,\n\t    polygonStart: function() {\n\t      areaStream$1.lineStart = areaRingStart$1;\n\t      areaStream$1.lineEnd = areaRingEnd$1;\n\t    },\n\t    polygonEnd: function() {\n\t      areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n\t      areaSum$1.add(abs(areaRingSum$1));\n\t      areaRingSum$1.reset();\n\t    },\n\t    result: function() {\n\t      var area = areaSum$1 / 2;\n\t      areaSum$1.reset();\n\t      return area;\n\t    }\n\t  };\n\t\n\t  function areaRingStart$1() {\n\t    areaStream$1.point = areaPointFirst$1;\n\t  }\n\t\n\t  function areaPointFirst$1(x, y) {\n\t    areaStream$1.point = areaPoint$1;\n\t    x00 = x0$1 = x, y00 = y0$1 = y;\n\t  }\n\t\n\t  function areaPoint$1(x, y) {\n\t    areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t    x0$1 = x, y0$1 = y;\n\t  }\n\t\n\t  function areaRingEnd$1() {\n\t    areaPoint$1(x00, y00);\n\t  }\n\t\n\tvar   x0$2 = Infinity;\n\tvar   y0$2 = x0$2;\n\t  var x1 = -x0$2;\n\t  var y1 = x1;\n\t  var boundsStream$1 = {\n\t    point: boundsPoint$1,\n\t    lineStart: noop$2,\n\t    lineEnd: noop$2,\n\t    polygonStart: noop$2,\n\t    polygonEnd: noop$2,\n\t    result: function() {\n\t      var bounds = [[x0$2, y0$2], [x1, y1]];\n\t      x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t      return bounds;\n\t    }\n\t  };\n\t\n\t  function boundsPoint$1(x, y) {\n\t    if (x < x0$2) x0$2 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0$2) y0$2 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\tvar   X0$1 = 0;\n\tvar   Y0$1 = 0;\n\tvar   Z0$1 = 0;\n\tvar   X1$1 = 0;\n\tvar   Y1$1 = 0;\n\tvar   Z1$1 = 0;\n\tvar   X2$1 = 0;\n\tvar   Y2$1 = 0;\n\tvar   Z2$1 = 0;\n\tvar   x00$1;\n\tvar   y00$1;\n\tvar   x0$3;\n\tvar   y0$3;\n\t  var centroidStream$1 = {\n\t    point: centroidPoint$1,\n\t    lineStart: centroidLineStart$1,\n\t    lineEnd: centroidLineEnd$1,\n\t    polygonStart: function() {\n\t      centroidStream$1.lineStart = centroidRingStart$1;\n\t      centroidStream$1.lineEnd = centroidRingEnd$1;\n\t    },\n\t    polygonEnd: function() {\n\t      centroidStream$1.point = centroidPoint$1;\n\t      centroidStream$1.lineStart = centroidLineStart$1;\n\t      centroidStream$1.lineEnd = centroidLineEnd$1;\n\t    },\n\t    result: function() {\n\t      var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t          : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t          : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t          : [NaN, NaN];\n\t      X0$1 = Y0$1 = Z0$1 =\n\t      X1$1 = Y1$1 = Z1$1 =\n\t      X2$1 = Y2$1 = Z2$1 = 0;\n\t      return centroid;\n\t    }\n\t  };\n\t\n\t  function centroidPoint$1(x, y) {\n\t    X0$1 += x;\n\t    Y0$1 += y;\n\t    ++Z0$1;\n\t  }\n\t\n\t  function centroidLineStart$1() {\n\t    centroidStream$1.point = centroidPointFirstLine;\n\t  }\n\t\n\t  function centroidPointFirstLine(x, y) {\n\t    centroidStream$1.point = centroidPointLine;\n\t    centroidPoint$1(x0$3 = x, y0$3 = y);\n\t  }\n\t\n\t  function centroidPointLine(x, y) {\n\t    var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n\t    X1$1 += z * (x0$3 + x) / 2;\n\t    Y1$1 += z * (y0$3 + y) / 2;\n\t    Z1$1 += z;\n\t    centroidPoint$1(x0$3 = x, y0$3 = y);\n\t  }\n\t\n\t  function centroidLineEnd$1() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t  }\n\t\n\t  function centroidRingStart$1() {\n\t    centroidStream$1.point = centroidPointFirstRing;\n\t  }\n\t\n\t  function centroidRingEnd$1() {\n\t    centroidPointRing(x00$1, y00$1);\n\t  }\n\t\n\t  function centroidPointFirstRing(x, y) {\n\t    centroidStream$1.point = centroidPointRing;\n\t    centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t  }\n\t\n\t  function centroidPointRing(x, y) {\n\t    var dx = x - x0$3,\n\t        dy = y - y0$3,\n\t        z = sqrt$1(dx * dx + dy * dy);\n\t\n\t    X1$1 += z * (x0$3 + x) / 2;\n\t    Y1$1 += z * (y0$3 + y) / 2;\n\t    Z1$1 += z;\n\t\n\t    z = y0$3 * x - x0$3 * y;\n\t    X2$1 += z * (x0$3 + x);\n\t    Y2$1 += z * (y0$3 + y);\n\t    Z2$1 += z * 3;\n\t    centroidPoint$1(x0$3 = x, y0$3 = y);\n\t  }\n\t\n\t  function PathContext(context) {\n\t    var pointRadius = 4.5;\n\t\n\t    var stream = {\n\t      point: point,\n\t\n\t      // While inside a line, override point to moveTo then lineTo.\n\t      lineStart: function() { stream.point = pointLineStart; },\n\t      lineEnd: lineEnd,\n\t\n\t      // While inside a polygon, override lineEnd to closePath.\n\t      polygonStart: function() { stream.lineEnd = lineEndPolygon; },\n\t      polygonEnd: function() { stream.lineEnd = lineEnd; stream.point = point; },\n\t\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t\n\t      result: noop$2\n\t    };\n\t\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, tau$4);\n\t    }\n\t\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t\n\t    return stream;\n\t  }\n\t\n\t  function PathString() {\n\t    var pointCircle = circle$2(4.5),\n\t        string = [];\n\t\n\t    var stream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = circle$2(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (string.length) {\n\t          var result = string.join(\"\");\n\t          string = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t\n\t    function point(x, y) {\n\t      string.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t\n\t    function pointLineStart(x, y) {\n\t      string.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t\n\t    function pointLine(x, y) {\n\t      string.push(\"L\", x, \",\", y);\n\t    }\n\t\n\t    function lineStart() {\n\t      stream.point = pointLineStart;\n\t    }\n\t\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t\n\t    function lineEndPolygon() {\n\t      string.push(\"Z\");\n\t    }\n\t\n\t    return stream;\n\t  }\n\t\n\t  function circle$2(radius) {\n\t    return \"m0,\" + radius\n\t        + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t        + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t        + \"z\";\n\t  }\n\t\n\t  function index$3() {\n\t    var pointRadius = 4.5,\n\t        projection,\n\t        projectionStream,\n\t        context,\n\t        contextStream;\n\t\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        stream(object, projectionStream(contextStream));\n\t      }\n\t      return contextStream.result();\n\t    }\n\t\n\t    path.area = function(object) {\n\t      stream(object, projectionStream(areaStream$1));\n\t      return areaStream$1.result();\n\t    };\n\t\n\t    path.bounds = function(object) {\n\t      stream(object, projectionStream(boundsStream$1));\n\t      return boundsStream$1.result();\n\t    };\n\t\n\t    path.centroid = function(object) {\n\t      stream(object, projectionStream(centroidStream$1));\n\t      return centroidStream$1.result();\n\t    };\n\t\n\t    path.projection = function(_) {\n\t      return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;\n\t    };\n\t\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new PathString : new PathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return path;\n\t    };\n\t\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t\n\t    return path.projection(null).context(null);\n\t  }\n\t\n\t  var sum$2 = adder();\n\t\n\t  function polygonContains(polygon, point) {\n\t    var lambda = point[0],\n\t        phi = point[1],\n\t        normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t        angle = 0,\n\t        winding = 0;\n\t\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      if (!(m = (ring = polygon[i]).length)) continue;\n\t      var ring,\n\t          m,\n\t          point0 = ring[m - 1],\n\t          lambda0 = point0[0],\n\t          phi0 = point0[1] / 2 + quarterPi,\n\t          sinPhi0 = sin$1(phi0),\n\t          cosPhi0 = cos$1(phi0);\n\t\n\t      for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t        var point1 = ring[j],\n\t            lambda1 = point1[0],\n\t            phi1 = point1[1] / 2 + quarterPi,\n\t            sinPhi1 = sin$1(phi1),\n\t            cosPhi1 = cos$1(phi1),\n\t            delta = lambda1 - lambda0,\n\t            sign = delta >= 0 ? 1 : -1,\n\t            absDelta = sign * delta,\n\t            antimeridian = absDelta > pi$4,\n\t            k = sinPhi0 * sinPhi1;\n\t\n\t        sum$2.add(atan2(k * sign * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t        angle += antimeridian ? delta + sign * tau$4 : delta;\n\t\n\t        // Are the longitudes either side of the point’s meridian (lambda),\n\t        // and are the latitudes smaller than the parallel (phi)?\n\t        if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t          var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t          cartesianNormalizeInPlace(arc);\n\t          var intersection = cartesianCross(normal, arc);\n\t          cartesianNormalizeInPlace(intersection);\n\t          var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n\t          if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    // First, determine whether the South pole is inside or outside:\n\t    //\n\t    // It is inside if:\n\t    // * the polygon winds around it in a clockwise direction.\n\t    // * the polygon does not (cumulatively) wind around it, but has a negative\n\t    //   (counter-clockwise) area.\n\t    //\n\t    // Second, count the (signed) number of times a segment crosses a lambda\n\t    // from the point to the South pole.  If it is zero, then the point is the\n\t    // same side as the South pole.\n\t\n\t    var contains = (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n\t    sum$2.reset();\n\t    return contains;\n\t  }\n\t\n\t  function clip(pointVisible, clipLine, interpolate, start) {\n\t    return function(rotate, sink) {\n\t      var line = clipLine(sink),\n\t          rotatedStart = rotate.invert(start[0], start[1]),\n\t          ringBuffer = clipBuffer(),\n\t          ringSink = clipLine(ringBuffer),\n\t          polygonStarted = false,\n\t          polygon,\n\t          segments,\n\t          ring;\n\t\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = merge(segments);\n\t          var startInside = polygonContains(polygon, rotatedStart);\n\t          if (segments.length) {\n\t            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t            clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n\t          } else if (startInside) {\n\t            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t            sink.lineStart();\n\t            interpolate(null, null, 1, sink);\n\t            sink.lineEnd();\n\t          }\n\t          if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          sink.polygonStart();\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t          sink.polygonEnd();\n\t        }\n\t      };\n\t\n\t      function point(lambda, phi) {\n\t        var point = rotate(lambda, phi);\n\t        if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n\t      }\n\t\n\t      function pointLine(lambda, phi) {\n\t        var point = rotate(lambda, phi);\n\t        line.point(point[0], point[1]);\n\t      }\n\t\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t\n\t      function pointRing(lambda, phi) {\n\t        ring.push([lambda, phi]);\n\t        var point = rotate(lambda, phi);\n\t        ringSink.point(point[0], point[1]);\n\t      }\n\t\n\t      function ringStart() {\n\t        ringSink.lineStart();\n\t        ring = [];\n\t      }\n\t\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringSink.lineEnd();\n\t\n\t        var clean = ringSink.clean(),\n\t            ringSegments = ringBuffer.result(),\n\t            i, n = ringSegments.length, m,\n\t            segment,\n\t            point;\n\t\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t\n\t        if (!n) return;\n\t\n\t        // No intersections.\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          if ((m = segment.length - 1) > 0) {\n\t            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t            sink.lineStart();\n\t            for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t            sink.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t\n\t        // Rejoin connected segments.\n\t        // TODO reuse ringBuffer.rejoin()?\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t        segments.push(ringSegments.filter(validSegment));\n\t      }\n\t\n\t      return clip;\n\t    };\n\t  }\n\t\n\t  function validSegment(segment) {\n\t    return segment.length > 1;\n\t  }\n\t\n\t  // Intersections are sorted along the clip edge. For both antimeridian cutting\n\t  // and circle clipping, the same comparison is used.\n\t  function compareIntersection(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n\t         - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n\t  }\n\t\n\t  var clipAntimeridian = clip(\n\t    function() { return true; },\n\t    clipAntimeridianLine,\n\t    clipAntimeridianInterpolate,\n\t    [-pi$4, -halfPi$3]\n\t  );\n\t\n\t  // Takes a line and cuts into visible segments. Return values: 0 - there were\n\t  // intersections or the line was empty; 1 - no intersections; 2 - there were\n\t  // intersections, and the first and last segments should be rejoined.\n\t  function clipAntimeridianLine(stream) {\n\t    var lambda0 = NaN,\n\t        phi0 = NaN,\n\t        sign0 = NaN,\n\t        clean; // no intersections\n\t\n\t    return {\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(lambda1, phi1) {\n\t        var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n\t            delta = abs(lambda1 - lambda0);\n\t        if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n\t          stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n\t          stream.point(sign0, phi0);\n\t          stream.lineEnd();\n\t          stream.lineStart();\n\t          stream.point(sign1, phi0);\n\t          stream.point(lambda1, phi0);\n\t          clean = 0;\n\t        } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n\t          if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n\t          if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n\t          phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t          stream.point(sign0, phi0);\n\t          stream.lineEnd();\n\t          stream.lineStart();\n\t          stream.point(sign1, phi0);\n\t          clean = 0;\n\t        }\n\t        stream.point(lambda0 = lambda1, phi0 = phi1);\n\t        sign0 = sign1;\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t        lambda0 = phi0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean; // if intersections, rejoin first and last segments\n\t      }\n\t    };\n\t  }\n\t\n\t  function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t    var cosPhi0,\n\t        cosPhi1,\n\t        sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t    return abs(sinLambda0Lambda1) > epsilon$4\n\t        ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t            - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t            / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t        : (phi0 + phi1) / 2;\n\t  }\n\t\n\t  function clipAntimeridianInterpolate(from, to, direction, stream) {\n\t    var phi;\n\t    if (from == null) {\n\t      phi = direction * halfPi$3;\n\t      stream.point(-pi$4, phi);\n\t      stream.point(0, phi);\n\t      stream.point(pi$4, phi);\n\t      stream.point(pi$4, 0);\n\t      stream.point(pi$4, -phi);\n\t      stream.point(0, -phi);\n\t      stream.point(-pi$4, -phi);\n\t      stream.point(-pi$4, 0);\n\t      stream.point(-pi$4, phi);\n\t    } else if (abs(from[0] - to[0]) > epsilon$4) {\n\t      var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n\t      phi = direction * lambda / 2;\n\t      stream.point(-lambda, phi);\n\t      stream.point(0, phi);\n\t      stream.point(lambda, phi);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function clipCircle(radius, delta) {\n\t    var cr = cos$1(radius),\n\t        smallRadius = cr > 0,\n\t        notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\t\n\t    function interpolate(from, to, direction, stream) {\n\t      circleStream(stream, radius, delta, direction, from, to);\n\t    }\n\t\n\t    function visible(lambda, phi) {\n\t      return cos$1(lambda) * cos$1(phi) > cr;\n\t    }\n\t\n\t    // Takes a line and cuts into visible segments. Return values used for polygon\n\t    // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t    // intersections 2 - there were intersections, and the first and last segments\n\t    // should be rejoined.\n\t    function clipLine(stream) {\n\t      var point0, // previous point\n\t          c0, // code for previous point\n\t          v0, // visibility of previous point\n\t          v00, // visibility of first point\n\t          clean; // no intersections\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(lambda, phi) {\n\t          var point1 = [lambda, phi],\n\t              point2,\n\t              v = visible(lambda, phi),\n\t              c = smallRadius\n\t                ? v ? 0 : code(lambda, phi)\n\t                : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n\t          if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t          // Handle degeneracies.\n\t          // TODO ignore if not clipping polygons.\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t              point1[0] += epsilon$4;\n\t              point1[1] += epsilon$4;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              // outside going in\n\t              stream.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              stream.point(point2[0], point2[1]);\n\t            } else {\n\t              // inside going out\n\t              point2 = intersect(point0, point1);\n\t              stream.point(point2[0], point2[1]);\n\t              stream.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            // If the codes for two points are different, or are both zero,\n\t            // and there this segment intersects with the small circle.\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                stream.lineStart();\n\t                stream.point(t[0][0], t[0][1]);\n\t                stream.point(t[1][0], t[1][1]);\n\t                stream.lineEnd();\n\t              } else {\n\t                stream.point(t[1][0], t[1][1]);\n\t                stream.lineEnd();\n\t                stream.lineStart();\n\t                stream.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !pointEqual(point0, point1))) {\n\t            stream.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) stream.lineEnd();\n\t          point0 = null;\n\t        },\n\t        // Rejoin first and last segments if there were intersections and the first\n\t        // and last points were visible.\n\t        clean: function() {\n\t          return clean | ((v00 && v0) << 1);\n\t        }\n\t      };\n\t    }\n\t\n\t    // Intersects the great circle between a and b with the clip circle.\n\t    function intersect(a, b, two) {\n\t      var pa = cartesian(a),\n\t          pb = cartesian(b);\n\t\n\t      // We have two planes, n1.p = d1 and n2.p = d2.\n\t      // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t      var n1 = [1, 0, 0], // normal\n\t          n2 = cartesianCross(pa, pb),\n\t          n2n2 = cartesianDot(n2, n2),\n\t          n1n2 = n2[0], // cartesianDot(n1, n2),\n\t          determinant = n2n2 - n1n2 * n1n2;\n\t\n\t      // Two polar points.\n\t      if (!determinant) return !two && a;\n\t\n\t      var c1 =  cr * n2n2 / determinant,\n\t          c2 = -cr * n1n2 / determinant,\n\t          n1xn2 = cartesianCross(n1, n2),\n\t          A = cartesianScale(n1, c1),\n\t          B = cartesianScale(n2, c2);\n\t      cartesianAddInPlace(A, B);\n\t\n\t      // Solve |p(t)|^2 = 1.\n\t      var u = n1xn2,\n\t          w = cartesianDot(A, u),\n\t          uu = cartesianDot(u, u),\n\t          t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t      if (t2 < 0) return;\n\t\n\t      var t = sqrt$1(t2),\n\t          q = cartesianScale(u, (-w - t) / uu);\n\t      cartesianAddInPlace(q, A);\n\t      q = spherical(q);\n\t\n\t      if (!two) return q;\n\t\n\t      // Two intersection points.\n\t      var lambda0 = a[0],\n\t          lambda1 = b[0],\n\t          phi0 = a[1],\n\t          phi1 = b[1],\n\t          z;\n\t\n\t      if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t      var delta = lambda1 - lambda0,\n\t          polar = abs(delta - pi$4) < epsilon$4,\n\t          meridian = polar || delta < epsilon$4;\n\t\n\t      if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t      // Check that the first point is between a and b.\n\t      if (meridian\n\t          ? polar\n\t            ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n\t            : phi0 <= q[1] && q[1] <= phi1\n\t          : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t        var q1 = cartesianScale(u, (-w + t) / uu);\n\t        cartesianAddInPlace(q1, A);\n\t        return [q, spherical(q1)];\n\t      }\n\t    }\n\t\n\t    // Generates a 4-bit vector representing the location of a point relative to\n\t    // the small circle's bounding box.\n\t    function code(lambda, phi) {\n\t      var r = smallRadius ? radius : pi$4 - radius,\n\t          code = 0;\n\t      if (lambda < -r) code |= 1; // left\n\t      else if (lambda > r) code |= 2; // right\n\t      if (phi < -r) code |= 4; // below\n\t      else if (phi > r) code |= 8; // above\n\t      return code;\n\t    }\n\t\n\t    return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n\t  }\n\t\n\t  function transform$1(prototype) {\n\t    return {\n\t      stream: transform$2(prototype)\n\t    };\n\t  }\n\t\n\t  function transform$2(prototype) {\n\t    function T() {}\n\t    var p = T.prototype = Object.create(Transform$1.prototype);\n\t    for (var k in prototype) p[k] = prototype[k];\n\t    return function(stream) {\n\t      var t = new T;\n\t      t.stream = stream;\n\t      return t;\n\t    };\n\t  }\n\t\n\t  function Transform$1() {}\n\t\n\t  Transform$1.prototype = {\n\t    point: function(x, y) { this.stream.point(x, y); },\n\t    sphere: function() { this.stream.sphere(); },\n\t    lineStart: function() { this.stream.lineStart(); },\n\t    lineEnd: function() { this.stream.lineEnd(); },\n\t    polygonStart: function() { this.stream.polygonStart(); },\n\t    polygonEnd: function() { this.stream.polygonEnd(); }\n\t  };\n\t\n\t  var maxDepth = 16;\n\t  var cosMinDistance = cos$1(30 * radians);\n\t  // cos(minimum angular distance)\n\t\n\t  function resample(project, delta2) {\n\t    return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t  }\n\t\n\t  function resampleNone(project) {\n\t    return transform$2({\n\t      point: function(x, y) {\n\t        x = project(x, y);\n\t        this.stream.point(x[0], x[1]);\n\t      }\n\t    });\n\t  }\n\t\n\t  function resample$1(project, delta2) {\n\t\n\t    function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0,\n\t          dy = y1 - y0,\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * delta2 && depth--) {\n\t        var a = a0 + a1,\n\t            b = b0 + b1,\n\t            c = c0 + c1,\n\t            m = sqrt$1(a * a + b * b + c * c),\n\t            phi2 = asin$1(c /= m),\n\t            lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t            p = project(lambda2, phi2),\n\t            x2 = p[0],\n\t            y2 = p[1],\n\t            dx2 = x2 - x0,\n\t            dy2 = y2 - y0,\n\t            dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t            || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t            || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t          resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    return function(stream) {\n\t      var lambda00, x00, y00, a00, b00, c00, // first point\n\t          lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t      var resampleStream = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t        polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t      };\n\t\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resampleStream.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t\n\t      function linePoint(lambda, phi) {\n\t        var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t\n\t      function lineEnd() {\n\t        resampleStream.point = point;\n\t        stream.lineEnd();\n\t      }\n\t\n\t      function ringStart() {\n\t        lineStart();\n\t        resampleStream.point = ringPoint;\n\t        resampleStream.lineEnd = ringEnd;\n\t      }\n\t\n\t      function ringPoint(lambda, phi) {\n\t        linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resampleStream.point = linePoint;\n\t      }\n\t\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t        resampleStream.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t\n\t      return resampleStream;\n\t    };\n\t  }\n\t\n\t  var transformRadians = transform$2({\n\t    point: function(x, y) {\n\t      this.stream.point(x * radians, y * radians);\n\t    }\n\t  });\n\t\n\t  function projection(project) {\n\t    return projectionMutator(function() { return project; })();\n\t  }\n\t\n\t  function projectionMutator(projectAt) {\n\t    var project,\n\t        k = 150, // scale\n\t        x = 480, y = 250, // translate\n\t        dx, dy, lambda = 0, phi = 0, // center\n\t        deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t        theta = null, preclip = clipAntimeridian, // clip angle\n\t        x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n\t        delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t        cache,\n\t        cacheStream;\n\t\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * radians, point[1] * radians);\n\t      return [point[0] * k + dx, dy - point[1] * k];\n\t    }\n\t\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t      return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t    }\n\t\n\t    function projectTransform(x, y) {\n\t      return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t    }\n\t\n\t    projection.stream = function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n\t    };\n\t\n\t    projection.clipAngle = function(_) {\n\t      return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t    };\n\t\n\t    projection.clipExtent = function(_) {\n\t      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    };\n\t\n\t    projection.scale = function(_) {\n\t      return arguments.length ? (k = +_, recenter()) : k;\n\t    };\n\t\n\t    projection.translate = function(_) {\n\t      return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t    };\n\t\n\t    projection.center = function(_) {\n\t      return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t    };\n\t\n\t    projection.rotate = function(_) {\n\t      return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t    };\n\t\n\t    projection.precision = function(_) {\n\t      return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n\t    };\n\t\n\t    function recenter() {\n\t      projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t      var center = project(lambda, phi);\n\t      dx = x - center[0] * k;\n\t      dy = y + center[1] * k;\n\t      return reset();\n\t    }\n\t\n\t    function reset() {\n\t      cache = cacheStream = null;\n\t      return projection;\n\t    }\n\t\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return recenter();\n\t    };\n\t  }\n\t\n\t  function conicProjection(projectAt) {\n\t    var phi0 = 0,\n\t        phi1 = pi$4 / 3,\n\t        m = projectionMutator(projectAt),\n\t        p = m(phi0, phi1);\n\t\n\t    p.parallels = function(_) {\n\t      return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t    };\n\t\n\t    return p;\n\t  }\n\t\n\t  function conicEqualAreaRaw(y0, y1) {\n\t    var sy0 = sin$1(y0),\n\t        n = (sy0 + sin$1(y1)) / 2,\n\t        c = 1 + sy0 * (2 * n - sy0),\n\t        r0 = sqrt$1(c) / n;\n\t\n\t    function project(x, y) {\n\t      var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n\t      return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t    }\n\t\n\t    project.invert = function(x, y) {\n\t      var r0y = r0 - y;\n\t      return [atan2(x, r0y) / n, asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t    };\n\t\n\t    return project;\n\t  }\n\t\n\t  function conicEqualArea() {\n\t    return conicProjection(conicEqualAreaRaw)\n\t        .scale(155.424)\n\t        .center([0, 33.6442]);\n\t  }\n\t\n\t  function albers() {\n\t    return conicEqualArea()\n\t        .parallels([29.5, 45.5])\n\t        .scale(1070)\n\t        .translate([480, 250])\n\t        .rotate([96, 0])\n\t        .center([-0.6, 38.7]);\n\t  }\n\t\n\t  // The projections must have mutually exclusive clip regions on the sphere,\n\t  // as this will avoid emitting interleaving lines and polygons.\n\t  function multiplex(streams) {\n\t    var n = streams.length;\n\t    return {\n\t      point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t      sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t      lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t      lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t      polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t      polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t    };\n\t  }\n\t\n\t  // A composite projection for the United States, configured by default for\n\t  // 960×500. The projection also works quite well at 960×600 if you change the\n\t  // scale to 1285 and adjust the translate accordingly. The set of standard\n\t  // parallels for each region comes from USGS, which is published here:\n\t  // http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\t  function albersUsa() {\n\t    var cache,\n\t        cacheStream,\n\t        lower48 = albers(), lower48Point,\n\t        alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t        hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t        point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      return point = null,\n\t          (lower48Point.point(x, y), point)\n\t          || (alaskaPoint.point(x, y), point)\n\t          || (hawaiiPoint.point(x, y), point);\n\t    }\n\t\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(),\n\t          t = lower48.translate(),\n\t          x = (coordinates[0] - t[0]) / k,\n\t          y = (coordinates[1] - t[1]) / k;\n\t      return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t          : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t          : lower48).invert(coordinates);\n\t    };\n\t\n\t    albersUsa.stream = function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t    };\n\t\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t      lower48Point = lower48\n\t          .translate(_)\n\t          .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t          .stream(pointStream);\n\t\n\t      alaskaPoint = alaska\n\t          .translate([x - 0.307 * k, y + 0.201 * k])\n\t          .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t          .stream(pointStream);\n\t\n\t      hawaiiPoint = hawaii\n\t          .translate([x - 0.205 * k, y + 0.212 * k])\n\t          .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t          .stream(pointStream);\n\t\n\t      return albersUsa;\n\t    };\n\t\n\t    return albersUsa.scale(1070);\n\t  }\n\t\n\t  function azimuthalRaw(scale) {\n\t    return function(x, y) {\n\t      var cx = cos$1(x),\n\t          cy = cos$1(y),\n\t          k = scale(cx * cy);\n\t      return [\n\t        k * cy * sin$1(x),\n\t        k * sin$1(y)\n\t      ];\n\t    }\n\t  }\n\t\n\t  function azimuthalInvert(angle) {\n\t    return function(x, y) {\n\t      var z = sqrt$1(x * x + y * y),\n\t          c = angle(z),\n\t          sc = sin$1(c),\n\t          cc = cos$1(c);\n\t      return [\n\t        atan2(x * sc, z * cc),\n\t        asin$1(z && y * sc / z)\n\t      ];\n\t    }\n\t  }\n\t\n\t  var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t    return sqrt$1(2 / (1 + cxcy));\n\t  });\n\t\n\t  azimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t    return 2 * asin$1(z / 2);\n\t  });\n\t\n\t  function azimuthalEqualArea() {\n\t    return projection(azimuthalEqualAreaRaw)\n\t        .scale(124.75)\n\t        .clipAngle(180 - 1e-3);\n\t  }\n\t\n\t  var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t    return (c = acos(c)) && c / sin$1(c);\n\t  });\n\t\n\t  azimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t    return z;\n\t  });\n\t\n\t  function azimuthalEquidistant() {\n\t    return projection(azimuthalEquidistantRaw)\n\t        .scale(79.4188)\n\t        .clipAngle(180 - 1e-3);\n\t  }\n\t\n\t  function mercatorRaw(lambda, phi) {\n\t    return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n\t  }\n\t\n\t  mercatorRaw.invert = function(x, y) {\n\t    return [x, 2 * atan(exp(y)) - halfPi$3];\n\t  };\n\t\n\t  function mercator() {\n\t    return mercatorProjection(mercatorRaw)\n\t        .scale(961 / tau$4);\n\t  }\n\t\n\t  function mercatorProjection(project) {\n\t    var m = projection(project),\n\t        scale = m.scale,\n\t        translate = m.translate,\n\t        clipExtent = m.clipExtent,\n\t        clipAuto;\n\t\n\t    m.scale = function(_) {\n\t      return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n\t    };\n\t\n\t    m.translate = function(_) {\n\t      return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n\t    };\n\t\n\t    m.clipExtent = function(_) {\n\t      if (!arguments.length) return clipAuto ? null : clipExtent();\n\t      if (clipAuto = _ == null) {\n\t        var k = pi$4 * scale(),\n\t            t = translate();\n\t        _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n\t      }\n\t      clipExtent(_);\n\t      return m;\n\t    };\n\t\n\t    return m.clipExtent(null);\n\t  }\n\t\n\t  function tany(y) {\n\t    return tan((halfPi$3 + y) / 2);\n\t  }\n\t\n\t  function conicConformalRaw(y0, y1) {\n\t    var cy0 = cos$1(y0),\n\t        n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n\t        f = cy0 * pow$1(tany(y0), n) / n;\n\t\n\t    if (!n) return mercatorRaw;\n\t\n\t    function project(x, y) {\n\t      if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n\t      else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n\t      var r = f / pow$1(tany(y), n);\n\t      return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t    }\n\t\n\t    project.invert = function(x, y) {\n\t      var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n\t      return [atan2(x, fy) / n, 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n\t    };\n\t\n\t    return project;\n\t  }\n\t\n\t  function conicConformal() {\n\t    return conicProjection(conicConformalRaw)\n\t        .scale(109.5)\n\t        .parallels([30, 30]);\n\t  }\n\t\n\t  function equirectangularRaw(lambda, phi) {\n\t    return [lambda, phi];\n\t  }\n\t\n\t  equirectangularRaw.invert = equirectangularRaw;\n\t\n\t  function equirectangular() {\n\t    return projection(equirectangularRaw)\n\t        .scale(152.63);\n\t  }\n\t\n\t  function conicEquidistantRaw(y0, y1) {\n\t    var cy0 = cos$1(y0),\n\t        n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t        g = cy0 / n + y0;\n\t\n\t    if (abs(n) < epsilon$4) return equirectangularRaw;\n\t\n\t    function project(x, y) {\n\t      var gy = g - y, nx = n * x;\n\t      return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t    }\n\t\n\t    project.invert = function(x, y) {\n\t      var gy = g - y;\n\t      return [atan2(x, gy) / n, g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n\t    };\n\t\n\t    return project;\n\t  }\n\t\n\t  function conicEquidistant() {\n\t    return conicProjection(conicEquidistantRaw)\n\t        .scale(131.154)\n\t        .center([0, 13.9389]);\n\t  }\n\t\n\t  function gnomonicRaw(x, y) {\n\t    var cy = cos$1(y), k = cos$1(x) * cy;\n\t    return [cy * sin$1(x) / k, sin$1(y) / k];\n\t  }\n\t\n\t  gnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\t  function gnomonic() {\n\t    return projection(gnomonicRaw)\n\t        .scale(144.049)\n\t        .clipAngle(60);\n\t  }\n\t\n\t  function orthographicRaw(x, y) {\n\t    return [cos$1(y) * sin$1(x), sin$1(y)];\n\t  }\n\t\n\t  orthographicRaw.invert = azimuthalInvert(asin$1);\n\t\n\t  function orthographic() {\n\t    return projection(orthographicRaw)\n\t        .scale(249.5)\n\t        .clipAngle(90 + epsilon$4);\n\t  }\n\t\n\t  function stereographicRaw(x, y) {\n\t    var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t    return [cy * sin$1(x) / k, sin$1(y) / k];\n\t  }\n\t\n\t  stereographicRaw.invert = azimuthalInvert(function(z) {\n\t    return 2 + atan(z);\n\t  });\n\t\n\t  function stereographic() {\n\t    return projection(stereographicRaw)\n\t        .scale(250)\n\t        .clipAngle(142);\n\t  }\n\t\n\t  function transverseMercatorRaw(lambda, phi) {\n\t    return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n\t  }\n\t\n\t  transverseMercatorRaw.invert = function(x, y) {\n\t    return [-y, 2 * atan(exp(x)) - halfPi$3];\n\t  };\n\t\n\t  function transverseMercator() {\n\t    var m = mercatorProjection(transverseMercatorRaw),\n\t        center = m.center,\n\t        rotate = m.rotate;\n\t\n\t    m.center = function(_) {\n\t      return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t    };\n\t\n\t    m.rotate = function(_) {\n\t      return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t    };\n\t\n\t    return rotate([0, 0, 90])\n\t        .scale(159.155);\n\t  }\n\t\n\t  exports.version = version;\n\t  exports.bisect = bisectRight;\n\t  exports.bisectRight = bisectRight;\n\t  exports.bisectLeft = bisectLeft;\n\t  exports.ascending = ascending;\n\t  exports.bisector = bisector;\n\t  exports.descending = descending;\n\t  exports.deviation = deviation;\n\t  exports.extent = extent;\n\t  exports.histogram = histogram;\n\t  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\t  exports.thresholdScott = scott;\n\t  exports.thresholdSturges = sturges;\n\t  exports.max = max;\n\t  exports.mean = mean;\n\t  exports.median = median;\n\t  exports.merge = merge;\n\t  exports.min = min;\n\t  exports.pairs = pairs;\n\t  exports.permute = permute;\n\t  exports.quantile = threshold;\n\t  exports.range = range;\n\t  exports.scan = scan;\n\t  exports.shuffle = shuffle;\n\t  exports.sum = sum;\n\t  exports.ticks = ticks;\n\t  exports.tickStep = tickStep;\n\t  exports.transpose = transpose;\n\t  exports.variance = variance;\n\t  exports.zip = zip;\n\t  exports.entries = entries;\n\t  exports.keys = keys;\n\t  exports.values = values;\n\t  exports.map = map$1;\n\t  exports.set = set;\n\t  exports.nest = nest;\n\t  exports.randomUniform = uniform;\n\t  exports.randomNormal = normal;\n\t  exports.randomLogNormal = logNormal;\n\t  exports.randomBates = bates;\n\t  exports.randomIrwinHall = irwinHall;\n\t  exports.randomExponential = exponential;\n\t  exports.easeLinear = linear;\n\t  exports.easeQuad = quadInOut;\n\t  exports.easeQuadIn = quadIn;\n\t  exports.easeQuadOut = quadOut;\n\t  exports.easeQuadInOut = quadInOut;\n\t  exports.easeCubic = easeCubicInOut;\n\t  exports.easeCubicIn = cubicIn;\n\t  exports.easeCubicOut = cubicOut;\n\t  exports.easeCubicInOut = easeCubicInOut;\n\t  exports.easePoly = polyInOut;\n\t  exports.easePolyIn = polyIn;\n\t  exports.easePolyOut = polyOut;\n\t  exports.easePolyInOut = polyInOut;\n\t  exports.easeSin = sinInOut;\n\t  exports.easeSinIn = sinIn;\n\t  exports.easeSinOut = sinOut;\n\t  exports.easeSinInOut = sinInOut;\n\t  exports.easeExp = expInOut;\n\t  exports.easeExpIn = expIn;\n\t  exports.easeExpOut = expOut;\n\t  exports.easeExpInOut = expInOut;\n\t  exports.easeCircle = circleInOut;\n\t  exports.easeCircleIn = circleIn;\n\t  exports.easeCircleOut = circleOut;\n\t  exports.easeCircleInOut = circleInOut;\n\t  exports.easeBounce = bounceOut;\n\t  exports.easeBounceIn = bounceIn;\n\t  exports.easeBounceOut = bounceOut;\n\t  exports.easeBounceInOut = bounceInOut;\n\t  exports.easeBack = backInOut;\n\t  exports.easeBackIn = backIn;\n\t  exports.easeBackOut = backOut;\n\t  exports.easeBackInOut = backInOut;\n\t  exports.easeElastic = elasticOut;\n\t  exports.easeElasticIn = elasticIn;\n\t  exports.easeElasticOut = elasticOut;\n\t  exports.easeElasticInOut = elasticInOut;\n\t  exports.polygonArea = area;\n\t  exports.polygonCentroid = centroid;\n\t  exports.polygonHull = hull;\n\t  exports.polygonContains = contains;\n\t  exports.polygonLength = length$1;\n\t  exports.path = path;\n\t  exports.quadtree = quadtree;\n\t  exports.queue = queue;\n\t  exports.arc = arc;\n\t  exports.area = area$1;\n\t  exports.line = line;\n\t  exports.pie = pie;\n\t  exports.radialArea = radialArea;\n\t  exports.radialLine = radialLine$1;\n\t  exports.symbol = symbol;\n\t  exports.symbols = symbols;\n\t  exports.symbolCircle = circle;\n\t  exports.symbolCross = cross$1;\n\t  exports.symbolDiamond = diamond;\n\t  exports.symbolSquare = square;\n\t  exports.symbolStar = star;\n\t  exports.symbolTriangle = triangle;\n\t  exports.symbolWye = wye;\n\t  exports.curveBasisClosed = basisClosed;\n\t  exports.curveBasisOpen = basisOpen;\n\t  exports.curveBasis = basis;\n\t  exports.curveBundle = bundle;\n\t  exports.curveCardinalClosed = cardinalClosed;\n\t  exports.curveCardinalOpen = cardinalOpen;\n\t  exports.curveCardinal = cardinal;\n\t  exports.curveCatmullRomClosed = catmullRomClosed;\n\t  exports.curveCatmullRomOpen = catmullRomOpen;\n\t  exports.curveCatmullRom = catmullRom;\n\t  exports.curveLinearClosed = linearClosed;\n\t  exports.curveLinear = curveLinear;\n\t  exports.curveMonotoneX = monotoneX;\n\t  exports.curveMonotoneY = monotoneY;\n\t  exports.curveNatural = natural;\n\t  exports.curveStep = step;\n\t  exports.curveStepAfter = stepAfter;\n\t  exports.curveStepBefore = stepBefore;\n\t  exports.stack = stack;\n\t  exports.stackOffsetExpand = expand;\n\t  exports.stackOffsetNone = none;\n\t  exports.stackOffsetSilhouette = silhouette;\n\t  exports.stackOffsetWiggle = wiggle;\n\t  exports.stackOrderAscending = ascending$1;\n\t  exports.stackOrderDescending = descending$2;\n\t  exports.stackOrderInsideOut = insideOut;\n\t  exports.stackOrderNone = none$1;\n\t  exports.stackOrderReverse = reverse;\n\t  exports.color = color;\n\t  exports.rgb = colorRgb;\n\t  exports.hsl = colorHsl;\n\t  exports.lab = lab;\n\t  exports.hcl = colorHcl;\n\t  exports.cubehelix = cubehelix;\n\t  exports.interpolate = interpolate;\n\t  exports.interpolateArray = array$1;\n\t  exports.interpolateDate = date;\n\t  exports.interpolateNumber = interpolateNumber;\n\t  exports.interpolateObject = object;\n\t  exports.interpolateRound = interpolateRound;\n\t  exports.interpolateString = interpolateString;\n\t  exports.interpolateTransformCss = interpolateTransform$1;\n\t  exports.interpolateTransformSvg = interpolateTransform$2;\n\t  exports.interpolateZoom = interpolateZoom;\n\t  exports.interpolateRgb = interpolateRgb;\n\t  exports.interpolateRgbBasis = rgbBasis;\n\t  exports.interpolateRgbBasisClosed = rgbBasisClosed;\n\t  exports.interpolateHsl = hsl$1;\n\t  exports.interpolateHslLong = hslLong;\n\t  exports.interpolateLab = lab$1;\n\t  exports.interpolateHcl = hcl$1;\n\t  exports.interpolateHclLong = hclLong;\n\t  exports.interpolateCubehelix = cubehelix$2;\n\t  exports.interpolateCubehelixLong = interpolateCubehelixLong;\n\t  exports.interpolateBasis = basis$2;\n\t  exports.interpolateBasisClosed = basisClosed$1;\n\t  exports.quantize = quantize;\n\t  exports.dispatch = dispatch;\n\t  exports.dsvFormat = dsv;\n\t  exports.csvParse = csvParse;\n\t  exports.csvParseRows = csvParseRows;\n\t  exports.csvFormat = csvFormat;\n\t  exports.csvFormatRows = csvFormatRows;\n\t  exports.tsvParse = tsvParse;\n\t  exports.tsvParseRows = tsvParseRows;\n\t  exports.tsvFormat = tsvFormat;\n\t  exports.tsvFormatRows = tsvFormatRows;\n\t  exports.request = request;\n\t  exports.html = html;\n\t  exports.json = json;\n\t  exports.text = text;\n\t  exports.xml = xml;\n\t  exports.csv = csv$1;\n\t  exports.tsv = tsv$1;\n\t  exports.now = now;\n\t  exports.timer = timer;\n\t  exports.timerFlush = timerFlush;\n\t  exports.timeout = timeout$1;\n\t  exports.interval = interval$1;\n\t  exports.timeInterval = newInterval;\n\t  exports.timeMillisecond = millisecond;\n\t  exports.timeMilliseconds = milliseconds;\n\t  exports.timeSecond = second;\n\t  exports.timeSeconds = seconds;\n\t  exports.timeMinute = minute;\n\t  exports.timeMinutes = minutes;\n\t  exports.timeHour = hour;\n\t  exports.timeHours = hours;\n\t  exports.timeDay = day;\n\t  exports.timeDays = days;\n\t  exports.timeWeek = timeWeek;\n\t  exports.timeWeeks = sundays;\n\t  exports.timeSunday = timeWeek;\n\t  exports.timeSundays = sundays;\n\t  exports.timeMonday = timeMonday;\n\t  exports.timeMondays = mondays;\n\t  exports.timeTuesday = tuesday;\n\t  exports.timeTuesdays = tuesdays;\n\t  exports.timeWednesday = wednesday;\n\t  exports.timeWednesdays = wednesdays;\n\t  exports.timeThursday = thursday;\n\t  exports.timeThursdays = thursdays;\n\t  exports.timeFriday = friday;\n\t  exports.timeFridays = fridays;\n\t  exports.timeSaturday = saturday;\n\t  exports.timeSaturdays = saturdays;\n\t  exports.timeMonth = month;\n\t  exports.timeMonths = months;\n\t  exports.timeYear = year;\n\t  exports.timeYears = years;\n\t  exports.utcMillisecond = millisecond;\n\t  exports.utcMilliseconds = milliseconds;\n\t  exports.utcSecond = second;\n\t  exports.utcSeconds = seconds;\n\t  exports.utcMinute = utcMinute;\n\t  exports.utcMinutes = utcMinutes;\n\t  exports.utcHour = utcHour;\n\t  exports.utcHours = utcHours;\n\t  exports.utcDay = utcDay;\n\t  exports.utcDays = utcDays;\n\t  exports.utcWeek = utcWeek;\n\t  exports.utcWeeks = utcSundays;\n\t  exports.utcSunday = utcWeek;\n\t  exports.utcSundays = utcSundays;\n\t  exports.utcMonday = utcMonday;\n\t  exports.utcMondays = utcMondays;\n\t  exports.utcTuesday = utcTuesday;\n\t  exports.utcTuesdays = utcTuesdays;\n\t  exports.utcWednesday = utcWednesday;\n\t  exports.utcWednesdays = utcWednesdays;\n\t  exports.utcThursday = utcThursday;\n\t  exports.utcThursdays = utcThursdays;\n\t  exports.utcFriday = utcFriday;\n\t  exports.utcFridays = utcFridays;\n\t  exports.utcSaturday = utcSaturday;\n\t  exports.utcSaturdays = utcSaturdays;\n\t  exports.utcMonth = utcMonth;\n\t  exports.utcMonths = utcMonths;\n\t  exports.utcYear = utcYear;\n\t  exports.utcYears = utcYears;\n\t  exports.formatLocale = formatLocale;\n\t  exports.formatDefaultLocale = defaultLocale;\n\t  exports.formatSpecifier = formatSpecifier;\n\t  exports.precisionFixed = precisionFixed;\n\t  exports.precisionPrefix = precisionPrefix;\n\t  exports.precisionRound = precisionRound;\n\t  exports.isoFormat = formatIso;\n\t  exports.isoParse = parseIso;\n\t  exports.timeFormatLocale = formatLocale$1;\n\t  exports.timeFormatDefaultLocale = defaultLocale$1;\n\t  exports.scaleBand = band;\n\t  exports.scalePoint = point$4;\n\t  exports.scaleIdentity = identity$4;\n\t  exports.scaleLinear = linear$2;\n\t  exports.scaleLog = log;\n\t  exports.scaleOrdinal = ordinal;\n\t  exports.scaleImplicit = implicit;\n\t  exports.scalePow = pow;\n\t  exports.scaleSqrt = sqrt;\n\t  exports.scaleQuantile = quantile;\n\t  exports.scaleQuantize = quantize$1;\n\t  exports.scaleThreshold = threshold$1;\n\t  exports.scaleTime = time;\n\t  exports.scaleUtc = utcTime;\n\t  exports.schemeCategory10 = category10;\n\t  exports.schemeCategory20b = category20b;\n\t  exports.schemeCategory20c = category20c;\n\t  exports.schemeCategory20 = category20;\n\t  exports.scaleSequential = sequential;\n\t  exports.interpolateCubehelixDefault = cubehelix$3;\n\t  exports.interpolateRainbow = rainbow$1;\n\t  exports.interpolateWarm = warm;\n\t  exports.interpolateCool = cool;\n\t  exports.interpolateViridis = viridis;\n\t  exports.interpolateMagma = magma;\n\t  exports.interpolateInferno = inferno;\n\t  exports.interpolatePlasma = plasma;\n\t  exports.creator = creator;\n\t  exports.customEvent = customEvent;\n\t  exports.local = local;\n\t  exports.matcher = matcher$1;\n\t  exports.mouse = mouse;\n\t  exports.namespace = namespace;\n\t  exports.namespaces = namespaces;\n\t  exports.select = select;\n\t  exports.selectAll = selectAll;\n\t  exports.selection = selection;\n\t  exports.selector = selector;\n\t  exports.selectorAll = selectorAll;\n\t  exports.touch = touch;\n\t  exports.touches = touches;\n\t  exports.window = window;\n\t  exports.active = active;\n\t  exports.interrupt = interrupt;\n\t  exports.transition = transition;\n\t  exports.axisTop = axisTop;\n\t  exports.axisRight = axisRight;\n\t  exports.axisBottom = axisBottom;\n\t  exports.axisLeft = axisLeft;\n\t  exports.cluster = cluster;\n\t  exports.hierarchy = hierarchy;\n\t  exports.pack = index;\n\t  exports.packSiblings = siblings;\n\t  exports.packEnclose = enclose;\n\t  exports.partition = partition;\n\t  exports.stratify = stratify;\n\t  exports.tree = tree;\n\t  exports.treemap = index$1;\n\t  exports.treemapBinary = binary;\n\t  exports.treemapDice = treemapDice;\n\t  exports.treemapSlice = treemapSlice;\n\t  exports.treemapSliceDice = sliceDice;\n\t  exports.treemapSquarify = squarify;\n\t  exports.treemapResquarify = resquarify;\n\t  exports.forceCenter = center$1;\n\t  exports.forceCollide = collide;\n\t  exports.forceLink = link;\n\t  exports.forceManyBody = manyBody;\n\t  exports.forceSimulation = simulation;\n\t  exports.forceX = x$3;\n\t  exports.forceY = y$3;\n\t  exports.drag = drag;\n\t  exports.dragDisable = dragDisable;\n\t  exports.dragEnable = dragEnable;\n\t  exports.voronoi = voronoi;\n\t  exports.zoom = zoom;\n\t  exports.zoomIdentity = identity$6;\n\t  exports.zoomTransform = transform;\n\t  exports.brush = brush;\n\t  exports.brushX = brushX;\n\t  exports.brushY = brushY;\n\t  exports.brushSelection = brushSelection;\n\t  exports.chord = chord;\n\t  exports.ribbon = ribbon;\n\t  exports.geoAlbers = albers;\n\t  exports.geoAlbersUsa = albersUsa;\n\t  exports.geoArea = area$2;\n\t  exports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\t  exports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\t  exports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\t  exports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\t  exports.geoBounds = bounds;\n\t  exports.geoCentroid = centroid$1;\n\t  exports.geoCircle = circle$1;\n\t  exports.geoClipExtent = extent$1;\n\t  exports.geoConicConformal = conicConformal;\n\t  exports.geoConicConformalRaw = conicConformalRaw;\n\t  exports.geoConicEqualArea = conicEqualArea;\n\t  exports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\t  exports.geoConicEquidistant = conicEquidistant;\n\t  exports.geoConicEquidistantRaw = conicEquidistantRaw;\n\t  exports.geoDistance = distance;\n\t  exports.geoEquirectangular = equirectangular;\n\t  exports.geoEquirectangularRaw = equirectangularRaw;\n\t  exports.geoGnomonic = gnomonic;\n\t  exports.geoGnomonicRaw = gnomonicRaw;\n\t  exports.geoGraticule = graticule;\n\t  exports.geoInterpolate = interpolate$2;\n\t  exports.geoLength = length$2;\n\t  exports.geoMercator = mercator;\n\t  exports.geoMercatorRaw = mercatorRaw;\n\t  exports.geoOrthographic = orthographic;\n\t  exports.geoOrthographicRaw = orthographicRaw;\n\t  exports.geoPath = index$3;\n\t  exports.geoProjection = projection;\n\t  exports.geoProjectionMutator = projectionMutator;\n\t  exports.geoRotation = rotation;\n\t  exports.geoStereographic = stereographic;\n\t  exports.geoStereographicRaw = stereographicRaw;\n\t  exports.geoStream = stream;\n\t  exports.geoTransform = transform$1;\n\t  exports.geoTransverseMercator = transverseMercator;\n\t  exports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\t\n\t  Object.defineProperty(exports, '__esModule', { value: true });\n\t\n\t}));\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * Simple Assertion function\n\t * @param  {anything} test    Anything that will evaluate to true of false.\n\t * @param  {string} message The error message to send if `test` is false\n\t */\n\tfunction kotoAssert(test, message) {\n\t  if (test) {\n\t    return;\n\t  }\n\t  throw new Error(\"[koto] \" + message);\n\t}\n\t\n\texports.default = kotoAssert;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _assert = __webpack_require__(3);\n\t\n\tvar _assert2 = _interopRequireDefault(_assert);\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Create a layer using the provided `base` selection.\n\t *\n\t * @class\n\t *\n\t * @param {d3.selection} base The containing DOM node for the layer.\n\t * @param {Object} options Overrides for databind, insert and event methods.\n\t * @param {Function} options.databind databind override\n\t * @param {Function} options.insert insert override\n\t * @param {Function} [options.events] life-cycle event handler overrides.\n\t *                                  Possible values are [enter, update, merge, exit]\n\t *                                  with or without the 'transition postfix'.\n\t */\n\t\n\tvar Layer = function () {\n\t  function Layer(base, options) {\n\t    _classCallCheck(this, Layer);\n\t\n\t    this._base = base;\n\t    this._handlers = {};\n\t    this._lifecycleRe = /^(enter|update|merge|exit)(:transition)?$/;\n\t\n\t    if (options) {\n\t      // Set layer methods (required)\n\t      this.dataBind = options.dataBind;\n\t      this.insert = options.insert;\n\t\n\t      // Bind events (optional)\n\t      if ('events' in options) {\n\t        for (var eventName in options.events) {\n\t          this.on(eventName, options.events[eventName]);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Invoked by {@link Layer#draw} to join data with this layer's DOM nodes. This\n\t   * implementation is \"virtual\"--it *must* be overridden by Layer instances.\n\t   *\n\t   * @param {Array} data Value passed to {@link Layer#draw}\n\t   * @param {Object} [context] the instance of this layers\n\t   */\n\t\n\t\n\t  _createClass(Layer, [{\n\t    key: 'dataBind',\n\t    value: function dataBind() {\n\t      (0, _assert2.default)(false, 'Layers must specify a dataBind method.');\n\t    }\n\t\n\t    /**\n\t     * Invoked by {@link Layer#draw} in order to insert new DOM nodes into this\n\t     * layer's `base`. This implementation is \"virtual\"--it *must* be overridden by\n\t     * Layer instances.\n\t     */\n\t\n\t  }, {\n\t    key: 'insert',\n\t    value: function insert() {\n\t      (0, _assert2.default)(false, 'Layers must specify an `insert` method.');\n\t    }\n\t\n\t    /**\n\t     * Subscribe a handler to a lifecycle event. These events (and only these\n\t     * events) are triggered when {@link Layer#draw} is invoked--see that method\n\t     * for more details on lifecycle events.\n\t     *\n\t     * @param {String} eventName Identifier for the lifecycle event for which to\n\t     *        subscribe.\n\t     * @param {Function} handler Callback function\n\t     *\n\t     * @returns {Chart} Reference to the layer instance (for chaining).\n\t     */\n\t\n\t  }, {\n\t    key: 'on',\n\t    value: function on(eventName, handler, options) {\n\t      options = options || {};\n\t\n\t      (0, _assert2.default)(this._lifecycleRe.test(eventName), 'Unrecognized lifecycle event name specified to \\'Layer#on\\': \\'' + eventName + '\\'.');\n\t\n\t      if (!(eventName in this._handlers)) {\n\t        this._handlers[eventName] = [];\n\t      }\n\t      this._handlers[eventName].push({\n\t        callback: handler,\n\t        chart: options.chart || null\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Unsubscribe the specified handler from the specified event. If no handler is\n\t     * supplied, remove *all* handlers from the event.\n\t     *\n\t     * @param {String} eventName Identifier for event from which to remove\n\t     *        unsubscribe\n\t     * @param {Function} handler Callback to remove from the specified event\n\t     *\n\t     * @returns {Chart} Reference to the layer instance (for chaining).\n\t     */\n\t\n\t  }, {\n\t    key: 'off',\n\t    value: function off(eventName, handler) {\n\t      var handlers = this._handlers[eventName];\n\t      var idx;\n\t\n\t      (0, _assert2.default)(this._lifecycleRe.test(eventName), 'Unrecognized lifecycle event name specified to \\'Layer#on\\': \\'' + eventName + '\\'.');\n\t\n\t      if (!handlers) {\n\t        return this;\n\t      }\n\t\n\t      if (arguments.length === 1) {\n\t        handlers.length = 0;\n\t        return this;\n\t      }\n\t\n\t      for (idx = handlers.length - 1; idx > -1; --idx) {\n\t        if (handlers[idx].callback === handler) {\n\t          handlers.splice(idx, 1);\n\t        }\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Render the layer according to the input data. Bind the data to the layer\n\t     * (according to {@link Layer#dataBind}, insert new elements (according to\n\t     * {@link Layer#insert}, make lifecycle selections, and invoke all relevant\n\t     * handlers (as attached via {@link Layer#on}) with the lifecycle selections.\n\t     *\n\t     * - update\n\t     * - update:transition\n\t     * - enter\n\t     * - enter:transition\n\t     * - exit\n\t     * - exit:transition\n\t     *\n\t     * @param {Array} data Data to drive the rendering.\n\t     */\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw(data) {\n\t      var bound,\n\t          entering,\n\t          events,\n\t          selection,\n\t          method,\n\t          handlers,\n\t          eventName,\n\t          idx,\n\t          len,\n\t          tidx,\n\t          tlen,\n\t          promises = [];\n\t\n\t      function endall(transition, callback) {\n\t        var n = 0;\n\t        if (transition.size() === 0) {\n\t          callback();\n\t        } else {\n\t          transition.each(function () {\n\t            ++n;\n\t          }).each('interrupt.promise', function () {\n\t            callback.apply(this, arguments);\n\t          }).each('end.promise', function () {\n\t            if (! --n) {\n\t              callback.apply(this, arguments);\n\t            }\n\t          });\n\t        }\n\t      }\n\t\n\t      function promiseCallback(resolve) {\n\t        selection.call(endall, function () {\n\t          resolve(true);\n\t        });\n\t      }\n\t\n\t      bound = this.dataBind.call(this._base, data, this);\n\t\n\t      (0, _assert2.default)(bound instanceof d3.selection, 'Invalid selection defined by `Layer#dataBind` method.');\n\t      (0, _assert2.default)(bound.enter, 'Layer selection not properly bound.');\n\t\n\t      entering = bound.enter();\n\t      entering._chart = this._base._chart;\n\t\n\t      events = [{\n\t        name: 'update',\n\t        selection: bound\n\t      }, {\n\t        name: 'enter',\n\t        selection: entering,\n\t        method: this.insert\n\t      }, {\n\t        name: 'merge',\n\t        // Although the `merge` lifecycle event shares its selection object\n\t        // with the `update` lifecycle event, the object's contents will be\n\t        // modified when koto invokes the user-supplied `insert` method\n\t        // when triggering the `enter` event.\n\t        selection: bound\n\t      }, {\n\t        name: 'exit',\n\t        // Although the `exit` lifecycle event shares its selection object\n\t        // with the `update` and `merge` lifecycle events, the object's\n\t        // contents will be modified when koto invokes\n\t        // `d3.selection.exit`.\n\t        selection: bound,\n\t        method: bound.exit\n\t      }];\n\t\n\t      for (var i = 0, l = events.length; i < l; ++i) {\n\t        eventName = events[i].name;\n\t        selection = events[i].selection;\n\t        method = events[i].method;\n\t\n\t        // Some lifecycle selections modify shared state, so they must be\n\t        // deferred until just prior to handler invocation.\n\t        if (typeof method === 'function') {\n\t          selection = method.call(selection, selection);\n\t        }\n\t\n\t        if (selection.empty()) {\n\t          continue;\n\t        }\n\t\n\t        (0, _assert2.default)(selection && selection instanceof d3.selection, 'Invalid selection defined for ' + eventName + ' lifecycle event.');\n\t\n\t        handlers = this._handlers[eventName];\n\t\n\t        if (handlers) {\n\t          for (idx = 0, len = handlers.length; idx < len; ++idx) {\n\t            // Attach a reference to the parent chart so the selection's\n\t            // `chart` method will function correctly.\n\t            selection._chart = handlers[idx].chart || this._base._chart;\n\t            // selection.call(handlers[idx].callback);\n\t            handlers[idx].callback.call(selection, selection);\n\t          }\n\t        }\n\t\n\t        handlers = this._handlers[eventName + ':transition'];\n\t\n\t        if (handlers && handlers.length) {\n\t          selection = selection.transition();\n\t          for (tlen = handlers.length, tidx = 0; tidx < tlen; ++tidx) {\n\t            selection._chart = handlers[tidx].chart || this._base._chart;\n\t            // selection.call(handlers[tidx].callback);\n\t            handlers[tidx].callback.call(selection, selection);\n\t            promises.push(new Promise(promiseCallback));\n\t          }\n\t        }\n\t        this.promise = Promise.all(promises);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Layer;\n\t}();\n\t\n\texports.default = Layer;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** koto.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 84dc20dd3fda91089baa\n **/","import 'babel-polyfill';\nimport * as d3 from 'd3';\nimport kotoAssert from './assert.js';\nimport Layer from './layer.js';\n\n// d3 is required\nkotoAssert(d3, 'd3 js is required.');\n/**\n * Create a koto chart\n *\n * @constructor\n *\n * @param {d3.selection} selection The chart's \"base\" DOM node. This should\n *        contain any nodes that the chart generates.\n */\nclass Chart {\n  constructor(selection) {\n    this.base = selection; // Container for chart @type {d3.selection}.\n    this.hasDrawn = false; // Has this chart been drawn at least once?\n\n    this.merge = {};\n    this.merge.configs = (...args) => {\n      this.configs = Object.assign({}, this.configs, ...args);\n      return this.configs;\n    };\n    this.merge.accessors = (...args) => {\n      this.accessors = Object.assign({}, this.accessors, ...args);\n      return this.accessors;\n    };\n\n    // exposed properties\n    this.configs = {};\n    this.accessors = {};\n    this.promise = null;\n\n    // private\n    this._layers = new Map();\n    this._attached = new Map();\n    this._events = new Map();\n\n    // alias\n    this.c = this.config;\n    this.a = this.accessor;\n  }\n\n  /**\n   * A \"hook\" method that you may define to modify input data before it is used\n   * to draw the chart's layers and attachments. This method will be used by all\n   * sub-classes. You may optionally return a promise if your data transformation\n   * is asynchronous (i.e. you're using web workers).\n   *\n   * Note: you will most likely never call this method directly, but rather\n   * include it as part of a chart definition, and then rely on koto to\n   * invoke it when you draw the chart with {@link Chart#draw}.\n   *\n   * @param {Array} data Input data provided to @link Chart#draw}.\n   * @returns {mixed} Data to be used in drawing the chart's layers and\n   *                  attachments.\n   */\n  transform(data) { return data; }\n\n  /**\n   * A \"hook\" method that you may define to choose which mutation of the input\n   * data is sent to which of the attached charts (by name). This method will\n   * be used by all sub-classes. This only applies to charts that use the\n   * {@link Chart#attach} method.\n   *\n   * Note: you will most likely never call this method directly, but rather\n   * include it as part of a chart definition, and then rely on koto to\n   * invoke it when you draw the chart with {@link Chart#draw}.\n   *\n   * @param {String} data Name of attached chart defined in {@link Chart#attach}.\n   * @param {Array} data Input data provided to {@link Chart#draw}.\n   * @returns {mixed} Data to be used in drawing the chart's layers and\n   *                  attachments.\n   */\n  demux(name, data) { return data; }\n\n  /**\n   * A \"hook\" method that will allow you to run some arbitrary code before\n   * {@link Chart#draw}. This will run every time {@link Chart#draw} is called.\n   *\n   * Note: you will most likely never call this method directly, but rather\n   * include it as part of a chart definition, and then rely on koto to\n   * invoke it when you draw the chart with {@link Chart#draw}.\n   *\n   * Note 2: a `postDraw` event is also fired when appropriate;\n   *\n   * @param  {[type]} data [description]\n   * @return {[type]}      [description]\n   */\n  preDraw() {}\n\n  /**\n   * A \"hook\" method that will allow you to run some arbitrary code after\n   * {@link Chart#draw}. This will run every time {@link Chart#draw} is called.\n   *\n   * Note: you will most likely never call this method directly, but rather\n   * include it as part of a chart definition, and then rely on koto to\n   * invoke it when you draw the chart with {@link Chart#draw}.\n   *\n   * @param  {[type]} data [description]\n   */\n  postDraw() {}\n\n  /**\n   * A \"hook\" method that will allow you to run some arbitrary code after\n   * {@link Chart#draw} is called AND after all transitions for all layers\n   * and attached charts have been completed. This will run every time\n   * {@link Chart#draw} is called.\n   *\n   * Note: you will most likely never call this method directly, but rather\n   * include it as part of a chart definition, and then rely on koto to\n   * invoke it when you draw the chart with {@link Chart#draw}.\n   *\n   * Note 2: a `postTransition` event is also fired when appropriate;\n   *\n   * @param  {[type]} data\n   */\n  postTransition() {}\n\n  /**\n   * Remove a layer from the chart.\n   *\n   * @param {String} name The name of the layer to remove.\n   * @returns {Layer} The layer removed by this operation.\n   */\n  unlayer(name) {\n    var layer = this.layer(name);\n\n    this._layers.delete(name);\n    delete layer._chart;\n\n    return layer;\n  }\n\n  /**\n   * Interact with the chart's {@link Layer|layers}.\n   *\n   * If only a `name` is provided, simply return the layer registered to that\n   * name (if any).\n   *\n   * If a `name` and `selection` are provided, treat the `selection` as a\n   * previously-created layer and attach it to the chart with the specified\n   * `name`.\n   *\n   * If all three arguments are specified, initialize a new {@link Layer} using\n   * the specified `selection` as a base passing along the specified `options`.\n   *\n   * The {@link Layer.draw} method of attached layers will be invoked\n   * whenever this chart's {@link Chart#draw} is invoked and will receive the\n   * data (optionally modified by the chart's {@link Chart#transform} method.\n   *\n   * @param {String} name Name of the layer to attach or retrieve.\n   * @param {d3.selection|Layer} [selection] The layer's base or a\n   *        previously-created {@link Layer}.\n   * @param {Object} [options] Options to be forwarded to {@link Layer|the Layer\n   *        constructor}\n   *\n   * @returns {Layer}\n   */\n  layer(name, selection, options) {\n    var _Chart = this;\n    var _layer;\n\n    if (arguments.length === 1) {\n      return this._layers.get(name);\n    }\n\n    // we are reattaching a previous layer, which the\n    // selection argument is now set to.\n    if (arguments.length === 2) {\n\n      if (selection instanceof Layer) {\n        selection._chart = this;\n        this._layers.set(name, selection);\n        return this._layers.get(name);\n\n      } else {\n        kotoAssert(false, 'When reattaching a layer, the second argument must be a koto layer');\n      }\n    }\n\n    selection._chart = this;\n\n    _layer = new Layer(selection, options);\n\n    _layer.remove = function () {\n      _Chart._layers.delete(name);\n      return this;\n    };\n\n    this._layers.set(name, _layer);\n\n    return _layer;\n  }\n\n  /**\n   * Register or retrieve an \"attachment\" Chart. The \"attachment\" chart's `draw`\n   * method will be invoked whenever the containing chart's `draw` method is\n   * invoked.\n   *\n   * @param {String} attachmentName Name of the attachment\n   * @param {Chart} [chart] koto to register as a mix in of this chart. When\n   *        unspecified, this method will return the attachment previously\n   *        registered with the specified `attachmentName` (if any).\n   *\n   * @returns {Chart} Reference to this chart (chainable).\n   */\n  attach(attachmentName, chart) {\n    if (arguments.length === 1) {\n      return this._attached.get(attachmentName);\n    }\n\n    this._attached.set(attachmentName, chart);\n    return chart;\n  }\n\n  /**\n   * Update the chart's representation in the DOM, drawing all of its layers and\n   * any \"attachment\" charts (as attached via {@link Chart#attach}).\n   *\n   * Note: The first time you call this method, the property `hasDrawn` will be\n   * set to true. This is helpful if you want to only run some code on the first\n   * time the chart is drawn.\n   *\n   * @param {Object} data Data to pass to the {@link Layer#draw|draw method} of\n   *        this cart's {@link Layer|layers} (if any) and the {@link\n   *        Chart#draw|draw method} of this chart's attachments (if any).\n   */\n  draw(rawData) {\n    var layer, attachmentData, promises = [];\n\n    return Promise.resolve(this.transform(rawData))\n      .then((data) => {\n        this.preDraw(data);\n        this.trigger('preDraw', data);\n\n        for (layer of this._layers.values()) {\n          layer.draw(data);\n          promises.push(layer.promise);\n        }\n\n        for (var [attachmentName, attachment] of this._attached.entries()) {\n          attachmentData = this.demux ? this.demux(attachmentName, data) : data;\n          attachment.draw(attachmentData);\n          promises.push(attachment.promise);\n        }\n\n        this.hasDrawn = true;\n\n        this.promise = Promise.all(promises);\n\n        this.postDraw();\n        this.trigger('postDraw', data);\n\n        this.promise.then(() => {\n          this.postTransition(data);\n          this.trigger('postTransition', data);\n        });\n\n        return data;\n      });\n  }\n\n  /**\n   * Subscribe a callback function to an event triggered on the chart. See {@link\n   * Chart#once} to subscribe a callback function to an event for one occurrence.\n   *\n   * @externalExample {runnable} chart-on\n   *\n   * @param {String} name Name of the event\n   * @param {ChartEventHandler} callback Function to be invoked when the event\n   *        occurs\n   * @param {Object} [context] Value to set as `this` when invoking the\n   *        `callback`. Defaults to the chart instance.\n   *\n   * @returns {Chart} A reference to this chart (chainable).\n   */\n  on(name, callback, context) {\n    var events;\n    if (this._events.has(name)) {\n      events = this._events.get(name);\n    } else {\n      events = new Set();\n    }\n\n    events.add({\n      callback: callback,\n      context: context || this,\n      _chart: this\n    });\n\n    this._events.set(name, events);\n    return this;\n  }\n\n  /**\n   * Subscribe a callback function to an event triggered on the chart. This\n   * function will be invoked at the next occurrence of the event and immediately\n   * unsubscribed. See {@link Chart#on} to subscribe a callback function to an\n   * event indefinitely.\n   *\n   * @externalExample {runnable} chart-once\n   *\n   * @param {String} name Name of the event\n   * @param {ChartEventHandler} callback Function to be invoked when the event\n   *        occurs\n   * @param {Object} [context] Value to set as `this` when invoking the\n   *        `callback`. Defaults to the chart instance\n   *\n   * @returns {Chart} A reference to this chart (chainable)\n   */\n  once(name, callback, context) {\n    var self = this;\n    var _once = function() {\n      self.off(name, _once);\n      callback.apply(this, arguments);\n    };\n    return this.on(name, _once, context);\n  }\n\n  /**\n   * Unsubscribe one or more callback functions from an event triggered on the\n   * chart. When no arguments are specified, *all* handlers will be unsubscribed.\n   * When only a `name` is specified, all handlers subscribed to that event will\n   * be unsubscribed. When a `name` and `callback` are specified, only that\n   * function will be unsubscribed from that event. When a `name` and `context`\n   * are specified (but `callback` is omitted), all events bound to the given\n   * event with the given context will be unsubscribed.\n   *\n   * @externalExample {runnable} chart-off\n   *\n   * @param {String} [name] Name of the event to be unsubscribed\n   * @param {ChartEventHandler} [callback] Function to be unsubscribed\n   * @param {Object} [context] Contexts to be unsubscribed\n   *\n   * @returns {Chart} A reference to this chart (chainable).\n   */\n  off(name, callback, context) {\n\n    // remove all events\n    if (arguments.length === 0) {\n      this._events.clear();\n      return this;\n    }\n\n    // remove all events for a specific name\n    if (arguments.length === 1) {\n      if (this._events.has(name)) {\n        this._events.get(name).clear();\n      }\n      return this;\n    }\n\n    // remove all events that match whatever combination of name, context\n    // and callback.\n\n    this._events.get(name).forEach((event, clone, map) => {\n      if ((callback && callback === clone.callback) ||\n          (context && context === clone.context)) {\n        map.delete(event);\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * Publish an event on this chart with the given `name`.\n   *\n   * @externalExample {runnable} chart-trigger\n   *\n   * @param {String} name Name of the event to publish\n   * @param {...*} arguments Values with which to invoke the registered\n   *        callbacks.\n   *\n   * @returns {Chart} A reference to this chart (chainable).\n   */\n  trigger(name, ...args) {\n    if (this._events.has(name)) {\n      this._events.get(name).forEach((event) => {\n        event.callback.call(event.context, ...args);\n      });\n    }\n    return this;\n  }\n\n  /**\n   * Cleanly dispose of chart\n   *\n   * @return undefined\n   */\n  destroy() {\n    var node = this.base.node();\n\n    // exposed properties\n    this.configs = {};\n    this.accessors = {};\n    this.promise = null;\n\n    // clear up remaining data\n    this._layers.clear();\n    this._attached.clear();\n    this._events.clear();\n\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  }\n\n  /**\n   * Get and set chart options (or configs)\n   *\n   * @param  {mixed} nameOrObject Name of item getting or setting\n   *                              or an object with key-value pairs.\n   * @param  {mixed} value The value for config item with that name.\n   * @return {mixed} if getting: the value. if setting: the chart instance.\n   */\n  config(nameOrObject, value) {\n    var key;\n    var definition;\n    var _Chart = this;\n\n    function setPercentage () {\n      function calculatePercentage (arr, initialValue) {\n        var min = Math.min.call(null, arr.map(function (name) { return _Chart.config(name); }));\n        return initialValue / min;\n      }\n\n      if (definition.constrain === true) {\n        definition.percentage = calculatePercentage(['width', 'height'], definition.value);\n      } else if (Array.isArray(definition.constrain)) {\n        definition.percentage = calculatePercentage(definition.constrain, definition.value);\n      } else {\n        definition.percentage = calculatePercentage([definition.constrain], definition.value);\n      }\n    }\n\n    if (arguments.length === 0) {\n      return this.configs;\n    }\n\n    if (arguments.length === 1) {\n      if (typeof nameOrObject === 'object') {\n        for (key in nameOrObject) {\n          if(this.configs.hasOwnProperty(key)) {\n            definition = this.configs[key];\n            if (definition.hasOwnProperty('setter')) {\n              definition.value = definition.setter.call(definition, nameOrObject[key]);\n            } else {\n              definition.value = nameOrObject[key];\n            }\n            if (definition.hasOwnProperty('constrain')) {\n              setPercentage();\n            }\n            this.configs[key] = definition;\n          } else {\n            console.warn(`config with name ${nameOrObject} is not defined.`);\n          }\n        }\n        return this;\n      }\n\n      kotoAssert(this.configs.hasOwnProperty(nameOrObject), `${nameOrObject} is not a valid option.`);\n      definition = this.configs[nameOrObject];\n      if (definition.hasOwnProperty('getter')) {\n        return definition.getter.call(definition);\n      }\n      return definition.value;\n    }\n\n    if(arguments.length === 2) {\n      if (this.configs.hasOwnProperty(nameOrObject)) {\n        definition = this.configs[nameOrObject];\n        if (definition.hasOwnProperty('setter')) {\n          definition.value = definition.setter.call(definition, value);\n        } else {\n          definition.value = value;\n        }\n        if (definition.hasOwnProperty('constrain')) {\n          setPercentage();\n        }\n        this.configs[nameOrObject] = definition;\n      } else {\n        console.warn(`config with name ${nameOrObject} is not defined.`);\n      }\n      return this;\n    }\n  }\n\n  /**\n   * This will get or set any of the chart's accessors.\n   *\n   * @param  {String or Object} item If string, it will return the function for that accessor item.\n   *                                 If object, it will update that accessor with set function.\n   * @param  {function} [value] The function to update accessor item with.\n   * @return {object} The chart to preserve chainability.\n   */\n  accessor (item, value) {\n    var key;\n    if (arguments.length === 0) {\n      return this.accessors;\n    }\n\n    if (arguments.length === 1) {\n      if (typeof item === 'string') {\n        kotoAssert(this.accessors.hasOwnProperty(item), `${item} is not a valid accessor.`);\n        return this.accessors[item];\n      } else {\n        for (key in item) {\n          this.accessors[key] = item[key];\n        }\n      }\n    } else {\n      this.accessors[item] = value;\n    }\n    return this;\n  }\n\n  /**\n   * This will extend a chart by passing in an object of initialize function.\n   * @param  {Object || function} init Initialize function of object with initialize method.\n   * @return {Construtor}      Chart constructor\n   */\n  static extend(init) {\n    class chart extends this {\n      constructor(selection) {\n        var key;\n        super(selection);\n\n        if (typeof init === 'function') {\n          init.call(this);\n        } else {\n          for (key in init) {\n            this[key] = init[key];\n          }\n          this.initialize.call(this);\n        }\n\n      }\n    }\n    return chart;\n  }\n\n}\n\n/**\n* Expose the Layer class so that it can be subclassed.\n*/\nChart.Layer = Layer;\n\n// run tests if on test environment\n// if (ON_TEST) {\n//   require('./assert.spec.js')(kotoAssert);\n//   require('./layer.spec.js')(Layer, Chart);\n//   require('./chart.spec.js')(Chart);\n// }\n\nexport default Chart;\n\n\n\n/** WEBPACK FOOTER **\n ** ./chart.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"babel-polyfill\"\n ** module id = 1\n ** module chunks = 0\n **/","// https://d3js.org Version 4.1.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var version = \"4.1.1\";\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  var array = Array.prototype;\n\n  var slice = array.slice;\n  var map = array.map;\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      for (i = 0; i < n; ++i) {\n        values[i] = value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = xz[0],\n          x1 = xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n      // Remove any thresholds outside the domain.\n      var m = tz.length;\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n    };\n\n    return histogram;\n  }\n\n  function threshold(array, p, f) {\n    if (f == null) f = number;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values = map.call(values, number).sort(ascending);\n    return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return threshold(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  var prefix = \"$\";\n\n  function Map() {}\n\n  Map.prototype = map$1.prototype = {\n    constructor: Map,\n    has: function(key) {\n      return (prefix + key) in this;\n    },\n    get: function(key) {\n      return this[prefix + key];\n    },\n    set: function(key, value) {\n      this[prefix + key] = value;\n      return this;\n    },\n    remove: function(key) {\n      var property = prefix + key;\n      return property in this && delete this[property];\n    },\n    clear: function() {\n      for (var property in this) if (property[0] === prefix) delete this[property];\n    },\n    keys: function() {\n      var keys = [];\n      for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n      return keys;\n    },\n    values: function() {\n      var values = [];\n      for (var property in this) if (property[0] === prefix) values.push(this[property]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n      return entries;\n    },\n    size: function() {\n      var size = 0;\n      for (var property in this) if (property[0] === prefix) ++size;\n      return size;\n    },\n    empty: function() {\n      for (var property in this) if (property[0] === prefix) return false;\n      return true;\n    },\n    each: function(f) {\n      for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n    }\n  };\n\n  function map$1(object, f) {\n    var map = new Map;\n\n    // Copy constructor.\n    if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n    // Index array by numeric index or specified key function.\n    else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n\n      if (f == null) while (++i < n) map.set(i, object[i]);\n      else while (++i < n) map.set(f(o = object[i], i, object), o);\n    }\n\n    // Convert object to map.\n    else if (object) for (var key in object) map.set(key, object[key]);\n\n    return map;\n  }\n\n  function nest() {\n    var keys = [],\n        sortKeys = [],\n        sortValues,\n        rollup,\n        nest;\n\n    function apply(array, depth, createResult, setResult) {\n      if (depth >= keys.length) return rollup != null\n          ? rollup(array) : (sortValues != null\n          ? array.sort(sortValues)\n          : array);\n\n      var i = -1,\n          n = array.length,\n          key = keys[depth++],\n          keyValue,\n          value,\n          valuesByKey = map$1(),\n          values,\n          result = createResult();\n\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n          values.push(value);\n        } else {\n          valuesByKey.set(keyValue, [value]);\n        }\n      }\n\n      valuesByKey.each(function(values, key) {\n        setResult(result, key, apply(values, depth, createResult, setResult));\n      });\n\n      return result;\n    }\n\n    function entries(map, depth) {\n      if (++depth > keys.length) return map;\n      var array, sortKey = sortKeys[depth - 1];\n      if (rollup != null && depth >= keys.length) array = map.entries();\n      else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n      return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n    }\n\n    return nest = {\n      object: function(array) { return apply(array, 0, createObject, setObject); },\n      map: function(array) { return apply(array, 0, createMap, setMap); },\n      entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n      key: function(d) { keys.push(d); return nest; },\n      sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n      sortValues: function(order) { sortValues = order; return nest; },\n      rollup: function(f) { rollup = f; return nest; }\n    };\n  }\n\n  function createObject() {\n    return {};\n  }\n\n  function setObject(object, key, value) {\n    object[key] = value;\n  }\n\n  function createMap() {\n    return map$1();\n  }\n\n  function setMap(map, key, value) {\n    map.set(key, value);\n  }\n\n  function Set() {}\n\n  var proto = map$1.prototype;\n\n  Set.prototype = set.prototype = {\n    constructor: Set,\n    has: proto.has,\n    add: function(value) {\n      value += \"\";\n      this[prefix + value] = value;\n      return this;\n    },\n    remove: proto.remove,\n    clear: proto.clear,\n    values: proto.keys,\n    size: proto.size,\n    empty: proto.empty,\n    each: proto.each\n  };\n\n  function set(object, f) {\n    var set = new Set;\n\n    // Copy constructor.\n    if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n    // Otherwise, assume it’s an array.\n    else if (object) {\n      var i = -1, n = object.length;\n      if (f == null) while (++i < n) set.add(object[i]);\n      else while (++i < n) set.add(f(object[i], i, object));\n    }\n\n    return set;\n  }\n\n  function keys(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  }\n\n  function values(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  }\n\n  function entries(map) {\n    var entries = [];\n    for (var key in map) entries.push({key: key, value: map[key]});\n    return entries;\n  }\n\n  function uniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return Math.random() * max + min;\n    };\n  }\n\n  function normal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = Math.random() * 2 - 1;\n        y = Math.random() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  function logNormal() {\n    var randomNormal = normal.apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  function irwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n      return sum;\n    };\n  }\n\n  function bates(n) {\n    var randomIrwinHall = irwinHall(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  function exponential(lambda) {\n    return function() {\n      return -Math.log(1 - Math.random()) / lambda;\n    };\n  }\n\n  function linear(t) {\n    return +t;\n  }\n\n  function quadIn(t) {\n    return t * t;\n  }\n\n  function quadOut(t) {\n    return t * (2 - t);\n  }\n\n  function quadInOut(t) {\n    return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n  }\n\n  function cubicIn(t) {\n    return t * t * t;\n  }\n\n  function cubicOut(t) {\n    return --t * t * t + 1;\n  }\n\n  function easeCubicInOut(t) {\n    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n  }\n\n  var exponent = 3;\n\n  var polyIn = (function custom(e) {\n    e = +e;\n\n    function polyIn(t) {\n      return Math.pow(t, e);\n    }\n\n    polyIn.exponent = custom;\n\n    return polyIn;\n  })(exponent);\n\n  var polyOut = (function custom(e) {\n    e = +e;\n\n    function polyOut(t) {\n      return 1 - Math.pow(1 - t, e);\n    }\n\n    polyOut.exponent = custom;\n\n    return polyOut;\n  })(exponent);\n\n  var polyInOut = (function custom(e) {\n    e = +e;\n\n    function polyInOut(t) {\n      return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n    }\n\n    polyInOut.exponent = custom;\n\n    return polyInOut;\n  })(exponent);\n\n  var pi = Math.PI;\n  var halfPi = pi / 2;\n  function sinIn(t) {\n    return 1 - Math.cos(t * halfPi);\n  }\n\n  function sinOut(t) {\n    return Math.sin(t * halfPi);\n  }\n\n  function sinInOut(t) {\n    return (1 - Math.cos(pi * t)) / 2;\n  }\n\n  function expIn(t) {\n    return Math.pow(2, 10 * t - 10);\n  }\n\n  function expOut(t) {\n    return 1 - Math.pow(2, -10 * t);\n  }\n\n  function expInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n  }\n\n  function circleIn(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n\n  function circleOut(t) {\n    return Math.sqrt(1 - --t * t);\n  }\n\n  function circleInOut(t) {\n    return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n  }\n\n  var b1 = 4 / 11;\n  var b2 = 6 / 11;\n  var b3 = 8 / 11;\n  var b4 = 3 / 4;\n  var b5 = 9 / 11;\n  var b6 = 10 / 11;\n  var b7 = 15 / 16;\n  var b8 = 21 / 22;\n  var b9 = 63 / 64;\n  var b0 = 1 / b1 / b1;\n  function bounceIn(t) {\n    return 1 - bounceOut(1 - t);\n  }\n\n  function bounceOut(t) {\n    return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n  }\n\n  function bounceInOut(t) {\n    return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n  }\n\n  var overshoot = 1.70158;\n\n  var backIn = (function custom(s) {\n    s = +s;\n\n    function backIn(t) {\n      return t * t * ((s + 1) * t - s);\n    }\n\n    backIn.overshoot = custom;\n\n    return backIn;\n  })(overshoot);\n\n  var backOut = (function custom(s) {\n    s = +s;\n\n    function backOut(t) {\n      return --t * t * ((s + 1) * t + s) + 1;\n    }\n\n    backOut.overshoot = custom;\n\n    return backOut;\n  })(overshoot);\n\n  var backInOut = (function custom(s) {\n    s = +s;\n\n    function backInOut(t) {\n      return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n    }\n\n    backInOut.overshoot = custom;\n\n    return backInOut;\n  })(overshoot);\n\n  var tau = 2 * Math.PI;\n  var amplitude = 1;\n  var period = 0.3;\n  var elasticIn = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticIn(t) {\n      return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n    }\n\n    elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n    elasticIn.period = function(p) { return custom(a, p); };\n\n    return elasticIn;\n  })(amplitude, period);\n\n  var elasticOut = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticOut(t) {\n      return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n    }\n\n    elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n    elasticOut.period = function(p) { return custom(a, p); };\n\n    return elasticOut;\n  })(amplitude, period);\n\n  var elasticInOut = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticInOut(t) {\n      return ((t = t * 2 - 1) < 0\n          ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n          : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n    }\n\n    elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n    elasticInOut.period = function(p) { return custom(a, p); };\n\n    return elasticInOut;\n  })(amplitude, period);\n\n  function area(polygon) {\n    var i = -1,\n        n = polygon.length,\n        a,\n        b = polygon[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = polygon[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n\n    return area / 2;\n  }\n\n  function centroid(polygon) {\n    var i = -1,\n        n = polygon.length,\n        x = 0,\n        y = 0,\n        a,\n        b = polygon[n - 1],\n        c,\n        k = 0;\n\n    while (++i < n) {\n      a = b;\n      b = polygon[i];\n      k += c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n\n    return k *= 3, [x / k, y / k];\n  }\n\n  // Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n  // the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n  // right, +y is up). Returns a positive value if ABC is counter-clockwise,\n  // negative if clockwise, and zero if the points are collinear.\n  function cross(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n\n  function lexicographicOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n\n  // Computes the upper convex hull per the monotone chain algorithm.\n  // Assumes points.length >= 3, is sorted by x, unique in y.\n  // Returns an array of indices into points in left-to-right order.\n  function computeUpperHullIndexes(points) {\n    var n = points.length,\n        indexes = [0, 1],\n        size = 2;\n\n    for (var i = 2; i < n; ++i) {\n      while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n      indexes[size++] = i;\n    }\n\n    return indexes.slice(0, size); // remove popped points\n  }\n\n  function hull(points) {\n    if ((n = points.length) < 3) return null;\n\n    var i,\n        n,\n        sortedPoints = new Array(n),\n        flippedPoints = new Array(n);\n\n    for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n    sortedPoints.sort(lexicographicOrder);\n    for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n    var upperIndexes = computeUpperHullIndexes(sortedPoints),\n        lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n    // Construct the hull polygon, removing possible duplicate endpoints.\n    var skipLeft = lowerIndexes[0] === upperIndexes[0],\n        skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n        hull = [];\n\n    // Add upper hull in right-to-l order.\n    // Then add lower hull in left-to-right order.\n    for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n    for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n    return hull;\n  }\n\n  function contains(polygon, point) {\n    var n = polygon.length,\n        p = polygon[n - 1],\n        x = point[0], y = point[1],\n        x0 = p[0], y0 = p[1],\n        x1, y1,\n        inside = false;\n\n    for (var i = 0; i < n; ++i) {\n      p = polygon[i], x1 = p[0], y1 = p[1];\n      if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n      x0 = x1, y0 = y1;\n    }\n\n    return inside;\n  }\n\n  function length$1(polygon) {\n    var i = -1,\n        n = polygon.length,\n        b = polygon[n - 1],\n        xa,\n        ya,\n        xb = b[0],\n        yb = b[1],\n        perimeter = 0;\n\n    while (++i < n) {\n      xa = xb;\n      ya = yb;\n      b = polygon[i];\n      xb = b[0];\n      yb = b[1];\n      xa -= xb;\n      ya -= yb;\n      perimeter += Math.sqrt(xa * xa + ya * ya);\n    }\n\n    return perimeter;\n  }\n\nvar   pi$1 = Math.PI;\nvar   tau$1 = 2 * pi$1;\n  var epsilon = 1e-6;\n  var tauEpsilon = tau$1 - epsilon;\n  function Path() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = [];\n  }\n\n  function path() {\n    return new Path;\n  }\n\n  Path.prototype = path.prototype = {\n    constructor: Path,\n    moveTo: function(x, y) {\n      this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n    },\n    closePath: function() {\n      if (this._x1 !== null) {\n        this._x1 = this._x0, this._y1 = this._y0;\n        this._.push(\"Z\");\n      }\n    },\n    lineTo: function(x, y) {\n      this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n    },\n    quadraticCurveTo: function(x1, y1, x, y) {\n      this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n    },\n    bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n      this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n    },\n    arcTo: function(x1, y1, x2, y2, r) {\n      x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n      var x0 = this._x1,\n          y0 = this._y1,\n          x21 = x2 - x1,\n          y21 = y2 - y1,\n          x01 = x0 - x1,\n          y01 = y0 - y1,\n          l01_2 = x01 * x01 + y01 * y01;\n\n      // Is the radius negative? Error.\n      if (r < 0) throw new Error(\"negative radius: \" + r);\n\n      // Is this path empty? Move to (x1,y1).\n      if (this._x1 === null) {\n        this._.push(\n          \"M\", this._x1 = x1, \",\", this._y1 = y1\n        );\n      }\n\n      // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n      else if (!(l01_2 > epsilon));\n\n      // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n      // Equivalently, is (x1,y1) coincident with (x2,y2)?\n      // Or, is the radius zero? Line to (x1,y1).\n      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n        this._.push(\n          \"L\", this._x1 = x1, \",\", this._y1 = y1\n        );\n      }\n\n      // Otherwise, draw an arc!\n      else {\n        var x20 = x2 - x0,\n            y20 = y2 - y0,\n            l21_2 = x21 * x21 + y21 * y21,\n            l20_2 = x20 * x20 + y20 * y20,\n            l21 = Math.sqrt(l21_2),\n            l01 = Math.sqrt(l01_2),\n            l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n            t01 = l / l01,\n            t21 = l / l21;\n\n        // If the start tangent is not coincident with (x0,y0), line to.\n        if (Math.abs(t01 - 1) > epsilon) {\n          this._.push(\n            \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n          );\n        }\n\n        this._.push(\n          \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n        );\n      }\n    },\n    arc: function(x, y, r, a0, a1, ccw) {\n      x = +x, y = +y, r = +r;\n      var dx = r * Math.cos(a0),\n          dy = r * Math.sin(a0),\n          x0 = x + dx,\n          y0 = y + dy,\n          cw = 1 ^ ccw,\n          da = ccw ? a0 - a1 : a1 - a0;\n\n      // Is the radius negative? Error.\n      if (r < 0) throw new Error(\"negative radius: \" + r);\n\n      // Is this path empty? Move to (x0,y0).\n      if (this._x1 === null) {\n        this._.push(\n          \"M\", x0, \",\", y0\n        );\n      }\n\n      // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n      else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n        this._.push(\n          \"L\", x0, \",\", y0\n        );\n      }\n\n      // Is this arc empty? We’re done.\n      if (!r) return;\n\n      // Is this a complete circle? Draw two arcs to complete the circle.\n      if (da > tauEpsilon) {\n        this._.push(\n          \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n          \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n        );\n      }\n\n      // Otherwise, draw an arc!\n      else {\n        if (da < 0) da = da % tau$1 + tau$1;\n        this._.push(\n          \"A\", r, \",\", r, \",0,\", +(da >= pi$1), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n        );\n      }\n    },\n    rect: function(x, y, w, h) {\n      this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n    },\n    toString: function() {\n      return this._.join(\"\");\n    }\n  };\n\n  function tree_add(d) {\n    var x = +this._x.call(null, d),\n        y = +this._y.call(null, d);\n    return add(this.cover(x, y), x, y, d);\n  }\n\n  function add(tree, x, y, d) {\n    if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n    var parent,\n        node = tree._root,\n        leaf = {data: d},\n        x0 = tree._x0,\n        y0 = tree._y0,\n        x1 = tree._x1,\n        y1 = tree._y1,\n        xm,\n        ym,\n        xp,\n        yp,\n        right,\n        bottom,\n        i,\n        j;\n\n    // If the tree is empty, initialize the root as a leaf.\n    if (!node) return tree._root = leaf, tree;\n\n    // Find the existing leaf for the new point, or add it.\n    while (node.length) {\n      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n      if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n    }\n\n    // Is the new point is exactly coincident with the existing point?\n    xp = +tree._x.call(null, node.data);\n    yp = +tree._y.call(null, node.data);\n    if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n    // Otherwise, split the leaf node until the old and new point are separated.\n    do {\n      parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n    return parent[j] = node, parent[i] = leaf, tree;\n  }\n\n  function addAll(data) {\n    var d, i, n = data.length,\n        x,\n        y,\n        xz = new Array(n),\n        yz = new Array(n),\n        x0 = Infinity,\n        y0 = Infinity,\n        x1 = -Infinity,\n        y1 = -Infinity;\n\n    // Compute the points and their extent.\n    for (i = 0; i < n; ++i) {\n      if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n      xz[i] = x;\n      yz[i] = y;\n      if (x < x0) x0 = x;\n      if (x > x1) x1 = x;\n      if (y < y0) y0 = y;\n      if (y > y1) y1 = y;\n    }\n\n    // If there were no (valid) points, inherit the existing extent.\n    if (x1 < x0) x0 = this._x0, x1 = this._x1;\n    if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n    // Expand the tree to cover the new points.\n    this.cover(x0, y0).cover(x1, y1);\n\n    // Add the new points.\n    for (i = 0; i < n; ++i) {\n      add(this, xz[i], yz[i], data[i]);\n    }\n\n    return this;\n  }\n\n  function tree_cover(x, y) {\n    if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n    var x0 = this._x0,\n        y0 = this._y0,\n        x1 = this._x1,\n        y1 = this._y1;\n\n    // If the quadtree has no extent, initialize them.\n    // Integer extent are necessary so that if we later double the extent,\n    // the existing quadrant boundaries don’t change due to floating point error!\n    if (isNaN(x0)) {\n      x1 = (x0 = Math.floor(x)) + 1;\n      y1 = (y0 = Math.floor(y)) + 1;\n    }\n\n    // Otherwise, double repeatedly to cover.\n    else if (x0 > x || x > x1 || y0 > y || y > y1) {\n      var z = x1 - x0,\n          node = this._root,\n          parent,\n          i;\n\n      switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n        case 0: {\n          do parent = new Array(4), parent[i] = node, node = parent;\n          while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n          break;\n        }\n        case 1: {\n          do parent = new Array(4), parent[i] = node, node = parent;\n          while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n          break;\n        }\n        case 2: {\n          do parent = new Array(4), parent[i] = node, node = parent;\n          while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n          break;\n        }\n        case 3: {\n          do parent = new Array(4), parent[i] = node, node = parent;\n          while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n          break;\n        }\n      }\n\n      if (this._root && this._root.length) this._root = node;\n    }\n\n    // If the quadtree covers the point already, just return.\n    else return this;\n\n    this._x0 = x0;\n    this._y0 = y0;\n    this._x1 = x1;\n    this._y1 = y1;\n    return this;\n  }\n\n  function tree_data() {\n    var data = [];\n    this.visit(function(node) {\n      if (!node.length) do data.push(node.data); while (node = node.next)\n    });\n    return data;\n  }\n\n  function tree_extent(_) {\n    return arguments.length\n        ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n        : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n  }\n\n  function Quad(node, x0, y0, x1, y1) {\n    this.node = node;\n    this.x0 = x0;\n    this.y0 = y0;\n    this.x1 = x1;\n    this.y1 = y1;\n  }\n\n  function tree_find(x, y, radius) {\n    var data,\n        x0 = this._x0,\n        y0 = this._y0,\n        x1,\n        y1,\n        x2,\n        y2,\n        x3 = this._x1,\n        y3 = this._y1,\n        quads = [],\n        node = this._root,\n        q,\n        i;\n\n    if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n    if (radius == null) radius = Infinity;\n    else {\n      x0 = x - radius, y0 = y - radius;\n      x3 = x + radius, y3 = y + radius;\n      radius *= radius;\n    }\n\n    while (q = quads.pop()) {\n\n      // Stop searching if this quadrant can’t contain a closer node.\n      if (!(node = q.node)\n          || (x1 = q.x0) > x3\n          || (y1 = q.y0) > y3\n          || (x2 = q.x1) < x0\n          || (y2 = q.y1) < y0) continue;\n\n      // Bisect the current quadrant.\n      if (node.length) {\n        var xm = (x1 + x2) / 2,\n            ym = (y1 + y2) / 2;\n\n        quads.push(\n          new Quad(node[3], xm, ym, x2, y2),\n          new Quad(node[2], x1, ym, xm, y2),\n          new Quad(node[1], xm, y1, x2, ym),\n          new Quad(node[0], x1, y1, xm, ym)\n        );\n\n        // Visit the closest quadrant first.\n        if (i = (y >= ym) << 1 | (x >= xm)) {\n          q = quads[quads.length - 1];\n          quads[quads.length - 1] = quads[quads.length - 1 - i];\n          quads[quads.length - 1 - i] = q;\n        }\n      }\n\n      // Visit this point. (Visiting coincident points isn’t necessary!)\n      else {\n        var dx = x - +this._x.call(null, node.data),\n            dy = y - +this._y.call(null, node.data),\n            d2 = dx * dx + dy * dy;\n        if (d2 < radius) {\n          var d = Math.sqrt(radius = d2);\n          x0 = x - d, y0 = y - d;\n          x3 = x + d, y3 = y + d;\n          data = node.data;\n        }\n      }\n    }\n\n    return data;\n  }\n\n  function tree_remove(d) {\n    if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n    var parent,\n        node = this._root,\n        retainer,\n        previous,\n        next,\n        x0 = this._x0,\n        y0 = this._y0,\n        x1 = this._x1,\n        y1 = this._y1,\n        x,\n        y,\n        xm,\n        ym,\n        right,\n        bottom,\n        i,\n        j;\n\n    // If the tree is empty, initialize the root as a leaf.\n    if (!node) return this;\n\n    // Find the leaf node for the point.\n    // While descending, also retain the deepest parent with a non-removed sibling.\n    if (node.length) while (true) {\n      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n      if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n      if (!node.length) break;\n      if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n    }\n\n    // Find the point to remove.\n    while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n    if (next = node.next) delete node.next;\n\n    // If there are multiple coincident points, remove just the point.\n    if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n    // If this is the root point, remove it.\n    if (!parent) return this._root = next, this;\n\n    // Remove this leaf.\n    next ? parent[i] = next : delete parent[i];\n\n    // If the parent now contains exactly one leaf, collapse superfluous parents.\n    if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n        && node === (parent[3] || parent[2] || parent[1] || parent[0])\n        && !node.length) {\n      if (retainer) retainer[j] = node;\n      else this._root = node;\n    }\n\n    return this;\n  }\n\n  function removeAll(data) {\n    for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n    return this;\n  }\n\n  function tree_root() {\n    return this._root;\n  }\n\n  function tree_size() {\n    var size = 0;\n    this.visit(function(node) {\n      if (!node.length) do ++size; while (node = node.next)\n    });\n    return size;\n  }\n\n  function tree_visit(callback) {\n    var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n    if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n    while (q = quads.pop()) {\n      if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n        var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      }\n    }\n    return this;\n  }\n\n  function tree_visitAfter(callback) {\n    var quads = [], next = [], q;\n    if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n    while (q = quads.pop()) {\n      var node = q.node;\n      if (node.length) {\n        var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      }\n      next.push(q);\n    }\n    while (q = next.pop()) {\n      callback(q.node, q.x0, q.y0, q.x1, q.y1);\n    }\n    return this;\n  }\n\n  function defaultX(d) {\n    return d[0];\n  }\n\n  function tree_x(_) {\n    return arguments.length ? (this._x = _, this) : this._x;\n  }\n\n  function defaultY(d) {\n    return d[1];\n  }\n\n  function tree_y(_) {\n    return arguments.length ? (this._y = _, this) : this._y;\n  }\n\n  function quadtree(nodes, x, y) {\n    var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n    return nodes == null ? tree : tree.addAll(nodes);\n  }\n\n  function Quadtree(x, y, x0, y0, x1, y1) {\n    this._x = x;\n    this._y = y;\n    this._x0 = x0;\n    this._y0 = y0;\n    this._x1 = x1;\n    this._y1 = y1;\n    this._root = undefined;\n  }\n\n  function leaf_copy(leaf) {\n    var copy = {data: leaf.data}, next = copy;\n    while (leaf = leaf.next) next = next.next = {data: leaf.data};\n    return copy;\n  }\n\n  var treeProto = quadtree.prototype = Quadtree.prototype;\n\n  treeProto.copy = function() {\n    var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n        node = this._root,\n        nodes,\n        child;\n\n    if (!node) return copy;\n\n    if (!node.length) return copy._root = leaf_copy(node), copy;\n\n    nodes = [{source: node, target: copy._root = new Array(4)}];\n    while (node = nodes.pop()) {\n      for (var i = 0; i < 4; ++i) {\n        if (child = node.source[i]) {\n          if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n          else node.target[i] = leaf_copy(child);\n        }\n      }\n    }\n\n    return copy;\n  };\n\n  treeProto.add = tree_add;\n  treeProto.addAll = addAll;\n  treeProto.cover = tree_cover;\n  treeProto.data = tree_data;\n  treeProto.extent = tree_extent;\n  treeProto.find = tree_find;\n  treeProto.remove = tree_remove;\n  treeProto.removeAll = removeAll;\n  treeProto.root = tree_root;\n  treeProto.size = tree_size;\n  treeProto.visit = tree_visit;\n  treeProto.visitAfter = tree_visitAfter;\n  treeProto.x = tree_x;\n  treeProto.y = tree_y;\n\n  var slice$1 = [].slice;\n\n  var noabort = {};\n\n  function Queue(size) {\n    if (!(size >= 1)) throw new Error;\n    this._size = size;\n    this._call =\n    this._error = null;\n    this._tasks = [];\n    this._data = [];\n    this._waiting =\n    this._active =\n    this._ended =\n    this._start = 0; // inside a synchronous task callback?\n  }\n\n  Queue.prototype = queue.prototype = {\n    constructor: Queue,\n    defer: function(callback) {\n      if (typeof callback !== \"function\" || this._call) throw new Error;\n      if (this._error != null) return this;\n      var t = slice$1.call(arguments, 1);\n      t.push(callback);\n      ++this._waiting, this._tasks.push(t);\n      poke(this);\n      return this;\n    },\n    abort: function() {\n      if (this._error == null) abort(this, new Error(\"abort\"));\n      return this;\n    },\n    await: function(callback) {\n      if (typeof callback !== \"function\" || this._call) throw new Error;\n      this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n      maybeNotify(this);\n      return this;\n    },\n    awaitAll: function(callback) {\n      if (typeof callback !== \"function\" || this._call) throw new Error;\n      this._call = callback;\n      maybeNotify(this);\n      return this;\n    }\n  };\n\n  function poke(q) {\n    if (!q._start) try { start(q); } // let the current task complete\n    catch (e) { if (q._tasks[q._ended + q._active - 1]) abort(q, e); } // task errored synchronously\n  }\n\n  function start(q) {\n    while (q._start = q._waiting && q._active < q._size) {\n      var i = q._ended + q._active,\n          t = q._tasks[i],\n          j = t.length - 1,\n          c = t[j];\n      t[j] = end(q, i);\n      --q._waiting, ++q._active;\n      t = c.apply(null, t);\n      if (!q._tasks[i]) continue; // task finished synchronously\n      q._tasks[i] = t || noabort;\n    }\n  }\n\n  function end(q, i) {\n    return function(e, r) {\n      if (!q._tasks[i]) return; // ignore multiple callbacks\n      --q._active, ++q._ended;\n      q._tasks[i] = null;\n      if (q._error != null) return; // ignore secondary errors\n      if (e != null) {\n        abort(q, e);\n      } else {\n        q._data[i] = r;\n        if (q._waiting) poke(q);\n        else maybeNotify(q);\n      }\n    };\n  }\n\n  function abort(q, e) {\n    var i = q._tasks.length, t;\n    q._error = e; // ignore active callbacks\n    q._data = undefined; // allow gc\n    q._waiting = NaN; // prevent starting\n\n    while (--i >= 0) {\n      if (t = q._tasks[i]) {\n        q._tasks[i] = null;\n        if (t.abort) try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n\n    q._active = NaN; // allow notification\n    maybeNotify(q);\n  }\n\n  function maybeNotify(q) {\n    if (!q._active && q._call) q._call(q._error, q._data);\n  }\n\n  function queue(concurrency) {\n    return new Queue(arguments.length ? +concurrency : Infinity);\n  }\n\n  function constant$1(x) {\n    return function constant() {\n      return x;\n    };\n  }\n\n  var epsilon$1 = 1e-12;\n  var pi$2 = Math.PI;\n  var halfPi$1 = pi$2 / 2;\n  var tau$2 = 2 * pi$2;\n\n  function arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n\n  function arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n\n  function arcStartAngle(d) {\n    return d.startAngle;\n  }\n\n  function arcEndAngle(d) {\n    return d.endAngle;\n  }\n\n  function arcPadAngle(d) {\n    return d && d.padAngle; // Note: optional!\n  }\n\n  function asin(x) {\n    return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n  }\n\n  function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var x10 = x1 - x0, y10 = y1 - y0,\n        x32 = x3 - x2, y32 = y3 - y2,\n        t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n    return [x0 + t * x10, y0 + t * y10];\n  }\n\n  // Compute perpendicular offset line of length rc.\n  // http://mathworld.wolfram.com/Circle-LineIntersection.html\n  function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n    var x01 = x0 - x1,\n        y01 = y0 - y1,\n        lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n        ox = lo * y01,\n        oy = -lo * x01,\n        x11 = x0 + ox,\n        y11 = y0 + oy,\n        x10 = x1 + ox,\n        y10 = y1 + oy,\n        x00 = (x11 + x10) / 2,\n        y00 = (y11 + y10) / 2,\n        dx = x10 - x11,\n        dy = y10 - y11,\n        d2 = dx * dx + dy * dy,\n        r = r1 - rc,\n        D = x11 * y10 - x10 * y11,\n        d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n        cx0 = (D * dy - dx * d) / d2,\n        cy0 = (-D * dx - dy * d) / d2,\n        cx1 = (D * dy + dx * d) / d2,\n        cy1 = (-D * dx + dy * d) / d2,\n        dx0 = cx0 - x00,\n        dy0 = cy0 - y00,\n        dx1 = cx1 - x00,\n        dy1 = cy1 - y00;\n\n    // Pick the closer of the two intersection points.\n    // TODO Is there a faster way to determine which intersection to use?\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n    return {\n      cx: cx0,\n      cy: cy0,\n      x01: -ox,\n      y01: -oy,\n      x11: cx0 * (r1 / r - 1),\n      y11: cy0 * (r1 / r - 1)\n    };\n  }\n\n  function arc() {\n    var innerRadius = arcInnerRadius,\n        outerRadius = arcOuterRadius,\n        cornerRadius = constant$1(0),\n        padRadius = null,\n        startAngle = arcStartAngle,\n        endAngle = arcEndAngle,\n        padAngle = arcPadAngle,\n        context = null;\n\n    function arc() {\n      var buffer,\n          r,\n          r0 = +innerRadius.apply(this, arguments),\n          r1 = +outerRadius.apply(this, arguments),\n          a0 = startAngle.apply(this, arguments) - halfPi$1,\n          a1 = endAngle.apply(this, arguments) - halfPi$1,\n          da = Math.abs(a1 - a0),\n          cw = a1 > a0;\n\n      if (!context) context = buffer = path();\n\n      // Ensure that the outer radius is always larger than the inner radius.\n      if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n      // Is it a point?\n      if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\n      // Or is it a circle or annulus?\n      else if (da > tau$2 - epsilon$1) {\n        context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n        context.arc(0, 0, r1, a0, a1, !cw);\n        if (r0 > epsilon$1) {\n          context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n          context.arc(0, 0, r0, a1, a0, cw);\n        }\n      }\n\n      // Or is it a circular or annular sector?\n      else {\n        var a01 = a0,\n            a11 = a1,\n            a00 = a0,\n            a10 = a1,\n            da0 = da,\n            da1 = da,\n            ap = padAngle.apply(this, arguments) / 2,\n            rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n            rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n            rc0 = rc,\n            rc1 = rc,\n            t0,\n            t1;\n\n        // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n        if (rp > epsilon$1) {\n          var p0 = asin(rp / r0 * Math.sin(ap)),\n              p1 = asin(rp / r1 * Math.sin(ap));\n          if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n          else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n          if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n          else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n        }\n\n        var x01 = r1 * Math.cos(a01),\n            y01 = r1 * Math.sin(a01),\n            x10 = r0 * Math.cos(a10),\n            y10 = r0 * Math.sin(a10);\n\n        // Apply rounded corners?\n        if (rc > epsilon$1) {\n          var x11 = r1 * Math.cos(a11),\n              y11 = r1 * Math.sin(a11),\n              x00 = r0 * Math.cos(a00),\n              y00 = r0 * Math.sin(a00);\n\n          // Restrict the corner radius according to the sector angle.\n          if (da < pi$2) {\n            var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n                ax = x01 - oc[0],\n                ay = y01 - oc[1],\n                bx = x11 - oc[0],\n                by = y11 - oc[1],\n                kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n                lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n            rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n            rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n          }\n        }\n\n        // Is the sector collapsed to a line?\n        if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\n        // Does the sector’s outer ring have rounded corners?\n        else if (rc1 > epsilon$1) {\n          t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n          t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n          context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n          // Have the corners merged?\n          if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n          // Otherwise, draw the two corners and the ring.\n          else {\n            context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n            context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n            context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n          }\n        }\n\n        // Or is the outer ring just a circular arc?\n        else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n        // Is there no inner ring, and it’s a circular sector?\n        // Or perhaps it’s an annular sector collapsed due to padding?\n        if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\n        // Does the sector’s inner ring (or point) have rounded corners?\n        else if (rc0 > epsilon$1) {\n          t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n          t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n          context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n          // Have the corners merged?\n          if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n          // Otherwise, draw the two corners and the ring.\n          else {\n            context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n            context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n            context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n          }\n        }\n\n        // Or is the inner ring just a circular arc?\n        else context.arc(0, 0, r0, a10, a00, cw);\n      }\n\n      context.closePath();\n\n      if (buffer) return context = null, buffer + \"\" || null;\n    }\n\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n          a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n      return [Math.cos(a) * r, Math.sin(a) * r];\n    };\n\n    arc.innerRadius = function(_) {\n      return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$1(+_), arc) : innerRadius;\n    };\n\n    arc.outerRadius = function(_) {\n      return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$1(+_), arc) : outerRadius;\n    };\n\n    arc.cornerRadius = function(_) {\n      return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$1(+_), arc) : cornerRadius;\n    };\n\n    arc.padRadius = function(_) {\n      return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$1(+_), arc) : padRadius;\n    };\n\n    arc.startAngle = function(_) {\n      return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$1(+_), arc) : startAngle;\n    };\n\n    arc.endAngle = function(_) {\n      return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$1(+_), arc) : endAngle;\n    };\n\n    arc.padAngle = function(_) {\n      return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$1(+_), arc) : padAngle;\n    };\n\n    arc.context = function(_) {\n      return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n    };\n\n    return arc;\n  }\n\n  function Linear(context) {\n    this._context = context;\n  }\n\n  Linear.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; // proceed\n        default: this._context.lineTo(x, y); break;\n      }\n    }\n  };\n\n  function curveLinear(context) {\n    return new Linear(context);\n  }\n\n  function x(p) {\n    return p[0];\n  }\n\n  function y(p) {\n    return p[1];\n  }\n\n  function line() {\n    var x$$ = x,\n        y$$ = y,\n        defined = constant$1(true),\n        context = null,\n        curve = curveLinear,\n        output = null;\n\n    function line(data) {\n      var i,\n          n = data.length,\n          d,\n          defined0 = false,\n          buffer;\n\n      if (context == null) output = curve(buffer = path());\n\n      for (i = 0; i <= n; ++i) {\n        if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n          if (defined0 = !defined0) output.lineStart();\n          else output.lineEnd();\n        }\n        if (defined0) output.point(+x$$(d, i, data), +y$$(d, i, data));\n      }\n\n      if (buffer) return output = null, buffer + \"\" || null;\n    }\n\n    line.x = function(_) {\n      return arguments.length ? (x$$ = typeof _ === \"function\" ? _ : constant$1(+_), line) : x$$;\n    };\n\n    line.y = function(_) {\n      return arguments.length ? (y$$ = typeof _ === \"function\" ? _ : constant$1(+_), line) : y$$;\n    };\n\n    line.defined = function(_) {\n      return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$1(!!_), line) : defined;\n    };\n\n    line.curve = function(_) {\n      return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n    };\n\n    line.context = function(_) {\n      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n    };\n\n    return line;\n  }\n\n  function area$1() {\n    var x0 = x,\n        x1 = null,\n        y0 = constant$1(0),\n        y1 = y,\n        defined = constant$1(true),\n        context = null,\n        curve = curveLinear,\n        output = null;\n\n    function area(data) {\n      var i,\n          j,\n          k,\n          n = data.length,\n          d,\n          defined0 = false,\n          buffer,\n          x0z = new Array(n),\n          y0z = new Array(n);\n\n      if (context == null) output = curve(buffer = path());\n\n      for (i = 0; i <= n; ++i) {\n        if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n          if (defined0 = !defined0) {\n            j = i;\n            output.areaStart();\n            output.lineStart();\n          } else {\n            output.lineEnd();\n            output.lineStart();\n            for (k = i - 1; k >= j; --k) {\n              output.point(x0z[k], y0z[k]);\n            }\n            output.lineEnd();\n            output.areaEnd();\n          }\n        }\n        if (defined0) {\n          x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n          output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n        }\n      }\n\n      if (buffer) return output = null, buffer + \"\" || null;\n    }\n\n    function arealine() {\n      return line().defined(defined).curve(curve).context(context);\n    }\n\n    area.x = function(_) {\n      return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$1(+_), x1 = null, area) : x0;\n    };\n\n    area.x0 = function(_) {\n      return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$1(+_), area) : x0;\n    };\n\n    area.x1 = function(_) {\n      return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$1(+_), area) : x1;\n    };\n\n    area.y = function(_) {\n      return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$1(+_), y1 = null, area) : y0;\n    };\n\n    area.y0 = function(_) {\n      return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$1(+_), area) : y0;\n    };\n\n    area.y1 = function(_) {\n      return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$1(+_), area) : y1;\n    };\n\n    area.lineX0 =\n    area.lineY0 = function() {\n      return arealine().x(x0).y(y0);\n    };\n\n    area.lineY1 = function() {\n      return arealine().x(x0).y(y1);\n    };\n\n    area.lineX1 = function() {\n      return arealine().x(x1).y(y0);\n    };\n\n    area.defined = function(_) {\n      return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$1(!!_), area) : defined;\n    };\n\n    area.curve = function(_) {\n      return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n    };\n\n    area.context = function(_) {\n      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n    };\n\n    return area;\n  }\n\n  function descending$1(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function identity$1(d) {\n    return d;\n  }\n\n  function pie() {\n    var value = identity$1,\n        sortValues = descending$1,\n        sort = null,\n        startAngle = constant$1(0),\n        endAngle = constant$1(tau$2),\n        padAngle = constant$1(0);\n\n    function pie(data) {\n      var i,\n          n = data.length,\n          j,\n          k,\n          sum = 0,\n          index = new Array(n),\n          arcs = new Array(n),\n          a0 = +startAngle.apply(this, arguments),\n          da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n          a1,\n          p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n          pa = p * (da < 0 ? -1 : 1),\n          v;\n\n      for (i = 0; i < n; ++i) {\n        if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n          sum += v;\n        }\n      }\n\n      // Optionally sort the arcs by previously-computed values or by data.\n      if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n      else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n      // Compute the arcs! They are stored in the original data's order.\n      for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n        j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n          data: data[j],\n          index: i,\n          value: v,\n          startAngle: a0,\n          endAngle: a1,\n          padAngle: p\n        };\n      }\n\n      return arcs;\n    }\n\n    pie.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(+_), pie) : value;\n    };\n\n    pie.sortValues = function(_) {\n      return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n    };\n\n    pie.sort = function(_) {\n      return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n    };\n\n    pie.startAngle = function(_) {\n      return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$1(+_), pie) : startAngle;\n    };\n\n    pie.endAngle = function(_) {\n      return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$1(+_), pie) : endAngle;\n    };\n\n    pie.padAngle = function(_) {\n      return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$1(+_), pie) : padAngle;\n    };\n\n    return pie;\n  }\n\n  var curveRadialLinear = curveRadial(curveLinear);\n\n  function Radial(curve) {\n    this._curve = curve;\n  }\n\n  Radial.prototype = {\n    areaStart: function() {\n      this._curve.areaStart();\n    },\n    areaEnd: function() {\n      this._curve.areaEnd();\n    },\n    lineStart: function() {\n      this._curve.lineStart();\n    },\n    lineEnd: function() {\n      this._curve.lineEnd();\n    },\n    point: function(a, r) {\n      this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n    }\n  };\n\n  function curveRadial(curve) {\n\n    function radial(context) {\n      return new Radial(curve(context));\n    }\n\n    radial._curve = curve;\n\n    return radial;\n  }\n\n  function radialLine(l) {\n    var c = l.curve;\n\n    l.angle = l.x, delete l.x;\n    l.radius = l.y, delete l.y;\n\n    l.curve = function(_) {\n      return arguments.length ? c(curveRadial(_)) : c()._curve;\n    };\n\n    return l;\n  }\n\n  function radialLine$1() {\n    return radialLine(line().curve(curveRadialLinear));\n  }\n\n  function radialArea() {\n    var a = area$1().curve(curveRadialLinear),\n        c = a.curve,\n        x0 = a.lineX0,\n        x1 = a.lineX1,\n        y0 = a.lineY0,\n        y1 = a.lineY1;\n\n    a.angle = a.x, delete a.x;\n    a.startAngle = a.x0, delete a.x0;\n    a.endAngle = a.x1, delete a.x1;\n    a.radius = a.y, delete a.y;\n    a.innerRadius = a.y0, delete a.y0;\n    a.outerRadius = a.y1, delete a.y1;\n    a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n    a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n    a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n    a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n    a.curve = function(_) {\n      return arguments.length ? c(curveRadial(_)) : c()._curve;\n    };\n\n    return a;\n  }\n\n  var circle = {\n    draw: function(context, size) {\n      var r = Math.sqrt(size / pi$2);\n      context.moveTo(r, 0);\n      context.arc(0, 0, r, 0, tau$2);\n    }\n  };\n\n  var cross$1 = {\n    draw: function(context, size) {\n      var r = Math.sqrt(size / 5) / 2;\n      context.moveTo(-3 * r, -r);\n      context.lineTo(-r, -r);\n      context.lineTo(-r, -3 * r);\n      context.lineTo(r, -3 * r);\n      context.lineTo(r, -r);\n      context.lineTo(3 * r, -r);\n      context.lineTo(3 * r, r);\n      context.lineTo(r, r);\n      context.lineTo(r, 3 * r);\n      context.lineTo(-r, 3 * r);\n      context.lineTo(-r, r);\n      context.lineTo(-3 * r, r);\n      context.closePath();\n    }\n  };\n\n  var tan30 = Math.sqrt(1 / 3);\n  var tan30_2 = tan30 * 2;\n  var diamond = {\n    draw: function(context, size) {\n      var y = Math.sqrt(size / tan30_2),\n          x = y * tan30;\n      context.moveTo(0, -y);\n      context.lineTo(x, 0);\n      context.lineTo(0, y);\n      context.lineTo(-x, 0);\n      context.closePath();\n    }\n  };\n\n  var ka = 0.89081309152928522810;\n  var kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\n  var kx = Math.sin(tau$2 / 10) * kr;\n  var ky = -Math.cos(tau$2 / 10) * kr;\n  var star = {\n    draw: function(context, size) {\n      var r = Math.sqrt(size * ka),\n          x = kx * r,\n          y = ky * r;\n      context.moveTo(0, -r);\n      context.lineTo(x, y);\n      for (var i = 1; i < 5; ++i) {\n        var a = tau$2 * i / 5,\n            c = Math.cos(a),\n            s = Math.sin(a);\n        context.lineTo(s * r, -c * r);\n        context.lineTo(c * x - s * y, s * x + c * y);\n      }\n      context.closePath();\n    }\n  };\n\n  var square = {\n    draw: function(context, size) {\n      var w = Math.sqrt(size),\n          x = -w / 2;\n      context.rect(x, x, w, w);\n    }\n  };\n\n  var sqrt3 = Math.sqrt(3);\n\n  var triangle = {\n    draw: function(context, size) {\n      var y = -Math.sqrt(size / (sqrt3 * 3));\n      context.moveTo(0, y * 2);\n      context.lineTo(-sqrt3 * y, -y);\n      context.lineTo(sqrt3 * y, -y);\n      context.closePath();\n    }\n  };\n\n  var c = -0.5;\n  var s = Math.sqrt(3) / 2;\n  var k = 1 / Math.sqrt(12);\n  var a = (k / 2 + 1) * 3;\n  var wye = {\n    draw: function(context, size) {\n      var r = Math.sqrt(size / a),\n          x0 = r / 2,\n          y0 = r * k,\n          x1 = x0,\n          y1 = r * k + r,\n          x2 = -x1,\n          y2 = y1;\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n      context.lineTo(x2, y2);\n      context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n      context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n      context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n      context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n      context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n      context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n      context.closePath();\n    }\n  };\n\n  var symbols = [\n    circle,\n    cross$1,\n    diamond,\n    square,\n    star,\n    triangle,\n    wye\n  ];\n\n  function symbol() {\n    var type = constant$1(circle),\n        size = constant$1(64),\n        context = null;\n\n    function symbol() {\n      var buffer;\n      if (!context) context = buffer = path();\n      type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n      if (buffer) return context = null, buffer + \"\" || null;\n    }\n\n    symbol.type = function(_) {\n      return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$1(_), symbol) : type;\n    };\n\n    symbol.size = function(_) {\n      return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$1(+_), symbol) : size;\n    };\n\n    symbol.context = function(_) {\n      return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n    };\n\n    return symbol;\n  }\n\n  function noop() {}\n\n  function point(that, x, y) {\n    that._context.bezierCurveTo(\n      (2 * that._x0 + that._x1) / 3,\n      (2 * that._y0 + that._y1) / 3,\n      (that._x0 + 2 * that._x1) / 3,\n      (that._y0 + 2 * that._y1) / 3,\n      (that._x0 + 4 * that._x1 + x) / 6,\n      (that._y0 + 4 * that._y1 + y) / 6\n    );\n  }\n\n  function Basis(context) {\n    this._context = context;\n  }\n\n  Basis.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 =\n      this._y0 = this._y1 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 3: point(this, this._x1, this._y1); // proceed\n        case 2: this._context.lineTo(this._x1, this._y1); break;\n      }\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n        default: point(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n    }\n  };\n\n  function basis(context) {\n    return new Basis(context);\n  }\n\n  function BasisClosed(context) {\n    this._context = context;\n  }\n\n  BasisClosed.prototype = {\n    areaStart: noop,\n    areaEnd: noop,\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 1: {\n          this._context.moveTo(this._x2, this._y2);\n          this._context.closePath();\n          break;\n        }\n        case 2: {\n          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n          this._context.closePath();\n          break;\n        }\n        case 3: {\n          this.point(this._x2, this._y2);\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          break;\n        }\n      }\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n        case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n        case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n        default: point(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n    }\n  };\n\n  function basisClosed(context) {\n    return new BasisClosed(context);\n  }\n\n  function BasisOpen(context) {\n    this._context = context;\n  }\n\n  BasisOpen.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 =\n      this._y0 = this._y1 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n        case 3: this._point = 4; // proceed\n        default: point(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n    }\n  };\n\n  function basisOpen(context) {\n    return new BasisOpen(context);\n  }\n\n  function Bundle(context, beta) {\n    this._basis = new Basis(context);\n    this._beta = beta;\n  }\n\n  Bundle.prototype = {\n    lineStart: function() {\n      this._x = [];\n      this._y = [];\n      this._basis.lineStart();\n    },\n    lineEnd: function() {\n      var x = this._x,\n          y = this._y,\n          j = x.length - 1;\n\n      if (j > 0) {\n        var x0 = x[0],\n            y0 = y[0],\n            dx = x[j] - x0,\n            dy = y[j] - y0,\n            i = -1,\n            t;\n\n        while (++i <= j) {\n          t = i / j;\n          this._basis.point(\n            this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n            this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n          );\n        }\n      }\n\n      this._x = this._y = null;\n      this._basis.lineEnd();\n    },\n    point: function(x, y) {\n      this._x.push(+x);\n      this._y.push(+y);\n    }\n  };\n\n  var bundle = (function custom(beta) {\n\n    function bundle(context) {\n      return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n    }\n\n    bundle.beta = function(beta) {\n      return custom(+beta);\n    };\n\n    return bundle;\n  })(0.85);\n\n  function point$1(that, x, y) {\n    that._context.bezierCurveTo(\n      that._x1 + that._k * (that._x2 - that._x0),\n      that._y1 + that._k * (that._y2 - that._y0),\n      that._x2 + that._k * (that._x1 - x),\n      that._y2 + that._k * (that._y1 - y),\n      that._x2,\n      that._y2\n    );\n  }\n\n  function Cardinal(context, tension) {\n    this._context = context;\n    this._k = (1 - tension) / 6;\n  }\n\n  Cardinal.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 =\n      this._y0 = this._y1 = this._y2 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 2: this._context.lineTo(this._x2, this._y2); break;\n        case 3: point$1(this, this._x1, this._y1); break;\n      }\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n        case 2: this._point = 3; // proceed\n        default: point$1(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var cardinal = (function custom(tension) {\n\n    function cardinal(context) {\n      return new Cardinal(context, tension);\n    }\n\n    cardinal.tension = function(tension) {\n      return custom(+tension);\n    };\n\n    return cardinal;\n  })(0);\n\n  function CardinalClosed(context, tension) {\n    this._context = context;\n    this._k = (1 - tension) / 6;\n  }\n\n  CardinalClosed.prototype = {\n    areaStart: noop,\n    areaEnd: noop,\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 1: {\n          this._context.moveTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n        case 2: {\n          this._context.lineTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n        case 3: {\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          this.point(this._x5, this._y5);\n          break;\n        }\n      }\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n        case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n        case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n        default: point$1(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var cardinalClosed = (function custom(tension) {\n\n    function cardinal(context) {\n      return new CardinalClosed(context, tension);\n    }\n\n    cardinal.tension = function(tension) {\n      return custom(+tension);\n    };\n\n    return cardinal;\n  })(0);\n\n  function CardinalOpen(context, tension) {\n    this._context = context;\n    this._k = (1 - tension) / 6;\n  }\n\n  CardinalOpen.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 =\n      this._y0 = this._y1 = this._y2 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n        case 3: this._point = 4; // proceed\n        default: point$1(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var cardinalOpen = (function custom(tension) {\n\n    function cardinal(context) {\n      return new CardinalOpen(context, tension);\n    }\n\n    cardinal.tension = function(tension) {\n      return custom(+tension);\n    };\n\n    return cardinal;\n  })(0);\n\n  function point$2(that, x, y) {\n    var x1 = that._x1,\n        y1 = that._y1,\n        x2 = that._x2,\n        y2 = that._y2;\n\n    if (that._l01_a > epsilon$1) {\n      var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n          n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n      x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n      y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n    }\n\n    if (that._l23_a > epsilon$1) {\n      var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n          m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n      x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n      y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n    }\n\n    that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n  }\n\n  function CatmullRom(context, alpha) {\n    this._context = context;\n    this._alpha = alpha;\n  }\n\n  CatmullRom.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 =\n      this._y0 = this._y1 = this._y2 = NaN;\n      this._l01_a = this._l12_a = this._l23_a =\n      this._l01_2a = this._l12_2a = this._l23_2a =\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 2: this._context.lineTo(this._x2, this._y2); break;\n        case 3: this.point(this, this._x2, this._y2); break;\n      }\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n\n      if (this._point) {\n        var x23 = this._x2 - x,\n            y23 = this._y2 - y;\n        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n      }\n\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; // proceed\n        default: point$2(this, x, y); break;\n      }\n\n      this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var catmullRom = (function custom(alpha) {\n\n    function catmullRom(context) {\n      return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n    }\n\n    catmullRom.alpha = function(alpha) {\n      return custom(+alpha);\n    };\n\n    return catmullRom;\n  })(0.5);\n\n  function CatmullRomClosed(context, alpha) {\n    this._context = context;\n    this._alpha = alpha;\n  }\n\n  CatmullRomClosed.prototype = {\n    areaStart: noop,\n    areaEnd: noop,\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n      this._l01_a = this._l12_a = this._l23_a =\n      this._l01_2a = this._l12_2a = this._l23_2a =\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 1: {\n          this._context.moveTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n        case 2: {\n          this._context.lineTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n        case 3: {\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          this.point(this._x5, this._y5);\n          break;\n        }\n      }\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n\n      if (this._point) {\n        var x23 = this._x2 - x,\n            y23 = this._y2 - y;\n        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n      }\n\n      switch (this._point) {\n        case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n        case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n        case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n        default: point$2(this, x, y); break;\n      }\n\n      this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var catmullRomClosed = (function custom(alpha) {\n\n    function catmullRom(context) {\n      return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n    }\n\n    catmullRom.alpha = function(alpha) {\n      return custom(+alpha);\n    };\n\n    return catmullRom;\n  })(0.5);\n\n  function CatmullRomOpen(context, alpha) {\n    this._context = context;\n    this._alpha = alpha;\n  }\n\n  CatmullRomOpen.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 =\n      this._y0 = this._y1 = this._y2 = NaN;\n      this._l01_a = this._l12_a = this._l23_a =\n      this._l01_2a = this._l12_2a = this._l23_2a =\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n\n      if (this._point) {\n        var x23 = this._x2 - x,\n            y23 = this._y2 - y;\n        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n      }\n\n      switch (this._point) {\n        case 0: this._point = 1; break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n        case 3: this._point = 4; // proceed\n        default: point$2(this, x, y); break;\n      }\n\n      this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var catmullRomOpen = (function custom(alpha) {\n\n    function catmullRom(context) {\n      return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n    }\n\n    catmullRom.alpha = function(alpha) {\n      return custom(+alpha);\n    };\n\n    return catmullRom;\n  })(0.5);\n\n  function LinearClosed(context) {\n    this._context = context;\n  }\n\n  LinearClosed.prototype = {\n    areaStart: noop,\n    areaEnd: noop,\n    lineStart: function() {\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (this._point) this._context.closePath();\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      if (this._point) this._context.lineTo(x, y);\n      else this._point = 1, this._context.moveTo(x, y);\n    }\n  };\n\n  function linearClosed(context) {\n    return new LinearClosed(context);\n  }\n\n  function sign(x) {\n    return x < 0 ? -1 : 1;\n  }\n\n  // Calculate the slopes of the tangents (Hermite-type interpolation) based on\n  // the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n  // Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n  // NOV(II), P. 443, 1990.\n  function slope3(that, x2, y2) {\n    var h0 = that._x1 - that._x0,\n        h1 = x2 - that._x1,\n        s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n        s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n        p = (s0 * h1 + s1 * h0) / (h0 + h1);\n    return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n  }\n\n  // Calculate a one-sided slope.\n  function slope2(that, t) {\n    var h = that._x1 - that._x0;\n    return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n  }\n\n  // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n  // \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n  // with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n  function point$3(that, t0, t1) {\n    var x0 = that._x0,\n        y0 = that._y0,\n        x1 = that._x1,\n        y1 = that._y1,\n        dx = (x1 - x0) / 3;\n    that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n  }\n\n  function MonotoneX(context) {\n    this._context = context;\n  }\n\n  MonotoneX.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 =\n      this._y0 = this._y1 =\n      this._t0 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 2: this._context.lineTo(this._x1, this._y1); break;\n        case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n      }\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      var t1 = NaN;\n\n      x = +x, y = +y;\n      if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n        default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n      }\n\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n      this._t0 = t1;\n    }\n  }\n\n  function MonotoneY(context) {\n    this._context = new ReflectContext(context);\n  }\n\n  (MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n    MonotoneX.prototype.point.call(this, y, x);\n  };\n\n  function ReflectContext(context) {\n    this._context = context;\n  }\n\n  ReflectContext.prototype = {\n    moveTo: function(x, y) { this._context.moveTo(y, x); },\n    closePath: function() { this._context.closePath(); },\n    lineTo: function(x, y) { this._context.lineTo(y, x); },\n    bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n  };\n\n  function monotoneX(context) {\n    return new MonotoneX(context);\n  }\n\n  function monotoneY(context) {\n    return new MonotoneY(context);\n  }\n\n  function Natural(context) {\n    this._context = context;\n  }\n\n  Natural.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x = [];\n      this._y = [];\n    },\n    lineEnd: function() {\n      var x = this._x,\n          y = this._y,\n          n = x.length;\n\n      if (n) {\n        this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n        if (n === 2) {\n          this._context.lineTo(x[1], y[1]);\n        } else {\n          var px = controlPoints(x),\n              py = controlPoints(y);\n          for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n            this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n          }\n        }\n      }\n\n      if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n      this._x = this._y = null;\n    },\n    point: function(x, y) {\n      this._x.push(+x);\n      this._y.push(+y);\n    }\n  };\n\n  // See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n  function controlPoints(x) {\n    var i,\n        n = x.length - 1,\n        m,\n        a = new Array(n),\n        b = new Array(n),\n        r = new Array(n);\n    a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n    for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n    a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n    for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n    a[n - 1] = r[n - 1] / b[n - 1];\n    for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n    b[n - 1] = (x[n] + a[n - 1]) / 2;\n    for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n    return [a, b];\n  }\n\n  function natural(context) {\n    return new Natural(context);\n  }\n\n  function Step(context, t) {\n    this._context = context;\n    this._t = t;\n  }\n\n  Step.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x = this._y = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; // proceed\n        default: {\n          if (this._t <= 0) {\n            this._context.lineTo(this._x, y);\n            this._context.lineTo(x, y);\n          } else {\n            var x1 = this._x * (1 - this._t) + x * this._t;\n            this._context.lineTo(x1, this._y);\n            this._context.lineTo(x1, y);\n          }\n          break;\n        }\n      }\n      this._x = x, this._y = y;\n    }\n  };\n\n  function step(context) {\n    return new Step(context, 0.5);\n  }\n\n  function stepBefore(context) {\n    return new Step(context, 0);\n  }\n\n  function stepAfter(context) {\n    return new Step(context, 1);\n  }\n\n  var slice$2 = Array.prototype.slice;\n\n  function none(series, order) {\n    if (!((n = series.length) > 1)) return;\n    for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n      s0 = s1, s1 = series[order[i]];\n      for (var j = 0; j < m; ++j) {\n        s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n      }\n    }\n  }\n\n  function none$1(series) {\n    var n = series.length, o = new Array(n);\n    while (--n >= 0) o[n] = n;\n    return o;\n  }\n\n  function stackValue(d, key) {\n    return d[key];\n  }\n\n  function stack() {\n    var keys = constant$1([]),\n        order = none$1,\n        offset = none,\n        value = stackValue;\n\n    function stack(data) {\n      var kz = keys.apply(this, arguments),\n          i,\n          m = data.length,\n          n = kz.length,\n          sz = new Array(n),\n          oz;\n\n      for (i = 0; i < n; ++i) {\n        for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n          si[j] = sij = [0, +value(data[j], ki, j, data)];\n          sij.data = data[j];\n        }\n        si.key = ki;\n      }\n\n      for (i = 0, oz = order(sz); i < n; ++i) {\n        sz[oz[i]].index = i;\n      }\n\n      offset(sz, oz);\n      return sz;\n    }\n\n    stack.keys = function(_) {\n      return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$1(slice$2.call(_)), stack) : keys;\n    };\n\n    stack.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(+_), stack) : value;\n    };\n\n    stack.order = function(_) {\n      return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$1(slice$2.call(_)), stack) : order;\n    };\n\n    stack.offset = function(_) {\n      return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n    };\n\n    return stack;\n  }\n\n  function expand(series, order) {\n    if (!((n = series.length) > 0)) return;\n    for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n      for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n      if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n    }\n    none(series, order);\n  }\n\n  function silhouette(series, order) {\n    if (!((n = series.length) > 0)) return;\n    for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n      for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n      s0[j][1] += s0[j][0] = -y / 2;\n    }\n    none(series, order);\n  }\n\n  function wiggle(series, order) {\n    if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n    for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n      for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n        var si = series[order[i]],\n            sij0 = si[j][1] || 0,\n            sij1 = si[j - 1][1] || 0,\n            s3 = (sij0 - sij1) / 2;\n        for (var k = 0; k < i; ++k) {\n          var sk = series[order[k]],\n              skj0 = sk[j][1] || 0,\n              skj1 = sk[j - 1][1] || 0;\n          s3 += skj0 - skj1;\n        }\n        s1 += sij0, s2 += s3 * sij0;\n      }\n      s0[j - 1][1] += s0[j - 1][0] = y;\n      if (s1) y -= s2 / s1;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    none(series, order);\n  }\n\n  function ascending$1(series) {\n    var sums = series.map(sum$1);\n    return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n  }\n\n  function sum$1(series) {\n    var s = 0, i = -1, n = series.length, v;\n    while (++i < n) if (v = +series[i][1]) s += v;\n    return s;\n  }\n\n  function descending$2(series) {\n    return ascending$1(series).reverse();\n  }\n\n  function insideOut(series) {\n    var n = series.length,\n        i,\n        j,\n        sums = series.map(sum$1),\n        order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n        top = 0,\n        bottom = 0,\n        tops = [],\n        bottoms = [];\n\n    for (i = 0; i < n; ++i) {\n      j = order[i];\n      if (top < bottom) {\n        top += sums[j];\n        tops.push(j);\n      } else {\n        bottom += sums[j];\n        bottoms.push(j);\n      }\n    }\n\n    return bottoms.reverse().concat(tops);\n  }\n\n  function reverse(series) {\n    return none$1(series).reverse();\n  }\n\n  function define(constructor, factory, prototype) {\n    constructor.prototype = factory.prototype = prototype;\n    prototype.constructor = constructor;\n  }\n\n  function extend(parent, definition) {\n    var prototype = Object.create(parent.prototype);\n    for (var key in definition) prototype[key] = definition[key];\n    return prototype;\n  }\n\n  function Color() {}\n\n  var darker = 0.7;\n  var brighter = 1 / darker;\n\n  var reHex3 = /^#([0-9a-f]{3})$/;\n  var reHex6 = /^#([0-9a-f]{6})$/;\n  var reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n  var reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var named = {\n    aliceblue: 0xf0f8ff,\n    antiquewhite: 0xfaebd7,\n    aqua: 0x00ffff,\n    aquamarine: 0x7fffd4,\n    azure: 0xf0ffff,\n    beige: 0xf5f5dc,\n    bisque: 0xffe4c4,\n    black: 0x000000,\n    blanchedalmond: 0xffebcd,\n    blue: 0x0000ff,\n    blueviolet: 0x8a2be2,\n    brown: 0xa52a2a,\n    burlywood: 0xdeb887,\n    cadetblue: 0x5f9ea0,\n    chartreuse: 0x7fff00,\n    chocolate: 0xd2691e,\n    coral: 0xff7f50,\n    cornflowerblue: 0x6495ed,\n    cornsilk: 0xfff8dc,\n    crimson: 0xdc143c,\n    cyan: 0x00ffff,\n    darkblue: 0x00008b,\n    darkcyan: 0x008b8b,\n    darkgoldenrod: 0xb8860b,\n    darkgray: 0xa9a9a9,\n    darkgreen: 0x006400,\n    darkgrey: 0xa9a9a9,\n    darkkhaki: 0xbdb76b,\n    darkmagenta: 0x8b008b,\n    darkolivegreen: 0x556b2f,\n    darkorange: 0xff8c00,\n    darkorchid: 0x9932cc,\n    darkred: 0x8b0000,\n    darksalmon: 0xe9967a,\n    darkseagreen: 0x8fbc8f,\n    darkslateblue: 0x483d8b,\n    darkslategray: 0x2f4f4f,\n    darkslategrey: 0x2f4f4f,\n    darkturquoise: 0x00ced1,\n    darkviolet: 0x9400d3,\n    deeppink: 0xff1493,\n    deepskyblue: 0x00bfff,\n    dimgray: 0x696969,\n    dimgrey: 0x696969,\n    dodgerblue: 0x1e90ff,\n    firebrick: 0xb22222,\n    floralwhite: 0xfffaf0,\n    forestgreen: 0x228b22,\n    fuchsia: 0xff00ff,\n    gainsboro: 0xdcdcdc,\n    ghostwhite: 0xf8f8ff,\n    gold: 0xffd700,\n    goldenrod: 0xdaa520,\n    gray: 0x808080,\n    green: 0x008000,\n    greenyellow: 0xadff2f,\n    grey: 0x808080,\n    honeydew: 0xf0fff0,\n    hotpink: 0xff69b4,\n    indianred: 0xcd5c5c,\n    indigo: 0x4b0082,\n    ivory: 0xfffff0,\n    khaki: 0xf0e68c,\n    lavender: 0xe6e6fa,\n    lavenderblush: 0xfff0f5,\n    lawngreen: 0x7cfc00,\n    lemonchiffon: 0xfffacd,\n    lightblue: 0xadd8e6,\n    lightcoral: 0xf08080,\n    lightcyan: 0xe0ffff,\n    lightgoldenrodyellow: 0xfafad2,\n    lightgray: 0xd3d3d3,\n    lightgreen: 0x90ee90,\n    lightgrey: 0xd3d3d3,\n    lightpink: 0xffb6c1,\n    lightsalmon: 0xffa07a,\n    lightseagreen: 0x20b2aa,\n    lightskyblue: 0x87cefa,\n    lightslategray: 0x778899,\n    lightslategrey: 0x778899,\n    lightsteelblue: 0xb0c4de,\n    lightyellow: 0xffffe0,\n    lime: 0x00ff00,\n    limegreen: 0x32cd32,\n    linen: 0xfaf0e6,\n    magenta: 0xff00ff,\n    maroon: 0x800000,\n    mediumaquamarine: 0x66cdaa,\n    mediumblue: 0x0000cd,\n    mediumorchid: 0xba55d3,\n    mediumpurple: 0x9370db,\n    mediumseagreen: 0x3cb371,\n    mediumslateblue: 0x7b68ee,\n    mediumspringgreen: 0x00fa9a,\n    mediumturquoise: 0x48d1cc,\n    mediumvioletred: 0xc71585,\n    midnightblue: 0x191970,\n    mintcream: 0xf5fffa,\n    mistyrose: 0xffe4e1,\n    moccasin: 0xffe4b5,\n    navajowhite: 0xffdead,\n    navy: 0x000080,\n    oldlace: 0xfdf5e6,\n    olive: 0x808000,\n    olivedrab: 0x6b8e23,\n    orange: 0xffa500,\n    orangered: 0xff4500,\n    orchid: 0xda70d6,\n    palegoldenrod: 0xeee8aa,\n    palegreen: 0x98fb98,\n    paleturquoise: 0xafeeee,\n    palevioletred: 0xdb7093,\n    papayawhip: 0xffefd5,\n    peachpuff: 0xffdab9,\n    peru: 0xcd853f,\n    pink: 0xffc0cb,\n    plum: 0xdda0dd,\n    powderblue: 0xb0e0e6,\n    purple: 0x800080,\n    rebeccapurple: 0x663399,\n    red: 0xff0000,\n    rosybrown: 0xbc8f8f,\n    royalblue: 0x4169e1,\n    saddlebrown: 0x8b4513,\n    salmon: 0xfa8072,\n    sandybrown: 0xf4a460,\n    seagreen: 0x2e8b57,\n    seashell: 0xfff5ee,\n    sienna: 0xa0522d,\n    silver: 0xc0c0c0,\n    skyblue: 0x87ceeb,\n    slateblue: 0x6a5acd,\n    slategray: 0x708090,\n    slategrey: 0x708090,\n    snow: 0xfffafa,\n    springgreen: 0x00ff7f,\n    steelblue: 0x4682b4,\n    tan: 0xd2b48c,\n    teal: 0x008080,\n    thistle: 0xd8bfd8,\n    tomato: 0xff6347,\n    turquoise: 0x40e0d0,\n    violet: 0xee82ee,\n    wheat: 0xf5deb3,\n    white: 0xffffff,\n    whitesmoke: 0xf5f5f5,\n    yellow: 0xffff00,\n    yellowgreen: 0x9acd32\n  };\n\n  define(Color, color, {\n    displayable: function() {\n      return this.rgb().displayable();\n    },\n    toString: function() {\n      return this.rgb() + \"\";\n    }\n  });\n\n  function color(format) {\n    var m;\n    format = (format + \"\").trim().toLowerCase();\n    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n        : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n        : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n        : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n        : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n        : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n        : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n        : named.hasOwnProperty(format) ? rgbn(named[format])\n        : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n        : null;\n  }\n\n  function rgbn(n) {\n    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n  }\n\n  function rgba(r, g, b, a) {\n    if (a <= 0) r = g = b = NaN;\n    return new Rgb(r, g, b, a);\n  }\n\n  function rgbConvert(o) {\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Rgb;\n    o = o.rgb();\n    return new Rgb(o.r, o.g, o.b, o.opacity);\n  }\n\n  function colorRgb(r, g, b, opacity) {\n    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n  }\n\n  function Rgb(r, g, b, opacity) {\n    this.r = +r;\n    this.g = +g;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n\n  define(Rgb, colorRgb, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    rgb: function() {\n      return this;\n    },\n    displayable: function() {\n      return (0 <= this.r && this.r <= 255)\n          && (0 <= this.g && this.g <= 255)\n          && (0 <= this.b && this.b <= 255)\n          && (0 <= this.opacity && this.opacity <= 1);\n    },\n    toString: function() {\n      var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n      return (a === 1 ? \"rgb(\" : \"rgba(\")\n          + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n          + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n          + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n          + (a === 1 ? \")\" : \", \" + a + \")\");\n    }\n  }));\n\n  function hsla(h, s, l, a) {\n    if (a <= 0) h = s = l = NaN;\n    else if (l <= 0 || l >= 1) h = s = NaN;\n    else if (s <= 0) h = NaN;\n    return new Hsl(h, s, l, a);\n  }\n\n  function hslConvert(o) {\n    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Hsl;\n    if (o instanceof Hsl) return o;\n    o = o.rgb();\n    var r = o.r / 255,\n        g = o.g / 255,\n        b = o.b / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        h = NaN,\n        s = max - min,\n        l = (max + min) / 2;\n    if (s) {\n      if (r === max) h = (g - b) / s + (g < b) * 6;\n      else if (g === max) h = (b - r) / s + 2;\n      else h = (r - g) / s + 4;\n      s /= l < 0.5 ? max + min : 2 - max - min;\n      h *= 60;\n    } else {\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new Hsl(h, s, l, o.opacity);\n  }\n\n  function colorHsl(h, s, l, opacity) {\n    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n  }\n\n  function Hsl(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Hsl, colorHsl, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb: function() {\n      var h = this.h % 360 + (this.h < 0) * 360,\n          s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n          l = this.l,\n          m2 = l + (l < 0.5 ? l : 1 - l) * s,\n          m1 = 2 * l - m2;\n      return new Rgb(\n        hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n        hsl2rgb(h, m1, m2),\n        hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n        this.opacity\n      );\n    },\n    displayable: function() {\n      return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n          && (0 <= this.l && this.l <= 1)\n          && (0 <= this.opacity && this.opacity <= 1);\n    }\n  }));\n\n  /* From FvD 13.37, CSS Color Module Level 3 */\n  function hsl2rgb(h, m1, m2) {\n    return (h < 60 ? m1 + (m2 - m1) * h / 60\n        : h < 180 ? m2\n        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n        : m1) * 255;\n  }\n\n  var deg2rad = Math.PI / 180;\n  var rad2deg = 180 / Math.PI;\n\n  var Kn = 18;\n  var Xn = 0.950470;\n  var Yn = 1;\n  var Zn = 1.088830;\n  var t0 = 4 / 29;\n  var t1 = 6 / 29;\n  var t2 = 3 * t1 * t1;\n  var t3 = t1 * t1 * t1;\n  function labConvert(o) {\n    if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n    if (o instanceof Hcl) {\n      var h = o.h * deg2rad;\n      return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n    }\n    if (!(o instanceof Rgb)) o = rgbConvert(o);\n    var b = rgb2xyz(o.r),\n        a = rgb2xyz(o.g),\n        l = rgb2xyz(o.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n    return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n  }\n\n  function lab(l, a, b, opacity) {\n    return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n  }\n\n  function Lab(l, a, b, opacity) {\n    this.l = +l;\n    this.a = +a;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n\n  define(Lab, lab, extend(Color, {\n    brighter: function(k) {\n      return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n    },\n    darker: function(k) {\n      return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n    },\n    rgb: function() {\n      var y = (this.l + 16) / 116,\n          x = isNaN(this.a) ? y : y + this.a / 500,\n          z = isNaN(this.b) ? y : y - this.b / 200;\n      y = Yn * lab2xyz(y);\n      x = Xn * lab2xyz(x);\n      z = Zn * lab2xyz(z);\n      return new Rgb(\n        xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        this.opacity\n      );\n    }\n  }));\n\n  function xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n  }\n\n  function lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n  }\n\n  function xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n  }\n\n  function rgb2xyz(x) {\n    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n  }\n\n  function hclConvert(o) {\n    if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n    if (!(o instanceof Lab)) o = labConvert(o);\n    var h = Math.atan2(o.b, o.a) * rad2deg;\n    return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n  }\n\n  function colorHcl(h, c, l, opacity) {\n    return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n  }\n\n  function Hcl(h, c, l, opacity) {\n    this.h = +h;\n    this.c = +c;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Hcl, colorHcl, extend(Color, {\n    brighter: function(k) {\n      return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n    },\n    darker: function(k) {\n      return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n    },\n    rgb: function() {\n      return labConvert(this).rgb();\n    }\n  }));\n\n  var A = -0.14861;\n  var B = +1.78277;\n  var C = -0.29227;\n  var D = -0.90649;\n  var E = +1.97294;\n  var ED = E * D;\n  var EB = E * B;\n  var BC_DA = B * C - D * A;\n  function cubehelixConvert(o) {\n    if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Rgb)) o = rgbConvert(o);\n    var r = o.r / 255,\n        g = o.g / 255,\n        b = o.b / 255,\n        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n        bl = b - l,\n        k = (E * (g - l) - C * bl) / D,\n        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n    return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n  }\n\n  function cubehelix(h, s, l, opacity) {\n    return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n  }\n\n  function Cubehelix(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Cubehelix, cubehelix, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb: function() {\n      var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n          l = +this.l,\n          a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n          cosh = Math.cos(h),\n          sinh = Math.sin(h);\n      return new Rgb(\n        255 * (l + a * (A * cosh + B * sinh)),\n        255 * (l + a * (C * cosh + D * sinh)),\n        255 * (l + a * (E * cosh)),\n        this.opacity\n      );\n    }\n  }));\n\n  function basis$1(t1, v0, v1, v2, v3) {\n    var t2 = t1 * t1, t3 = t2 * t1;\n    return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n        + (4 - 6 * t2 + 3 * t3) * v1\n        + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n        + t3 * v3) / 6;\n  }\n\n  function basis$2(values) {\n    var n = values.length - 1;\n    return function(t) {\n      var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n          v1 = values[i],\n          v2 = values[i + 1],\n          v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n          v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n      return basis$1((t - i / n) * n, v0, v1, v2, v3);\n    };\n  }\n\n  function basisClosed$1(values) {\n    var n = values.length;\n    return function(t) {\n      var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n          v0 = values[(i + n - 1) % n],\n          v1 = values[i % n],\n          v2 = values[(i + 1) % n],\n          v3 = values[(i + 2) % n];\n      return basis$1((t - i / n) * n, v0, v1, v2, v3);\n    };\n  }\n\n  function constant$2(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function linear$1(a, d) {\n    return function(t) {\n      return a + t * d;\n    };\n  }\n\n  function exponential$1(a, b, y) {\n    return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n      return Math.pow(a + t * b, y);\n    };\n  }\n\n  function hue(a, b) {\n    var d = b - a;\n    return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$2(isNaN(a) ? b : a);\n  }\n\n  function gamma(y) {\n    return (y = +y) === 1 ? nogamma : function(a, b) {\n      return b - a ? exponential$1(a, b, y) : constant$2(isNaN(a) ? b : a);\n    };\n  }\n\n  function nogamma(a, b) {\n    var d = b - a;\n    return d ? linear$1(a, d) : constant$2(isNaN(a) ? b : a);\n  }\n\n  var interpolateRgb = (function rgbGamma(y) {\n    var color = gamma(y);\n\n    function rgb(start, end) {\n      var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n          g = color(start.g, end.g),\n          b = color(start.b, end.b),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.r = r(t);\n        start.g = g(t);\n        start.b = b(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    rgb.gamma = rgbGamma;\n\n    return rgb;\n  })(1);\n\n  function rgbSpline(spline) {\n    return function(colors) {\n      var n = colors.length,\n          r = new Array(n),\n          g = new Array(n),\n          b = new Array(n),\n          i, color;\n      for (i = 0; i < n; ++i) {\n        color = colorRgb(colors[i]);\n        r[i] = color.r || 0;\n        g[i] = color.g || 0;\n        b[i] = color.b || 0;\n      }\n      r = spline(r);\n      g = spline(g);\n      b = spline(b);\n      color.opacity = 1;\n      return function(t) {\n        color.r = r(t);\n        color.g = g(t);\n        color.b = b(t);\n        return color + \"\";\n      };\n    };\n  }\n\n  var rgbBasis = rgbSpline(basis$2);\n  var rgbBasisClosed = rgbSpline(basisClosed$1);\n\n  function array$1(a, b) {\n    var nb = b ? b.length : 0,\n        na = a ? Math.min(nb, a.length) : 0,\n        x = new Array(nb),\n        c = new Array(nb),\n        i;\n\n    for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n    for (; i < nb; ++i) c[i] = b[i];\n\n    return function(t) {\n      for (i = 0; i < na; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n\n  function date(a, b) {\n    var d = new Date;\n    return a = +a, b -= a, function(t) {\n      return d.setTime(a + b * t), d;\n    };\n  }\n\n  function interpolateNumber(a, b) {\n    return a = +a, b -= a, function(t) {\n      return a + b * t;\n    };\n  }\n\n  function object(a, b) {\n    var i = {},\n        c = {},\n        k;\n\n    if (a === null || typeof a !== \"object\") a = {};\n    if (b === null || typeof b !== \"object\") b = {};\n\n    for (k in b) {\n      if (k in a) {\n        i[k] = interpolate(a[k], b[k]);\n      } else {\n        c[k] = b[k];\n      }\n    }\n\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n\n  var reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n  var reB = new RegExp(reA.source, \"g\");\n  function zero(b) {\n    return function() {\n      return b;\n    };\n  }\n\n  function one(b) {\n    return function(t) {\n      return b(t) + \"\";\n    };\n  }\n\n  function interpolateString(a, b) {\n    var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n        am, // current match in a\n        bm, // current match in b\n        bs, // string preceding current number in b, if any\n        i = -1, // index in s\n        s = [], // string constants and placeholders\n        q = []; // number interpolators\n\n    // Coerce inputs to strings.\n    a = a + \"\", b = b + \"\";\n\n    // Interpolate pairs of numbers in a & b.\n    while ((am = reA.exec(a))\n        && (bm = reB.exec(b))) {\n      if ((bs = bm.index) > bi) { // a string precedes the next number in b\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; // coalesce with previous string\n        else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n        if (s[i]) s[i] += bm; // coalesce with previous string\n        else s[++i] = bm;\n      } else { // interpolate non-matching numbers\n        s[++i] = null;\n        q.push({i: i, x: interpolateNumber(am, bm)});\n      }\n      bi = reB.lastIndex;\n    }\n\n    // Add remains of b.\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n\n    // Special optimization for only a single match.\n    // Otherwise, interpolate each of the numbers and rejoin the string.\n    return s.length < 2 ? (q[0]\n        ? one(q[0].x)\n        : zero(b))\n        : (b = q.length, function(t) {\n            for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n            return s.join(\"\");\n          });\n  }\n\n  function interpolate(a, b) {\n    var t = typeof b, c;\n    return b == null || t === \"boolean\" ? constant$2(b)\n        : (t === \"number\" ? interpolateNumber\n        : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n        : b instanceof color ? interpolateRgb\n        : b instanceof Date ? date\n        : Array.isArray(b) ? array$1\n        : isNaN(b) ? object\n        : interpolateNumber)(a, b);\n  }\n\n  function interpolateRound(a, b) {\n    return a = +a, b -= a, function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n\n  var degrees = 180 / Math.PI;\n\n  var identity$2 = {\n    translateX: 0,\n    translateY: 0,\n    rotate: 0,\n    skewX: 0,\n    scaleX: 1,\n    scaleY: 1\n  };\n\n  function decompose(a, b, c, d, e, f) {\n    var scaleX, scaleY, skewX;\n    if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n    if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n    if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n    if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n    return {\n      translateX: e,\n      translateY: f,\n      rotate: Math.atan2(b, a) * degrees,\n      skewX: Math.atan(skewX) * degrees,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var cssNode;\n  var cssRoot;\n  var cssView;\n  var svgNode;\n  function parseCss(value) {\n    if (value === \"none\") return identity$2;\n    if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n    cssNode.style.transform = value;\n    value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n    cssRoot.removeChild(cssNode);\n    value = value.slice(7, -1).split(\",\");\n    return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n  }\n\n  function parseSvg(value) {\n    if (value == null) return identity$2;\n    if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    svgNode.setAttribute(\"transform\", value);\n    if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n    value = value.matrix;\n    return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n  }\n\n  function interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n    function pop(s) {\n      return s.length ? s.pop() + \" \" : \"\";\n    }\n\n    function translate(xa, ya, xb, yb, s, q) {\n      if (xa !== xb || ya !== yb) {\n        var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n        q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n      } else if (xb || yb) {\n        s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n      }\n    }\n\n    function rotate(a, b, s, q) {\n      if (a !== b) {\n        if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n        q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n      } else if (b) {\n        s.push(pop(s) + \"rotate(\" + b + degParen);\n      }\n    }\n\n    function skewX(a, b, s, q) {\n      if (a !== b) {\n        q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n      } else if (b) {\n        s.push(pop(s) + \"skewX(\" + b + degParen);\n      }\n    }\n\n    function scale(xa, ya, xb, yb, s, q) {\n      if (xa !== xb || ya !== yb) {\n        var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n        q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n      } else if (xb !== 1 || yb !== 1) {\n        s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n      }\n    }\n\n    return function(a, b) {\n      var s = [], // string constants and placeholders\n          q = []; // number interpolators\n      a = parse(a), b = parse(b);\n      translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n      rotate(a.rotate, b.rotate, s, q);\n      skewX(a.skewX, b.skewX, s, q);\n      scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n      a = b = null; // gc\n      return function(t) {\n        var i = -1, n = q.length, o;\n        while (++i < n) s[(o = q[i]).i] = o.x(t);\n        return s.join(\"\");\n      };\n    };\n  }\n\n  var interpolateTransform$1 = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n  var interpolateTransform$2 = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\n  var rho = Math.SQRT2;\n  var rho2 = 2;\n  var rho4 = 4;\n  var epsilon2 = 1e-12;\n  function cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n\n  function sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n\n  function tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n\n  // p0 = [ux0, uy0, w0]\n  // p1 = [ux1, uy1, w1]\n  function interpolateZoom(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    // Special case for u0 ≅ u1.\n    if (d2 < epsilon2) {\n      S = Math.log(w1 / w0) / rho;\n      i = function(t) {\n        return [\n          ux0 + t * dx,\n          uy0 + t * dy,\n          w0 * Math.exp(rho * t * S)\n        ];\n      }\n    }\n\n    // General case.\n    else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n      i = function(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [\n          ux0 + u * dx,\n          uy0 + u * dy,\n          w0 * coshr0 / cosh(rho * s + r0)\n        ];\n      }\n    }\n\n    i.duration = S * 1000;\n\n    return i;\n  }\n\n  function hsl(hue) {\n    return function(start, end) {\n      var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n  }\n\n  var hsl$1 = hsl(hue);\n  var hslLong = hsl(nogamma);\n\n  function lab$1(start, end) {\n    var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n        a = nogamma(start.a, end.a),\n        b = nogamma(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.l = l(t);\n      start.a = a(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  function hcl(hue) {\n    return function(start, end) {\n      var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n          c = nogamma(start.c, end.c),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.c = c(t);\n        start.l = l(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n  }\n\n  var hcl$1 = hcl(hue);\n  var hclLong = hcl(nogamma);\n\n  function cubehelix$1(hue) {\n    return (function cubehelixGamma(y) {\n      y = +y;\n\n      function cubehelix$$(start, end) {\n        var h = hue((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n            s = nogamma(start.s, end.s),\n            l = nogamma(start.l, end.l),\n            opacity = nogamma(start.opacity, end.opacity);\n        return function(t) {\n          start.h = h(t);\n          start.s = s(t);\n          start.l = l(Math.pow(t, y));\n          start.opacity = opacity(t);\n          return start + \"\";\n        };\n      }\n\n      cubehelix$$.gamma = cubehelixGamma;\n\n      return cubehelix$$;\n    })(1);\n  }\n\n  var cubehelix$2 = cubehelix$1(hue);\n  var interpolateCubehelixLong = cubehelix$1(nogamma);\n\n  function quantize(interpolator, n) {\n    var samples = new Array(n);\n    for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n    return samples;\n  }\n\n  var noop$1 = {value: function() {}};\n\n  function dispatch() {\n    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n      if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n      _[t] = [];\n    }\n    return new Dispatch(_);\n  }\n\n  function Dispatch(_) {\n    this._ = _;\n  }\n\n  function parseTypenames(typenames, types) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n      return {type: t, name: name};\n    });\n  }\n\n  Dispatch.prototype = dispatch.prototype = {\n    constructor: Dispatch,\n    on: function(typename, callback) {\n      var _ = this._,\n          T = parseTypenames(typename + \"\", _),\n          t,\n          i = -1,\n          n = T.length;\n\n      // If no callback was specified, return the callback of the given type and name.\n      if (arguments.length < 2) {\n        while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n        return;\n      }\n\n      // If a type was specified, set the callback for the given type and name.\n      // Otherwise, if a null callback was specified, remove callbacks of the given name.\n      if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      while (++i < n) {\n        if (t = (typename = T[i]).type) _[t] = set$1(_[t], typename.name, callback);\n        else if (callback == null) for (t in _) _[t] = set$1(_[t], typename.name, null);\n      }\n\n      return this;\n    },\n    copy: function() {\n      var copy = {}, _ = this._;\n      for (var t in _) copy[t] = _[t].slice();\n      return new Dispatch(copy);\n    },\n    call: function(type, that) {\n      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    },\n    apply: function(type, that, args) {\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    }\n  };\n\n  function get(type, name) {\n    for (var i = 0, n = type.length, c; i < n; ++i) {\n      if ((c = type[i]).name === name) {\n        return c.value;\n      }\n    }\n  }\n\n  function set$1(type, name, callback) {\n    for (var i = 0, n = type.length; i < n; ++i) {\n      if (type[i].name === name) {\n        type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n        break;\n      }\n    }\n    if (callback != null) type.push({name: name, value: callback});\n    return type;\n  }\n\n  function objectConverter(columns) {\n    return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n      return JSON.stringify(name) + \": d[\" + i + \"]\";\n    }).join(\",\") + \"}\");\n  }\n\n  function customConverter(columns, f) {\n    var object = objectConverter(columns);\n    return function(row, i) {\n      return f(object(row), i, columns);\n    };\n  }\n\n  // Compute unique columns in order of discovery.\n  function inferColumns(rows) {\n    var columnSet = Object.create(null),\n        columns = [];\n\n    rows.forEach(function(row) {\n      for (var column in row) {\n        if (!(column in columnSet)) {\n          columns.push(columnSet[column] = column);\n        }\n      }\n    });\n\n    return columns;\n  }\n\n  function dsv(delimiter) {\n    var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n        delimiterCode = delimiter.charCodeAt(0);\n\n    function parse(text, f) {\n      var convert, columns, rows = parseRows(text, function(row, i) {\n        if (convert) return convert(row, i - 1);\n        columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n      });\n      rows.columns = columns;\n      return rows;\n    }\n\n    function parseRows(text, f) {\n      var EOL = {}, // sentinel value for end-of-line\n          EOF = {}, // sentinel value for end-of-file\n          rows = [], // output rows\n          N = text.length,\n          I = 0, // current character index\n          n = 0, // the current line number\n          t, // the current token\n          eol; // is the current token followed by EOL?\n\n      function token() {\n        if (I >= N) return EOF; // special case: end of file\n        if (eol) return eol = false, EOL; // special case: end of line\n\n        // special case: quotes\n        var j = I, c;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n        }\n\n        // common case: find next delimiter or newline\n        while (I < N) {\n          var k = 1;\n          c = text.charCodeAt(I++);\n          if (c === 10) eol = true; // \\n\n          else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n          else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n\n        // special case: last token before EOF\n        return text.slice(j);\n      }\n\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n\n      return rows;\n    }\n\n    function format(rows, columns) {\n      if (columns == null) columns = inferColumns(rows);\n      return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n        return columns.map(function(column) {\n          return formatValue(row[column]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    }\n\n    function formatRows(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    }\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(text) {\n      return text == null ? \"\"\n          : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n          : text;\n    }\n\n    return {\n      parse: parse,\n      parseRows: parseRows,\n      format: format,\n      formatRows: formatRows\n    };\n  }\n\n  var csv = dsv(\",\");\n\n  var csvParse = csv.parse;\n  var csvParseRows = csv.parseRows;\n  var csvFormat = csv.format;\n  var csvFormatRows = csv.formatRows;\n\n  var tsv = dsv(\"\\t\");\n\n  var tsvParse = tsv.parse;\n  var tsvParseRows = tsv.parseRows;\n  var tsvFormat = tsv.format;\n  var tsvFormatRows = tsv.formatRows;\n\n  function request(url, callback) {\n    var request,\n        event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n        mimeType,\n        headers = map$1(),\n        xhr = new XMLHttpRequest,\n        user = null,\n        password = null,\n        response,\n        responseType,\n        timeout = 0;\n\n    // If IE does not support CORS, use XDomainRequest.\n    if (typeof XDomainRequest !== \"undefined\"\n        && !(\"withCredentials\" in xhr)\n        && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n    \"onload\" in xhr\n        ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n        : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n    function respond(o) {\n      var status = xhr.status, result;\n      if (!status && hasResponse(xhr)\n          || status >= 200 && status < 300\n          || status === 304) {\n        if (response) {\n          try {\n            result = response.call(request, xhr);\n          } catch (e) {\n            event.call(\"error\", request, e);\n            return;\n          }\n        } else {\n          result = xhr;\n        }\n        event.call(\"load\", request, result);\n      } else {\n        event.call(\"error\", request, o);\n      }\n    }\n\n    xhr.onprogress = function(e) {\n      event.call(\"progress\", request, e);\n    };\n\n    request = {\n      header: function(name, value) {\n        name = (name + \"\").toLowerCase();\n        if (arguments.length < 2) return headers.get(name);\n        if (value == null) headers.remove(name);\n        else headers.set(name, value + \"\");\n        return request;\n      },\n\n      // If mimeType is non-null and no Accept header is set, a default is used.\n      mimeType: function(value) {\n        if (!arguments.length) return mimeType;\n        mimeType = value == null ? null : value + \"\";\n        return request;\n      },\n\n      // Specifies what type the response value should take;\n      // for instance, arraybuffer, blob, document, or text.\n      responseType: function(value) {\n        if (!arguments.length) return responseType;\n        responseType = value;\n        return request;\n      },\n\n      timeout: function(value) {\n        if (!arguments.length) return timeout;\n        timeout = +value;\n        return request;\n      },\n\n      user: function(value) {\n        return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n      },\n\n      password: function(value) {\n        return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n      },\n\n      // Specify how to convert the response content to a specific type;\n      // changes the callback value on \"load\" events.\n      response: function(value) {\n        response = value;\n        return request;\n      },\n\n      // Alias for send(\"GET\", …).\n      get: function(data, callback) {\n        return request.send(\"GET\", data, callback);\n      },\n\n      // Alias for send(\"POST\", …).\n      post: function(data, callback) {\n        return request.send(\"POST\", data, callback);\n      },\n\n      // If callback is non-null, it will be used for error and load events.\n      send: function(method, data, callback) {\n        xhr.open(method, url, true, user, password);\n        if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n        if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n        if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n        if (responseType != null) xhr.responseType = responseType;\n        if (timeout > 0) xhr.timeout = timeout;\n        if (callback == null && typeof data === \"function\") callback = data, data = null;\n        if (callback != null && callback.length === 1) callback = fixCallback(callback);\n        if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n        event.call(\"beforesend\", request, xhr);\n        xhr.send(data == null ? null : data);\n        return request;\n      },\n\n      abort: function() {\n        xhr.abort();\n        return request;\n      },\n\n      on: function() {\n        var value = event.on.apply(event, arguments);\n        return value === event ? request : value;\n      }\n    };\n\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return request.get(callback);\n    }\n\n    return request;\n  }\n\n  function fixCallback(callback) {\n    return function(error, xhr) {\n      callback(error == null ? xhr : null);\n    };\n  }\n\n  function hasResponse(xhr) {\n    var type = xhr.responseType;\n    return type && type !== \"text\"\n        ? xhr.response // null on error\n        : xhr.responseText; // \"\" on error\n  }\n\n  function type(defaultMimeType, response) {\n    return function(url, callback) {\n      var r = request(url).mimeType(defaultMimeType).response(response);\n      if (callback != null) {\n        if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n        return r.get(callback);\n      }\n      return r;\n    };\n  }\n\n  var html = type(\"text/html\", function(xhr) {\n    return document.createRange().createContextualFragment(xhr.responseText);\n  });\n\n  var json = type(\"application/json\", function(xhr) {\n    return JSON.parse(xhr.responseText);\n  });\n\n  var text = type(\"text/plain\", function(xhr) {\n    return xhr.responseText;\n  });\n\n  var xml = type(\"application/xml\", function(xhr) {\n    var xml = xhr.responseXML;\n    if (!xml) throw new Error(\"parse error\");\n    return xml;\n  });\n\n  function dsv$1(defaultMimeType, parse) {\n    return function(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var r = request(url).mimeType(defaultMimeType);\n      r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n      r.row(row);\n      return callback ? r.get(callback) : r;\n    };\n  }\n\n  function responseOf(parse, row) {\n    return function(request) {\n      return parse(request.responseText, row);\n    };\n  }\n\n  var csv$1 = dsv$1(\"text/csv\", csvParse);\n\n  var tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\n  var frame = 0;\n  var timeout = 0;\n  var interval = 0;\n  var pokeDelay = 1000;\n  var taskHead;\n  var taskTail;\n  var clockLast = 0;\n  var clockNow = 0;\n  var clockSkew = 0;\n  var clock = typeof performance === \"object\" && performance.now ? performance : Date;\n  var setFrame = typeof requestAnimationFrame === \"function\"\n          ? (clock === Date ? function(f) { requestAnimationFrame(function() { f(clock.now()); }); } : requestAnimationFrame)\n          : function(f) { setTimeout(f, 17); };\n  function now() {\n    return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n  }\n\n  function clearNow() {\n    clockNow = 0;\n  }\n\n  function Timer() {\n    this._call =\n    this._time =\n    this._next = null;\n  }\n\n  Timer.prototype = timer.prototype = {\n    constructor: Timer,\n    restart: function(callback, delay, time) {\n      if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n      time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n      if (!this._next && taskTail !== this) {\n        if (taskTail) taskTail._next = this;\n        else taskHead = this;\n        taskTail = this;\n      }\n      this._call = callback;\n      this._time = time;\n      sleep();\n    },\n    stop: function() {\n      if (this._call) {\n        this._call = null;\n        this._time = Infinity;\n        sleep();\n      }\n    }\n  };\n\n  function timer(callback, delay, time) {\n    var t = new Timer;\n    t.restart(callback, delay, time);\n    return t;\n  }\n\n  function timerFlush() {\n    now(); // Get the current time, if not already set.\n    ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n    var t = taskHead, e;\n    while (t) {\n      if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n      t = t._next;\n    }\n    --frame;\n  }\n\n  function wake(time) {\n    clockNow = (clockLast = time || clock.now()) + clockSkew;\n    frame = timeout = 0;\n    try {\n      timerFlush();\n    } finally {\n      frame = 0;\n      nap();\n      clockNow = 0;\n    }\n  }\n\n  function poke$1() {\n    var now = clock.now(), delay = now - clockLast;\n    if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n  }\n\n  function nap() {\n    var t0, t1 = taskHead, t2, time = Infinity;\n    while (t1) {\n      if (t1._call) {\n        if (time > t1._time) time = t1._time;\n        t0 = t1, t1 = t1._next;\n      } else {\n        t2 = t1._next, t1._next = null;\n        t1 = t0 ? t0._next = t2 : taskHead = t2;\n      }\n    }\n    taskTail = t0;\n    sleep(time);\n  }\n\n  function sleep(time) {\n    if (frame) return; // Soonest alarm already set, or will be.\n    if (timeout) timeout = clearTimeout(timeout);\n    var delay = time - clockNow;\n    if (delay > 24) {\n      if (time < Infinity) timeout = setTimeout(wake, delay);\n      if (interval) interval = clearInterval(interval);\n    } else {\n      if (!interval) interval = setInterval(poke$1, pokeDelay);\n      frame = 1, setFrame(wake);\n    }\n  }\n\n  function timeout$1(callback, delay, time) {\n    var t = new Timer;\n    delay = delay == null ? 0 : +delay;\n    t.restart(function(elapsed) {\n      t.stop();\n      callback(elapsed + delay);\n    }, delay, time);\n    return t;\n  }\n\n  function interval$1(callback, delay, time) {\n    var t = new Timer, total = delay;\n    if (delay == null) return t.restart(callback, delay, time), t;\n    delay = +delay, time = time == null ? now() : +time;\n    t.restart(function tick(elapsed) {\n      elapsed += total;\n      t.restart(tick, total += delay, time);\n      callback(elapsed);\n    }, delay, time);\n    return t;\n  }\n\nvar   t0$1 = new Date;\nvar   t1$1 = new Date;\n  function newInterval(floori, offseti, count, field) {\n\n    function interval(date) {\n      return floori(date = new Date(+date)), date;\n    }\n\n    interval.floor = interval;\n\n    interval.ceil = function(date) {\n      return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n    };\n\n    interval.round = function(date) {\n      var d0 = interval(date),\n          d1 = interval.ceil(date);\n      return date - d0 < d1 - date ? d0 : d1;\n    };\n\n    interval.offset = function(date, step) {\n      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n    };\n\n    interval.range = function(start, stop, step) {\n      var range = [];\n      start = interval.ceil(start);\n      step = step == null ? 1 : Math.floor(step);\n      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n      do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n      return range;\n    };\n\n    interval.filter = function(test) {\n      return newInterval(function(date) {\n        while (floori(date), !test(date)) date.setTime(date - 1);\n      }, function(date, step) {\n        while (--step >= 0) while (offseti(date, 1), !test(date));\n      });\n    };\n\n    if (count) {\n      interval.count = function(start, end) {\n        t0$1.setTime(+start), t1$1.setTime(+end);\n        floori(t0$1), floori(t1$1);\n        return Math.floor(count(t0$1, t1$1));\n      };\n\n      interval.every = function(step) {\n        step = Math.floor(step);\n        return !isFinite(step) || !(step > 0) ? null\n            : !(step > 1) ? interval\n            : interval.filter(field\n                ? function(d) { return field(d) % step === 0; }\n                : function(d) { return interval.count(0, d) % step === 0; });\n      };\n    }\n\n    return interval;\n  }\n\n  var millisecond = newInterval(function() {\n    // noop\n  }, function(date, step) {\n    date.setTime(+date + step);\n  }, function(start, end) {\n    return end - start;\n  });\n\n  // An optimized implementation for this simple case.\n  millisecond.every = function(k) {\n    k = Math.floor(k);\n    if (!isFinite(k) || !(k > 0)) return null;\n    if (!(k > 1)) return millisecond;\n    return newInterval(function(date) {\n      date.setTime(Math.floor(date / k) * k);\n    }, function(date, step) {\n      date.setTime(+date + step * k);\n    }, function(start, end) {\n      return (end - start) / k;\n    });\n  };\n\n  var milliseconds = millisecond.range;\n\n  var durationSecond = 1e3;\n  var durationMinute = 6e4;\n  var durationHour = 36e5;\n  var durationDay = 864e5;\n  var durationWeek = 6048e5;\n\n  var second = newInterval(function(date) {\n    date.setTime(Math.floor(date / durationSecond) * durationSecond);\n  }, function(date, step) {\n    date.setTime(+date + step * durationSecond);\n  }, function(start, end) {\n    return (end - start) / durationSecond;\n  }, function(date) {\n    return date.getUTCSeconds();\n  });\n\n  var seconds = second.range;\n\n  var minute = newInterval(function(date) {\n    date.setTime(Math.floor(date / durationMinute) * durationMinute);\n  }, function(date, step) {\n    date.setTime(+date + step * durationMinute);\n  }, function(start, end) {\n    return (end - start) / durationMinute;\n  }, function(date) {\n    return date.getMinutes();\n  });\n\n  var minutes = minute.range;\n\n  var hour = newInterval(function(date) {\n    var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n    if (offset < 0) offset += durationHour;\n    date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n  }, function(date, step) {\n    date.setTime(+date + step * durationHour);\n  }, function(start, end) {\n    return (end - start) / durationHour;\n  }, function(date) {\n    return date.getHours();\n  });\n\n  var hours = hour.range;\n\n  var day = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n\n  var days = day.range;\n\n  function weekday(i) {\n    return newInterval(function(date) {\n      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n      date.setHours(0, 0, 0, 0);\n    }, function(date, step) {\n      date.setDate(date.getDate() + step * 7);\n    }, function(start, end) {\n      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n    });\n  }\n\n  var timeWeek = weekday(0);\n  var timeMonday = weekday(1);\n  var tuesday = weekday(2);\n  var wednesday = weekday(3);\n  var thursday = weekday(4);\n  var friday = weekday(5);\n  var saturday = weekday(6);\n\n  var sundays = timeWeek.range;\n  var mondays = timeMonday.range;\n  var tuesdays = tuesday.range;\n  var wednesdays = wednesday.range;\n  var thursdays = thursday.range;\n  var fridays = friday.range;\n  var saturdays = saturday.range;\n\n  var month = newInterval(function(date) {\n    date.setDate(1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setMonth(date.getMonth() + step);\n  }, function(start, end) {\n    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n  }, function(date) {\n    return date.getMonth();\n  });\n\n  var months = month.range;\n\n  var year = newInterval(function(date) {\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step);\n  }, function(start, end) {\n    return end.getFullYear() - start.getFullYear();\n  }, function(date) {\n    return date.getFullYear();\n  });\n\n  // An optimized implementation for this simple case.\n  year.every = function(k) {\n    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n      date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n      date.setMonth(0, 1);\n      date.setHours(0, 0, 0, 0);\n    }, function(date, step) {\n      date.setFullYear(date.getFullYear() + step * k);\n    });\n  };\n\n  var years = year.range;\n\n  var utcMinute = newInterval(function(date) {\n    date.setUTCSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * durationMinute);\n  }, function(start, end) {\n    return (end - start) / durationMinute;\n  }, function(date) {\n    return date.getUTCMinutes();\n  });\n\n  var utcMinutes = utcMinute.range;\n\n  var utcHour = newInterval(function(date) {\n    date.setUTCMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * durationHour);\n  }, function(start, end) {\n    return (end - start) / durationHour;\n  }, function(date) {\n    return date.getUTCHours();\n  });\n\n  var utcHours = utcHour.range;\n\n  var utcDay = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step);\n  }, function(start, end) {\n    return (end - start) / durationDay;\n  }, function(date) {\n    return date.getUTCDate() - 1;\n  });\n\n  var utcDays = utcDay.range;\n\n  function utcWeekday(i) {\n    return newInterval(function(date) {\n      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n      date.setUTCHours(0, 0, 0, 0);\n    }, function(date, step) {\n      date.setUTCDate(date.getUTCDate() + step * 7);\n    }, function(start, end) {\n      return (end - start) / durationWeek;\n    });\n  }\n\n  var utcWeek = utcWeekday(0);\n  var utcMonday = utcWeekday(1);\n  var utcTuesday = utcWeekday(2);\n  var utcWednesday = utcWeekday(3);\n  var utcThursday = utcWeekday(4);\n  var utcFriday = utcWeekday(5);\n  var utcSaturday = utcWeekday(6);\n\n  var utcSundays = utcWeek.range;\n  var utcMondays = utcMonday.range;\n  var utcTuesdays = utcTuesday.range;\n  var utcWednesdays = utcWednesday.range;\n  var utcThursdays = utcThursday.range;\n  var utcFridays = utcFriday.range;\n  var utcSaturdays = utcSaturday.range;\n\n  var utcMonth = newInterval(function(date) {\n    date.setUTCDate(1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCMonth(date.getUTCMonth() + step);\n  }, function(start, end) {\n    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n  }, function(date) {\n    return date.getUTCMonth();\n  });\n\n  var utcMonths = utcMonth.range;\n\n  var utcYear = newInterval(function(date) {\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step);\n  }, function(start, end) {\n    return end.getUTCFullYear() - start.getUTCFullYear();\n  }, function(date) {\n    return date.getUTCFullYear();\n  });\n\n  // An optimized implementation for this simple case.\n  utcYear.every = function(k) {\n    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n      date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n      date.setUTCMonth(0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n    }, function(date, step) {\n      date.setUTCFullYear(date.getUTCFullYear() + step * k);\n    });\n  };\n\n  var utcYears = utcYear.range;\n\n  // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimal(1.23) returns [\"123\", 0].\n  function formatDecimal(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n    var i, coefficient = x.slice(0, i);\n\n    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n    return [\n      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n      +x.slice(i + 1)\n    ];\n  }\n\n  function exponent$1(x) {\n    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n  }\n\n  function formatGroup(grouping, thousands) {\n    return function(value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = grouping[j = (j + 1) % grouping.length];\n      }\n\n      return t.reverse().join(thousands);\n    };\n  }\n\n  function formatDefault(x, p) {\n    x = x.toPrecision(p);\n\n    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (x[i]) {\n        case \".\": i0 = i1 = i; break;\n        case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n        case \"e\": break out;\n        default: if (i0 > 0) i0 = 0; break;\n      }\n    }\n\n    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n  }\n\n  var prefixExponent;\n\n  function formatPrefixAuto(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1],\n        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n        n = coefficient.length;\n    return i === n ? coefficient\n        : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n        : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n        : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n  }\n\n  function formatRounded(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n        : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n  }\n\n  var formatTypes = {\n    \"\": formatDefault,\n    \"%\": function(x, p) { return (x * 100).toFixed(p); },\n    \"b\": function(x) { return Math.round(x).toString(2); },\n    \"c\": function(x) { return x + \"\"; },\n    \"d\": function(x) { return Math.round(x).toString(10); },\n    \"e\": function(x, p) { return x.toExponential(p); },\n    \"f\": function(x, p) { return x.toFixed(p); },\n    \"g\": function(x, p) { return x.toPrecision(p); },\n    \"o\": function(x) { return Math.round(x).toString(8); },\n    \"p\": function(x, p) { return formatRounded(x * 100, p); },\n    \"r\": formatRounded,\n    \"s\": formatPrefixAuto,\n    \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n    \"x\": function(x) { return Math.round(x).toString(16); }\n  };\n\n  // [[fill]align][sign][symbol][0][width][,][.precision][type]\n  var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\n  function formatSpecifier(specifier) {\n    return new FormatSpecifier(specifier);\n  }\n\n  function FormatSpecifier(specifier) {\n    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n    var match,\n        fill = match[1] || \" \",\n        align = match[2] || \">\",\n        sign = match[3] || \"-\",\n        symbol = match[4] || \"\",\n        zero = !!match[5],\n        width = match[6] && +match[6],\n        comma = !!match[7],\n        precision = match[8] && +match[8].slice(1),\n        type = match[9] || \"\";\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // Map invalid types to the default format.\n    else if (!formatTypes[type]) type = \"\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    this.fill = fill;\n    this.align = align;\n    this.sign = sign;\n    this.symbol = symbol;\n    this.zero = zero;\n    this.width = width;\n    this.comma = comma;\n    this.precision = precision;\n    this.type = type;\n  }\n\n  FormatSpecifier.prototype.toString = function() {\n    return this.fill\n        + this.align\n        + this.sign\n        + this.symbol\n        + (this.zero ? \"0\" : \"\")\n        + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n        + (this.comma ? \",\" : \"\")\n        + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n        + this.type;\n  };\n\n  var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\n  function identity$3(x) {\n    return x;\n  }\n\n  function formatLocale(locale) {\n    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n        currency = locale.currency,\n        decimal = locale.decimal;\n\n    function newFormat(specifier) {\n      specifier = formatSpecifier(specifier);\n\n      var fill = specifier.fill,\n          align = specifier.align,\n          sign = specifier.sign,\n          symbol = specifier.symbol,\n          zero = specifier.zero,\n          width = specifier.width,\n          comma = specifier.comma,\n          precision = specifier.precision,\n          type = specifier.type;\n\n      // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n      // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n      var formatType = formatTypes[type],\n          maybeSuffix = !type || /[defgprs%]/.test(type);\n\n      // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n      precision = precision == null ? (type ? 6 : 12)\n          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n          : Math.max(0, Math.min(20, precision));\n\n      function format(value) {\n        var valuePrefix = prefix,\n            valueSuffix = suffix,\n            i, n, c;\n\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value;\n\n          // Convert negative to positive, and compute the prefix.\n          // Note that -0 is not less than 0, but 1 / -0 is!\n          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n          // Perform the initial formatting.\n          value = formatType(value, precision);\n\n          // If the original value was negative, it may be rounded to zero during\n          // formatting; treat this as (positive) zero.\n          if (valueNegative) {\n            i = -1, n = value.length;\n            valueNegative = false;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), (48 < c && c < 58)\n                  || (type === \"x\" && 96 < c && c < 103)\n                  || (type === \"X\" && 64 < c && c < 71)) {\n                valueNegative = true;\n                break;\n              }\n            }\n          }\n\n          // Compute the prefix and suffix.\n          valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n          // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n          if (maybeSuffix) {\n            i = -1, n = value.length;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        }\n\n        // If the fill character is not \"0\", grouping is applied before padding.\n        if (comma && !zero) value = group(value, Infinity);\n\n        // Compute the padding.\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n            padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n        // If the fill character is \"0\", grouping is applied after padding.\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n        // Reconstruct the final output based on the desired alignment.\n        switch (align) {\n          case \"<\": return valuePrefix + value + valueSuffix + padding;\n          case \"=\": return valuePrefix + padding + value + valueSuffix;\n          case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n        }\n        return padding + valuePrefix + value + valueSuffix;\n      }\n\n      format.toString = function() {\n        return specifier + \"\";\n      };\n\n      return format;\n    }\n\n    function formatPrefix(specifier, value) {\n      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n          e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n          k = Math.pow(10, -e),\n          prefix = prefixes[8 + e / 3];\n      return function(value) {\n        return f(k * value) + prefix;\n      };\n    }\n\n    return {\n      format: newFormat,\n      formatPrefix: formatPrefix\n    };\n  }\n\n  var locale;\n  exports.format;\n  exports.formatPrefix;\n\n  defaultLocale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  });\n\n  function defaultLocale(definition) {\n    locale = formatLocale(definition);\n    exports.format = locale.format;\n    exports.formatPrefix = locale.formatPrefix;\n    return locale;\n  }\n\n  function precisionFixed(step) {\n    return Math.max(0, -exponent$1(Math.abs(step)));\n  }\n\n  function precisionPrefix(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n  }\n\n  function precisionRound(step, max) {\n    step = Math.abs(step), max = Math.abs(max) - step;\n    return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n  }\n\n  function localDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n      date.setFullYear(d.y);\n      return date;\n    }\n    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n  }\n\n  function utcDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n      date.setUTCFullYear(d.y);\n      return date;\n    }\n    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n  }\n\n  function newYear(y) {\n    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n  }\n\n  function formatLocale$1(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_weekdays = locale.days,\n        locale_shortWeekdays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    var periodRe = formatRe(locale_periods),\n        periodLookup = formatLookup(locale_periods),\n        weekdayRe = formatRe(locale_weekdays),\n        weekdayLookup = formatLookup(locale_weekdays),\n        shortWeekdayRe = formatRe(locale_shortWeekdays),\n        shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n        monthRe = formatRe(locale_months),\n        monthLookup = formatLookup(locale_months),\n        shortMonthRe = formatRe(locale_shortMonths),\n        shortMonthLookup = formatLookup(locale_shortMonths);\n\n    var formats = {\n      \"a\": formatShortWeekday,\n      \"A\": formatWeekday,\n      \"b\": formatShortMonth,\n      \"B\": formatMonth,\n      \"c\": null,\n      \"d\": formatDayOfMonth,\n      \"e\": formatDayOfMonth,\n      \"H\": formatHour24,\n      \"I\": formatHour12,\n      \"j\": formatDayOfYear,\n      \"L\": formatMilliseconds,\n      \"m\": formatMonthNumber,\n      \"M\": formatMinutes,\n      \"p\": formatPeriod,\n      \"S\": formatSeconds,\n      \"U\": formatWeekNumberSunday,\n      \"w\": formatWeekdayNumber,\n      \"W\": formatWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatYear,\n      \"Y\": formatFullYear,\n      \"Z\": formatZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var utcFormats = {\n      \"a\": formatUTCShortWeekday,\n      \"A\": formatUTCWeekday,\n      \"b\": formatUTCShortMonth,\n      \"B\": formatUTCMonth,\n      \"c\": null,\n      \"d\": formatUTCDayOfMonth,\n      \"e\": formatUTCDayOfMonth,\n      \"H\": formatUTCHour24,\n      \"I\": formatUTCHour12,\n      \"j\": formatUTCDayOfYear,\n      \"L\": formatUTCMilliseconds,\n      \"m\": formatUTCMonthNumber,\n      \"M\": formatUTCMinutes,\n      \"p\": formatUTCPeriod,\n      \"S\": formatUTCSeconds,\n      \"U\": formatUTCWeekNumberSunday,\n      \"w\": formatUTCWeekdayNumber,\n      \"W\": formatUTCWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatUTCYear,\n      \"Y\": formatUTCFullYear,\n      \"Z\": formatUTCZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var parses = {\n      \"a\": parseShortWeekday,\n      \"A\": parseWeekday,\n      \"b\": parseShortMonth,\n      \"B\": parseMonth,\n      \"c\": parseLocaleDateTime,\n      \"d\": parseDayOfMonth,\n      \"e\": parseDayOfMonth,\n      \"H\": parseHour24,\n      \"I\": parseHour24,\n      \"j\": parseDayOfYear,\n      \"L\": parseMilliseconds,\n      \"m\": parseMonthNumber,\n      \"M\": parseMinutes,\n      \"p\": parsePeriod,\n      \"S\": parseSeconds,\n      \"U\": parseWeekNumberSunday,\n      \"w\": parseWeekdayNumber,\n      \"W\": parseWeekNumberMonday,\n      \"x\": parseLocaleDate,\n      \"X\": parseLocaleTime,\n      \"y\": parseYear,\n      \"Y\": parseFullYear,\n      \"Z\": parseZone,\n      \"%\": parseLiteralPercent\n    };\n\n    // These recursive directive definitions must be deferred.\n    formats.x = newFormat(locale_date, formats);\n    formats.X = newFormat(locale_time, formats);\n    formats.c = newFormat(locale_dateTime, formats);\n    utcFormats.x = newFormat(locale_date, utcFormats);\n    utcFormats.X = newFormat(locale_time, utcFormats);\n    utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n    function newFormat(specifier, formats) {\n      return function(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            n = specifier.length,\n            c,\n            pad,\n            format;\n\n        if (!(date instanceof Date)) date = new Date(+date);\n\n        while (++i < n) {\n          if (specifier.charCodeAt(i) === 37) {\n            string.push(specifier.slice(j, i));\n            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n            else pad = c === \"e\" ? \" \" : \"0\";\n            if (format = formats[c]) c = format(date, pad);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(specifier.slice(j, i));\n        return string.join(\"\");\n      };\n    }\n\n    function newParse(specifier, newDate) {\n      return function(string) {\n        var d = newYear(1900),\n            i = parseSpecifier(d, specifier, string += \"\", 0);\n        if (i != string.length) return null;\n\n        // The am-pm flag is 0 for AM, and 1 for PM.\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n        // Convert day-of-week and week-of-year to day-of-year.\n        if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n          d.m = 0;\n          d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n        }\n\n        // If a time zone is specified, all fields are interpreted as UTC and then\n        // offset according to the specified time zone.\n        if (\"Z\" in d) {\n          d.H += d.Z / 100 | 0;\n          d.M += d.Z % 100;\n          return utcDate(d);\n        }\n\n        // Otherwise, all fields are in local time.\n        return newDate(d);\n      };\n    }\n\n    function parseSpecifier(d, specifier, string, j) {\n      var i = 0,\n          n = specifier.length,\n          m = string.length,\n          c,\n          parse;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = specifier.charCodeAt(i++);\n        if (c === 37) {\n          c = specifier.charAt(i++);\n          parse = parses[c in pads ? specifier.charAt(i++) : c];\n          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    function parsePeriod(d, string, i) {\n      var n = periodRe.exec(string.slice(i));\n      return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortWeekday(d, string, i) {\n      var n = shortWeekdayRe.exec(string.slice(i));\n      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseWeekday(d, string, i) {\n      var n = weekdayRe.exec(string.slice(i));\n      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortMonth(d, string, i) {\n      var n = shortMonthRe.exec(string.slice(i));\n      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseMonth(d, string, i) {\n      var n = monthRe.exec(string.slice(i));\n      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseLocaleDateTime(d, string, i) {\n      return parseSpecifier(d, locale_dateTime, string, i);\n    }\n\n    function parseLocaleDate(d, string, i) {\n      return parseSpecifier(d, locale_date, string, i);\n    }\n\n    function parseLocaleTime(d, string, i) {\n      return parseSpecifier(d, locale_time, string, i);\n    }\n\n    function formatShortWeekday(d) {\n      return locale_shortWeekdays[d.getDay()];\n    }\n\n    function formatWeekday(d) {\n      return locale_weekdays[d.getDay()];\n    }\n\n    function formatShortMonth(d) {\n      return locale_shortMonths[d.getMonth()];\n    }\n\n    function formatMonth(d) {\n      return locale_months[d.getMonth()];\n    }\n\n    function formatPeriod(d) {\n      return locale_periods[+(d.getHours() >= 12)];\n    }\n\n    function formatUTCShortWeekday(d) {\n      return locale_shortWeekdays[d.getUTCDay()];\n    }\n\n    function formatUTCWeekday(d) {\n      return locale_weekdays[d.getUTCDay()];\n    }\n\n    function formatUTCShortMonth(d) {\n      return locale_shortMonths[d.getUTCMonth()];\n    }\n\n    function formatUTCMonth(d) {\n      return locale_months[d.getUTCMonth()];\n    }\n\n    function formatUTCPeriod(d) {\n      return locale_periods[+(d.getUTCHours() >= 12)];\n    }\n\n    return {\n      format: function(specifier) {\n        var f = newFormat(specifier += \"\", formats);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      parse: function(specifier) {\n        var p = newParse(specifier += \"\", localDate);\n        p.toString = function() { return specifier; };\n        return p;\n      },\n      utcFormat: function(specifier) {\n        var f = newFormat(specifier += \"\", utcFormats);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      utcParse: function(specifier) {\n        var p = newParse(specifier, utcDate);\n        p.toString = function() { return specifier; };\n        return p;\n      }\n    };\n  }\n\n  var pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n  var numberRe = /^\\s*\\d+/;\n  var percentRe = /^%/;\n  var requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  function pad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function requote(s) {\n    return s.replace(requoteRe, \"\\\\$&\");\n  }\n\n  function formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function formatLookup(names) {\n    var map = {}, i = -1, n = names.length;\n    while (++i < n) map[names[i].toLowerCase()] = i;\n    return map;\n  }\n\n  function parseWeekdayNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseFullYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 4));\n    return n ? (d.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n  }\n\n  function parseZone(d, string, i) {\n    var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n  }\n\n  function parseMonthNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function parseDayOfMonth(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseDayOfYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseHour24(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMinutes(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMilliseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseLiteralPercent(d, string, i) {\n    var n = percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function formatDayOfMonth(d, p) {\n    return pad(d.getDate(), p, 2);\n  }\n\n  function formatHour24(d, p) {\n    return pad(d.getHours(), p, 2);\n  }\n\n  function formatHour12(d, p) {\n    return pad(d.getHours() % 12 || 12, p, 2);\n  }\n\n  function formatDayOfYear(d, p) {\n    return pad(1 + day.count(year(d), d), p, 3);\n  }\n\n  function formatMilliseconds(d, p) {\n    return pad(d.getMilliseconds(), p, 3);\n  }\n\n  function formatMonthNumber(d, p) {\n    return pad(d.getMonth() + 1, p, 2);\n  }\n\n  function formatMinutes(d, p) {\n    return pad(d.getMinutes(), p, 2);\n  }\n\n  function formatSeconds(d, p) {\n    return pad(d.getSeconds(), p, 2);\n  }\n\n  function formatWeekNumberSunday(d, p) {\n    return pad(timeWeek.count(year(d), d), p, 2);\n  }\n\n  function formatWeekdayNumber(d) {\n    return d.getDay();\n  }\n\n  function formatWeekNumberMonday(d, p) {\n    return pad(timeMonday.count(year(d), d), p, 2);\n  }\n\n  function formatYear(d, p) {\n    return pad(d.getFullYear() % 100, p, 2);\n  }\n\n  function formatFullYear(d, p) {\n    return pad(d.getFullYear() % 10000, p, 4);\n  }\n\n  function formatZone(d) {\n    var z = d.getTimezoneOffset();\n    return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n        + pad(z / 60 | 0, \"0\", 2)\n        + pad(z % 60, \"0\", 2);\n  }\n\n  function formatUTCDayOfMonth(d, p) {\n    return pad(d.getUTCDate(), p, 2);\n  }\n\n  function formatUTCHour24(d, p) {\n    return pad(d.getUTCHours(), p, 2);\n  }\n\n  function formatUTCHour12(d, p) {\n    return pad(d.getUTCHours() % 12 || 12, p, 2);\n  }\n\n  function formatUTCDayOfYear(d, p) {\n    return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n  }\n\n  function formatUTCMilliseconds(d, p) {\n    return pad(d.getUTCMilliseconds(), p, 3);\n  }\n\n  function formatUTCMonthNumber(d, p) {\n    return pad(d.getUTCMonth() + 1, p, 2);\n  }\n\n  function formatUTCMinutes(d, p) {\n    return pad(d.getUTCMinutes(), p, 2);\n  }\n\n  function formatUTCSeconds(d, p) {\n    return pad(d.getUTCSeconds(), p, 2);\n  }\n\n  function formatUTCWeekNumberSunday(d, p) {\n    return pad(utcWeek.count(utcYear(d), d), p, 2);\n  }\n\n  function formatUTCWeekdayNumber(d) {\n    return d.getUTCDay();\n  }\n\n  function formatUTCWeekNumberMonday(d, p) {\n    return pad(utcMonday.count(utcYear(d), d), p, 2);\n  }\n\n  function formatUTCYear(d, p) {\n    return pad(d.getUTCFullYear() % 100, p, 2);\n  }\n\n  function formatUTCFullYear(d, p) {\n    return pad(d.getUTCFullYear() % 10000, p, 4);\n  }\n\n  function formatUTCZone() {\n    return \"+0000\";\n  }\n\n  function formatLiteralPercent() {\n    return \"%\";\n  }\n\n  var locale$1;\n  exports.timeFormat;\n  exports.timeParse;\n  exports.utcFormat;\n  exports.utcParse;\n\n  defaultLocale$1({\n    dateTime: \"%x, %X\",\n    date: \"%-m/%-d/%Y\",\n    time: \"%-I:%M:%S %p\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n\n  function defaultLocale$1(definition) {\n    locale$1 = formatLocale$1(definition);\n    exports.timeFormat = locale$1.format;\n    exports.timeParse = locale$1.parse;\n    exports.utcFormat = locale$1.utcFormat;\n    exports.utcParse = locale$1.utcParse;\n    return locale$1;\n  }\n\n  var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\n  function formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  var formatIso = Date.prototype.toISOString\n      ? formatIsoNative\n      : exports.utcFormat(isoSpecifier);\n\n  function parseIsoNative(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  }\n\n  var parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n      ? parseIsoNative\n      : exports.utcParse(isoSpecifier);\n\n  var array$2 = Array.prototype;\n\n  var map$2 = array$2.map;\n  var slice$3 = array$2.slice;\n\n  var implicit = {name: \"implicit\"};\n\n  function ordinal(range) {\n    var index = map$1(),\n        domain = [],\n        unknown = implicit;\n\n    range = range == null ? [] : slice$3.call(range);\n\n    function scale(d) {\n      var key = d + \"\", i = index.get(key);\n      if (!i) {\n        if (unknown !== implicit) return unknown;\n        index.set(key, i = domain.push(d));\n      }\n      return range[(i - 1) % range.length];\n    }\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [], index = map$1();\n      var i = -1, n = _.length, d, key;\n      while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n      return scale;\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n    };\n\n    scale.unknown = function(_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n\n    scale.copy = function() {\n      return ordinal()\n          .domain(domain)\n          .range(range)\n          .unknown(unknown);\n    };\n\n    return scale;\n  }\n\n  function band() {\n    var scale = ordinal().unknown(undefined),\n        domain = scale.domain,\n        ordinalRange = scale.range,\n        range$$ = [0, 1],\n        step,\n        bandwidth,\n        round = false,\n        paddingInner = 0,\n        paddingOuter = 0,\n        align = 0.5;\n\n    delete scale.unknown;\n\n    function rescale() {\n      var n = domain().length,\n          reverse = range$$[1] < range$$[0],\n          start = range$$[reverse - 0],\n          stop = range$$[1 - reverse];\n      step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n      if (round) step = Math.floor(step);\n      start += (stop - start - step * (n - paddingInner)) * align;\n      bandwidth = step * (1 - paddingInner);\n      if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n      var values = range(n).map(function(i) { return start + step * i; });\n      return ordinalRange(reverse ? values.reverse() : values);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range$$ = [+_[0], +_[1]], rescale()) : range$$.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range$$ = [+_[0], +_[1]], round = true, rescale();\n    };\n\n    scale.bandwidth = function() {\n      return bandwidth;\n    };\n\n    scale.step = function() {\n      return step;\n    };\n\n    scale.round = function(_) {\n      return arguments.length ? (round = !!_, rescale()) : round;\n    };\n\n    scale.padding = function(_) {\n      return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingInner = function(_) {\n      return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingOuter = function(_) {\n      return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n    };\n\n    scale.align = function(_) {\n      return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n    };\n\n    scale.copy = function() {\n      return band()\n          .domain(domain())\n          .range(range$$)\n          .round(round)\n          .paddingInner(paddingInner)\n          .paddingOuter(paddingOuter)\n          .align(align);\n    };\n\n    return rescale();\n  }\n\n  function pointish(scale) {\n    var copy = scale.copy;\n\n    scale.padding = scale.paddingOuter;\n    delete scale.paddingInner;\n    delete scale.paddingOuter;\n\n    scale.copy = function() {\n      return pointish(copy());\n    };\n\n    return scale;\n  }\n\n  function point$4() {\n    return pointish(band().paddingInner(1));\n  }\n\n  function constant$3(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function number$1(x) {\n    return +x;\n  }\n\n  var unit = [0, 1];\n\n  function deinterpolate(a, b) {\n    return (b -= (a = +a))\n        ? function(x) { return (x - a) / b; }\n        : constant$3(b);\n  }\n\n  function deinterpolateClamp(deinterpolate) {\n    return function(a, b) {\n      var d = deinterpolate(a = +a, b = +b);\n      return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n    };\n  }\n\n  function reinterpolateClamp(reinterpolate) {\n    return function(a, b) {\n      var r = reinterpolate(a = +a, b = +b);\n      return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n    };\n  }\n\n  function bimap(domain, range, deinterpolate, reinterpolate) {\n    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n    if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n    else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n    return function(x) { return r0(d0(x)); };\n  }\n\n  function polymap(domain, range, deinterpolate, reinterpolate) {\n    var j = Math.min(domain.length, range.length) - 1,\n        d = new Array(j),\n        r = new Array(j),\n        i = -1;\n\n    // Reverse descending domains.\n    if (domain[j] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++i < j) {\n      d[i] = deinterpolate(domain[i], domain[i + 1]);\n      r[i] = reinterpolate(range[i], range[i + 1]);\n    }\n\n    return function(x) {\n      var i = bisectRight(domain, x, 1, j) - 1;\n      return r[i](d[i](x));\n    };\n  }\n\n  function copy(source, target) {\n    return target\n        .domain(source.domain())\n        .range(source.range())\n        .interpolate(source.interpolate())\n        .clamp(source.clamp());\n  }\n\n  // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n  // reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n  function continuous(deinterpolate$$, reinterpolate) {\n    var domain = unit,\n        range = unit,\n        interpolate$$ = interpolate,\n        clamp = false,\n        piecewise,\n        output,\n        input;\n\n    function rescale() {\n      piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n      output = input = null;\n      return scale;\n    }\n\n    function scale(x) {\n      return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate$$) : deinterpolate$$, interpolate$$)))(+x);\n    }\n\n    scale.invert = function(y) {\n      return (input || (input = piecewise(range, domain, deinterpolate, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = map$2.call(_, number$1), rescale()) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice$3.call(_), rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range = slice$3.call(_), interpolate$$ = interpolateRound, rescale();\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, rescale()) : clamp;\n    };\n\n    scale.interpolate = function(_) {\n      return arguments.length ? (interpolate$$ = _, rescale()) : interpolate$$;\n    };\n\n    return rescale();\n  }\n\n  function tickFormat(domain, count, specifier) {\n    var start = domain[0],\n        stop = domain[domain.length - 1],\n        step = tickStep(start, stop, count == null ? 10 : count),\n        precision;\n    specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n    switch (specifier.type) {\n      case \"s\": {\n        var value = Math.max(Math.abs(start), Math.abs(stop));\n        if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n        return exports.formatPrefix(specifier, value);\n      }\n      case \"\":\n      case \"e\":\n      case \"g\":\n      case \"p\":\n      case \"r\": {\n        if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n        break;\n      }\n      case \"f\":\n      case \"%\": {\n        if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n        break;\n      }\n    }\n    return exports.format(specifier);\n  }\n\n  function linearish(scale) {\n    var domain = scale.domain;\n\n    scale.ticks = function(count) {\n      var d = domain();\n      return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return tickFormat(domain(), count, specifier);\n    };\n\n    scale.nice = function(count) {\n      var d = domain(),\n          i = d.length - 1,\n          n = count == null ? 10 : count,\n          start = d[0],\n          stop = d[i],\n          step = tickStep(start, stop, n);\n\n      if (step) {\n        step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n        d[0] = Math.floor(start / step) * step;\n        d[i] = Math.ceil(stop / step) * step;\n        domain(d);\n      }\n\n      return scale;\n    };\n\n    return scale;\n  }\n\n  function linear$2() {\n    var scale = continuous(deinterpolate, interpolateNumber);\n\n    scale.copy = function() {\n      return copy(scale, linear$2());\n    };\n\n    return linearish(scale);\n  }\n\n  function identity$4() {\n    var domain = [0, 1];\n\n    function scale(x) {\n      return +x;\n    }\n\n    scale.invert = scale;\n\n    scale.domain = scale.range = function(_) {\n      return arguments.length ? (domain = map$2.call(_, number$1), scale) : domain.slice();\n    };\n\n    scale.copy = function() {\n      return identity$4().domain(domain);\n    };\n\n    return linearish(scale);\n  }\n\n  function nice(domain, interval) {\n    domain = domain.slice();\n\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        t;\n\n    if (x1 < x0) {\n      t = i0, i0 = i1, i1 = t;\n      t = x0, x0 = x1, x1 = t;\n    }\n\n    domain[i0] = interval.floor(x0);\n    domain[i1] = interval.ceil(x1);\n    return domain;\n  }\n\n  function deinterpolate$1(a, b) {\n    return (b = Math.log(b / a))\n        ? function(x) { return Math.log(x / a) / b; }\n        : constant$3(b);\n  }\n\n  function reinterpolate(a, b) {\n    return a < 0\n        ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n        : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n  }\n\n  function pow10(x) {\n    return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n  }\n\n  function powp(base) {\n    return base === 10 ? pow10\n        : base === Math.E ? Math.exp\n        : function(x) { return Math.pow(base, x); };\n  }\n\n  function logp(base) {\n    return base === Math.E ? Math.log\n        : base === 10 && Math.log10\n        || base === 2 && Math.log2\n        || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n  }\n\n  function reflect(f) {\n    return function(x) {\n      return -f(-x);\n    };\n  }\n\n  function log() {\n    var scale = continuous(deinterpolate$1, reinterpolate).domain([1, 10]),\n        domain = scale.domain,\n        base = 10,\n        logs = logp(10),\n        pows = powp(10);\n\n    function rescale() {\n      logs = logp(base), pows = powp(base);\n      if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n      return scale;\n    }\n\n    scale.base = function(_) {\n      return arguments.length ? (base = +_, rescale()) : base;\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.ticks = function(count) {\n      var d = domain(),\n          u = d[0],\n          v = d[d.length - 1],\n          r;\n\n      if (r = v < u) i = u, u = v, v = i;\n\n      var i = logs(u),\n          j = logs(v),\n          p,\n          k,\n          t,\n          n = count == null ? 10 : +count,\n          z = [];\n\n      if (!(base % 1) && j - i < n) {\n        i = Math.round(i) - 1, j = Math.round(j) + 1;\n        if (u > 0) for (; i < j; ++i) {\n          for (k = 1, p = pows(i); k < base; ++k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        } else for (; i < j; ++i) {\n          for (k = base - 1, p = pows(i); k >= 1; --k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        }\n      } else {\n        z = ticks(i, j, Math.min(j - i, n)).map(pows);\n      }\n\n      return r ? z.reverse() : z;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n      if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n      if (count === Infinity) return specifier;\n      if (count == null) count = 10;\n      var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n      return function(d) {\n        var i = d / pows(Math.round(logs(d)));\n        if (i * base < base - 0.5) i *= base;\n        return i <= k ? specifier(d) : \"\";\n      };\n    };\n\n    scale.nice = function() {\n      return domain(nice(domain(), {\n        floor: function(x) { return pows(Math.floor(logs(x))); },\n        ceil: function(x) { return pows(Math.ceil(logs(x))); }\n      }));\n    };\n\n    scale.copy = function() {\n      return copy(scale, log().base(base));\n    };\n\n    return scale;\n  }\n\n  function raise(x, exponent) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  }\n\n  function pow() {\n    var exponent = 1,\n        scale = continuous(deinterpolate, reinterpolate),\n        domain = scale.domain;\n\n    function deinterpolate(a, b) {\n      return (b = raise(b, exponent) - (a = raise(a, exponent)))\n          ? function(x) { return (raise(x, exponent) - a) / b; }\n          : constant$3(b);\n    }\n\n    function reinterpolate(a, b) {\n      b = raise(b, exponent) - (a = raise(a, exponent));\n      return function(t) { return raise(a + b * t, 1 / exponent); };\n    }\n\n    scale.exponent = function(_) {\n      return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n    };\n\n    scale.copy = function() {\n      return copy(scale, pow().exponent(exponent));\n    };\n\n    return linearish(scale);\n  }\n\n  function sqrt() {\n    return pow().exponent(0.5);\n  }\n\n  function quantile() {\n    var domain = [],\n        range = [],\n        thresholds = [];\n\n    function rescale() {\n      var i = 0, n = Math.max(1, range.length);\n      thresholds = new Array(n - 1);\n      while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n    }\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN] : [\n        i > 0 ? thresholds[i - 1] : domain[0],\n        i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n      ];\n    };\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [];\n      for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n      domain.sort(ascending);\n      return rescale();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice$3.call(_), rescale()) : range.slice();\n    };\n\n    scale.quantiles = function() {\n      return thresholds.slice();\n    };\n\n    scale.copy = function() {\n      return quantile()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\n  function quantize$1() {\n    var x0 = 0,\n        x1 = 1,\n        n = 1,\n        domain = [0.5],\n        range = [0, 1];\n\n    function scale(x) {\n      if (x <= x) return range[bisectRight(domain, x, 0, n)];\n    }\n\n    function rescale() {\n      var i = -1;\n      domain = new Array(n);\n      while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n      return scale;\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (n = (range = slice$3.call(_)).length - 1, rescale()) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN]\n          : i < 1 ? [x0, domain[0]]\n          : i >= n ? [domain[n - 1], x1]\n          : [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return quantize$1()\n          .domain([x0, x1])\n          .range(range);\n    };\n\n    return linearish(scale);\n  }\n\n  function threshold$1() {\n    var domain = [0.5],\n        range = [0, 1],\n        n = 1;\n\n    function scale(x) {\n      if (x <= x) return range[bisectRight(domain, x, 0, n)];\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice$3.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return threshold$1()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\nvar   durationSecond$1 = 1000;\nvar   durationMinute$1 = durationSecond$1 * 60;\nvar   durationHour$1 = durationMinute$1 * 60;\nvar   durationDay$1 = durationHour$1 * 24;\nvar   durationWeek$1 = durationDay$1 * 7;\n  var durationMonth = durationDay$1 * 30;\n  var durationYear = durationDay$1 * 365;\n  function date$1(t) {\n    return new Date(t);\n  }\n\n  function number$2(t) {\n    return t instanceof Date ? +t : +new Date(+t);\n  }\n\n  function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n    var scale = continuous(deinterpolate, interpolateNumber),\n        invert = scale.invert,\n        domain = scale.domain;\n\n    var formatMillisecond = format(\".%L\"),\n        formatSecond = format(\":%S\"),\n        formatMinute = format(\"%I:%M\"),\n        formatHour = format(\"%I %p\"),\n        formatDay = format(\"%a %d\"),\n        formatWeek = format(\"%b %d\"),\n        formatMonth = format(\"%B\"),\n        formatYear = format(\"%Y\");\n\n    var tickIntervals = [\n      [second,  1,      durationSecond$1],\n      [second,  5,  5 * durationSecond$1],\n      [second, 15, 15 * durationSecond$1],\n      [second, 30, 30 * durationSecond$1],\n      [minute,  1,      durationMinute$1],\n      [minute,  5,  5 * durationMinute$1],\n      [minute, 15, 15 * durationMinute$1],\n      [minute, 30, 30 * durationMinute$1],\n      [  hour,  1,      durationHour$1  ],\n      [  hour,  3,  3 * durationHour$1  ],\n      [  hour,  6,  6 * durationHour$1  ],\n      [  hour, 12, 12 * durationHour$1  ],\n      [   day,  1,      durationDay$1   ],\n      [   day,  2,  2 * durationDay$1   ],\n      [  week,  1,      durationWeek$1  ],\n      [ month,  1,      durationMonth ],\n      [ month,  3,  3 * durationMonth ],\n      [  year,  1,      durationYear  ]\n    ];\n\n    function tickFormat(date) {\n      return (second(date) < date ? formatMillisecond\n          : minute(date) < date ? formatSecond\n          : hour(date) < date ? formatMinute\n          : day(date) < date ? formatHour\n          : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n          : year(date) < date ? formatMonth\n          : formatYear)(date);\n    }\n\n    function tickInterval(interval, start, stop, step) {\n      if (interval == null) interval = 10;\n\n      // If a desired tick count is specified, pick a reasonable tick interval\n      // based on the extent of the domain and a rough estimate of tick size.\n      // Otherwise, assume interval is already a time interval and use it.\n      if (typeof interval === \"number\") {\n        var target = Math.abs(stop - start) / interval,\n            i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n        if (i === tickIntervals.length) {\n          step = tickStep(start / durationYear, stop / durationYear, interval);\n          interval = year;\n        } else if (i) {\n          i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n          step = i[1];\n          interval = i[0];\n        } else {\n          step = tickStep(start, stop, interval);\n          interval = millisecond;\n        }\n      }\n\n      return step == null ? interval : interval.every(step);\n    }\n\n    scale.invert = function(y) {\n      return new Date(invert(y));\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? domain(map$2.call(_, number$2)) : domain().map(date$1);\n    };\n\n    scale.ticks = function(interval, step) {\n      var d = domain(),\n          t0 = d[0],\n          t1 = d[d.length - 1],\n          r = t1 < t0,\n          t;\n      if (r) t = t0, t0 = t1, t1 = t;\n      t = tickInterval(interval, t0, t1, step);\n      t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n      return r ? t.reverse() : t;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return specifier == null ? tickFormat : format(specifier);\n    };\n\n    scale.nice = function(interval, step) {\n      var d = domain();\n      return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n          ? domain(nice(d, interval))\n          : scale;\n    };\n\n    scale.copy = function() {\n      return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n    };\n\n    return scale;\n  }\n\n  function time() {\n    return calendar(year, month, timeWeek, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n  }\n\n  function utcTime() {\n    return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n  }\n\n  function colors(s) {\n    return s.match(/.{6}/g).map(function(x) {\n      return \"#\" + x;\n    });\n  }\n\n  var category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\n  var category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\n  var category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\n  var category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\n  var cubehelix$3 = interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\n  var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\n  var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\n  var rainbow = cubehelix();\n\n  function rainbow$1(t) {\n    if (t < 0 || t > 1) t -= Math.floor(t);\n    var ts = Math.abs(t - 0.5);\n    rainbow.h = 360 * t - 100;\n    rainbow.s = 1.5 - 1.5 * ts;\n    rainbow.l = 0.8 - 0.9 * ts;\n    return rainbow + \"\";\n  }\n\n  function ramp(range) {\n    var n = range.length;\n    return function(t) {\n      return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n    };\n  }\n\n  var viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\n  var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\n  var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\n  var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\n  function sequential(interpolator) {\n    var x0 = 0,\n        x1 = 1,\n        clamp = false;\n\n    function scale(x) {\n      var t = (x - x0) / (x1 - x0);\n      return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, scale) : clamp;\n    };\n\n    scale.interpolator = function(_) {\n      return arguments.length ? (interpolator = _, scale) : interpolator;\n    };\n\n    scale.copy = function() {\n      return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n    };\n\n    return linearish(scale);\n  }\n\n  var xhtml = \"http://www.w3.org/1999/xhtml\";\n\n  var namespaces = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: xhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n\n  function namespace(name) {\n    var prefix = name += \"\", i = prefix.indexOf(\":\");\n    if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n    return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n  }\n\n  function creatorInherit(name) {\n    return function() {\n      var document = this.ownerDocument,\n          uri = this.namespaceURI;\n      return uri === xhtml && document.documentElement.namespaceURI === xhtml\n          ? document.createElement(name)\n          : document.createElementNS(uri, name);\n    };\n  }\n\n  function creatorFixed(fullname) {\n    return function() {\n      return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n    };\n  }\n\n  function creator(name) {\n    var fullname = namespace(name);\n    return (fullname.local\n        ? creatorFixed\n        : creatorInherit)(fullname);\n  }\n\n  var nextId = 0;\n\n  function local() {\n    return new Local;\n  }\n\n  function Local() {\n    this._ = \"@\" + (++nextId).toString(36);\n  }\n\n  Local.prototype = local.prototype = {\n    constructor: Local,\n    get: function(node) {\n      var id = this._;\n      while (!(id in node)) if (!(node = node.parentNode)) return;\n      return node[id];\n    },\n    set: function(node, value) {\n      return node[this._] = value;\n    },\n    remove: function(node) {\n      return this._ in node && delete node[this._];\n    },\n    toString: function() {\n      return this._;\n    }\n  };\n\n  var matcher = function(selector) {\n    return function() {\n      return this.matches(selector);\n    };\n  };\n\n  if (typeof document !== \"undefined\") {\n    var element = document.documentElement;\n    if (!element.matches) {\n      var vendorMatches = element.webkitMatchesSelector\n          || element.msMatchesSelector\n          || element.mozMatchesSelector\n          || element.oMatchesSelector;\n      matcher = function(selector) {\n        return function() {\n          return vendorMatches.call(this, selector);\n        };\n      };\n    }\n  }\n\n  var matcher$1 = matcher;\n\n  var filterEvents = {};\n\n  exports.event = null;\n\n  if (typeof document !== \"undefined\") {\n    var element$1 = document.documentElement;\n    if (!(\"onmouseenter\" in element$1)) {\n      filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n    }\n  }\n\n  function filterContextListener(listener, index, group) {\n    listener = contextListener(listener, index, group);\n    return function(event) {\n      var related = event.relatedTarget;\n      if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n        listener.call(this, event);\n      }\n    };\n  }\n\n  function contextListener(listener, index, group) {\n    return function(event1) {\n      var event0 = exports.event; // Events can be reentrant (e.g., focus).\n      exports.event = event1;\n      try {\n        listener.call(this, this.__data__, index, group);\n      } finally {\n        exports.event = event0;\n      }\n    };\n  }\n\n  function parseTypenames$1(typenames) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      return {type: t, name: name};\n    });\n  }\n\n  function onRemove(typename) {\n    return function() {\n      var on = this.__on;\n      if (!on) return;\n      for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n        if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n        } else {\n          on[++i] = o;\n        }\n      }\n      if (++i) on.length = i;\n      else delete this.__on;\n    };\n  }\n\n  function onAdd(typename, value, capture) {\n    var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n    return function(d, i, group) {\n      var on = this.__on, o, listener = wrap(value, i, group);\n      if (on) for (var j = 0, m = on.length; j < m; ++j) {\n        if ((o = on[j]).type === typename.type && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n          this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n          o.value = value;\n          return;\n        }\n      }\n      this.addEventListener(typename.type, listener, capture);\n      o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n      if (!on) this.__on = [o];\n      else on.push(o);\n    };\n  }\n\n  function selection_on(typename, value, capture) {\n    var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n    if (arguments.length < 2) {\n      var on = this.node().__on;\n      if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n        for (i = 0, o = on[j]; i < n; ++i) {\n          if ((t = typenames[i]).type === o.type && t.name === o.name) {\n            return o.value;\n          }\n        }\n      }\n      return;\n    }\n\n    on = value ? onAdd : onRemove;\n    if (capture == null) capture = false;\n    for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n    return this;\n  }\n\n  function customEvent(event1, listener, that, args) {\n    var event0 = exports.event;\n    event1.sourceEvent = exports.event;\n    exports.event = event1;\n    try {\n      return listener.apply(that, args);\n    } finally {\n      exports.event = event0;\n    }\n  }\n\n  function sourceEvent() {\n    var current = exports.event, source;\n    while (source = current.sourceEvent) current = source;\n    return current;\n  }\n\n  function point$5(node, event) {\n    var svg = node.ownerSVGElement || node;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = node.getBoundingClientRect();\n    return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n  }\n\n  function mouse(node) {\n    var event = sourceEvent();\n    if (event.changedTouches) event = event.changedTouches[0];\n    return point$5(node, event);\n  }\n\n  function none$2() {}\n\n  function selector(selector) {\n    return selector == null ? none$2 : function() {\n      return this.querySelector(selector);\n    };\n  }\n\n  function selection_select(select) {\n    if (typeof select !== \"function\") select = selector(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          subgroup[i] = subnode;\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function empty() {\n    return [];\n  }\n\n  function selectorAll(selector) {\n    return selector == null ? empty : function() {\n      return this.querySelectorAll(selector);\n    };\n  }\n\n  function selection_selectAll(select) {\n    if (typeof select !== \"function\") select = selectorAll(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          subgroups.push(select.call(node, node.__data__, i, group));\n          parents.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, parents);\n  }\n\n  function selection_filter(match) {\n    if (typeof match !== \"function\") match = matcher$1(match);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function sparse(update) {\n    return new Array(update.length);\n  }\n\n  function selection_enter() {\n    return new Selection(this._enter || this._groups.map(sparse), this._parents);\n  }\n\n  function EnterNode(parent, datum) {\n    this.ownerDocument = parent.ownerDocument;\n    this.namespaceURI = parent.namespaceURI;\n    this._next = null;\n    this._parent = parent;\n    this.__data__ = datum;\n  }\n\n  EnterNode.prototype = {\n    constructor: EnterNode,\n    appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n    insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n    querySelector: function(selector) { return this._parent.querySelector(selector); },\n    querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n  };\n\n  function constant$4(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  var keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\n  function bindIndex(parent, group, enter, update, exit, data) {\n    var i = 0,\n        node,\n        groupLength = group.length,\n        dataLength = data.length;\n\n    // Put any non-null nodes that fit into update.\n    // Put any null nodes into enter.\n    // Put any remaining data into enter.\n    for (; i < dataLength; ++i) {\n      if (node = group[i]) {\n        node.__data__ = data[i];\n        update[i] = node;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Put any non-null nodes that don’t fit into exit.\n    for (; i < groupLength; ++i) {\n      if (node = group[i]) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function bindKey(parent, group, enter, update, exit, data, key) {\n    var i,\n        node,\n        nodeByKeyValue = {},\n        groupLength = group.length,\n        dataLength = data.length,\n        keyValues = new Array(groupLength),\n        keyValue;\n\n    // Compute the key for each node.\n    // If multiple nodes have the same key, the duplicates are added to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if (node = group[i]) {\n        keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n        if (keyValue in nodeByKeyValue) {\n          exit[i] = node;\n        } else {\n          nodeByKeyValue[keyValue] = node;\n        }\n      }\n    }\n\n    // Compute the key for each datum.\n    // If there a node associated with this key, join and add it to update.\n    // If there is not (or the key is a duplicate), add it to enter.\n    for (i = 0; i < dataLength; ++i) {\n      keyValue = keyPrefix + key.call(parent, data[i], i, data);\n      if (node = nodeByKeyValue[keyValue]) {\n        update[i] = node;\n        node.__data__ = data[i];\n        nodeByKeyValue[keyValue] = null;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Add any remaining nodes that were not bound to data to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function selection_data(value, key) {\n    if (!value) {\n      data = new Array(this.size()), j = -1;\n      this.each(function(d) { data[++j] = d; });\n      return data;\n    }\n\n    var bind = key ? bindKey : bindIndex,\n        parents = this._parents,\n        groups = this._groups;\n\n    if (typeof value !== \"function\") value = constant$4(value);\n\n    for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n      var parent = parents[j],\n          group = groups[j],\n          groupLength = group.length,\n          data = value.call(parent, parent && parent.__data__, j, parents),\n          dataLength = data.length,\n          enterGroup = enter[j] = new Array(dataLength),\n          updateGroup = update[j] = new Array(dataLength),\n          exitGroup = exit[j] = new Array(groupLength);\n\n      bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n      // Now connect the enter nodes to their following update node, such that\n      // appendChild can insert the materialized enter node before this node,\n      // rather than at the end of the parent node.\n      for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n        if (previous = enterGroup[i0]) {\n          if (i0 >= i1) i1 = i0 + 1;\n          while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n          previous._next = next || null;\n        }\n      }\n    }\n\n    update = new Selection(update, parents);\n    update._enter = enter;\n    update._exit = exit;\n    return update;\n  }\n\n  function selection_exit() {\n    return new Selection(this._exit || this._groups.map(sparse), this._parents);\n  }\n\n  function selection_merge(selection) {\n\n    for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group0[i] || group1[i]) {\n          merge[i] = node;\n        }\n      }\n    }\n\n    for (; j < m0; ++j) {\n      merges[j] = groups0[j];\n    }\n\n    return new Selection(merges, this._parents);\n  }\n\n  function selection_order() {\n\n    for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n      for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function selection_sort(compare) {\n    if (!compare) compare = ascending$2;\n\n    function compareNode(a, b) {\n      return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n    }\n\n    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          sortgroup[i] = node;\n        }\n      }\n      sortgroup.sort(compareNode);\n    }\n\n    return new Selection(sortgroups, this._parents).order();\n  }\n\n  function ascending$2(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function selection_call() {\n    var callback = arguments[0];\n    arguments[0] = this;\n    callback.apply(null, arguments);\n    return this;\n  }\n\n  function selection_nodes() {\n    var nodes = new Array(this.size()), i = -1;\n    this.each(function() { nodes[++i] = this; });\n    return nodes;\n  }\n\n  function selection_node() {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  }\n\n  function selection_size() {\n    var size = 0;\n    this.each(function() { ++size; });\n    return size;\n  }\n\n  function selection_empty() {\n    return !this.node();\n  }\n\n  function selection_each(callback) {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n        if (node = group[i]) callback.call(node, node.__data__, i, group);\n      }\n    }\n\n    return this;\n  }\n\n  function attrRemove(name) {\n    return function() {\n      this.removeAttribute(name);\n    };\n  }\n\n  function attrRemoveNS(fullname) {\n    return function() {\n      this.removeAttributeNS(fullname.space, fullname.local);\n    };\n  }\n\n  function attrConstant(name, value) {\n    return function() {\n      this.setAttribute(name, value);\n    };\n  }\n\n  function attrConstantNS(fullname, value) {\n    return function() {\n      this.setAttributeNS(fullname.space, fullname.local, value);\n    };\n  }\n\n  function attrFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttribute(name);\n      else this.setAttribute(name, v);\n    };\n  }\n\n  function attrFunctionNS(fullname, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n      else this.setAttributeNS(fullname.space, fullname.local, v);\n    };\n  }\n\n  function selection_attr(name, value) {\n    var fullname = namespace(name);\n\n    if (arguments.length < 2) {\n      var node = this.node();\n      return fullname.local\n          ? node.getAttributeNS(fullname.space, fullname.local)\n          : node.getAttribute(fullname);\n    }\n\n    return this.each((value == null\n        ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n        ? (fullname.local ? attrFunctionNS : attrFunction)\n        : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n  }\n\n  function window(node) {\n    return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n        || (node.document && node) // node is a Window\n        || node.defaultView; // node is a Document\n  }\n\n  function styleRemove(name) {\n    return function() {\n      this.style.removeProperty(name);\n    };\n  }\n\n  function styleConstant(name, value, priority) {\n    return function() {\n      this.style.setProperty(name, value, priority);\n    };\n  }\n\n  function styleFunction(name, value, priority) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.style.removeProperty(name);\n      else this.style.setProperty(name, v, priority);\n    };\n  }\n\n  function selection_style(name, value, priority) {\n    var node;\n    return arguments.length > 1\n        ? this.each((value == null\n              ? styleRemove : typeof value === \"function\"\n              ? styleFunction\n              : styleConstant)(name, value, priority == null ? \"\" : priority))\n        : window(node = this.node())\n            .getComputedStyle(node, null)\n            .getPropertyValue(name);\n  }\n\n  function propertyRemove(name) {\n    return function() {\n      delete this[name];\n    };\n  }\n\n  function propertyConstant(name, value) {\n    return function() {\n      this[name] = value;\n    };\n  }\n\n  function propertyFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) delete this[name];\n      else this[name] = v;\n    };\n  }\n\n  function selection_property(name, value) {\n    return arguments.length > 1\n        ? this.each((value == null\n            ? propertyRemove : typeof value === \"function\"\n            ? propertyFunction\n            : propertyConstant)(name, value))\n        : this.node()[name];\n  }\n\n  function classArray(string) {\n    return string.trim().split(/^|\\s+/);\n  }\n\n  function classList(node) {\n    return node.classList || new ClassList(node);\n  }\n\n  function ClassList(node) {\n    this._node = node;\n    this._names = classArray(node.getAttribute(\"class\") || \"\");\n  }\n\n  ClassList.prototype = {\n    add: function(name) {\n      var i = this._names.indexOf(name);\n      if (i < 0) {\n        this._names.push(name);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    remove: function(name) {\n      var i = this._names.indexOf(name);\n      if (i >= 0) {\n        this._names.splice(i, 1);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    contains: function(name) {\n      return this._names.indexOf(name) >= 0;\n    }\n  };\n\n  function classedAdd(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.add(names[i]);\n  }\n\n  function classedRemove(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.remove(names[i]);\n  }\n\n  function classedTrue(names) {\n    return function() {\n      classedAdd(this, names);\n    };\n  }\n\n  function classedFalse(names) {\n    return function() {\n      classedRemove(this, names);\n    };\n  }\n\n  function classedFunction(names, value) {\n    return function() {\n      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n    };\n  }\n\n  function selection_classed(name, value) {\n    var names = classArray(name + \"\");\n\n    if (arguments.length < 2) {\n      var list = classList(this.node()), i = -1, n = names.length;\n      while (++i < n) if (!list.contains(names[i])) return false;\n      return true;\n    }\n\n    return this.each((typeof value === \"function\"\n        ? classedFunction : value\n        ? classedTrue\n        : classedFalse)(names, value));\n  }\n\n  function textRemove() {\n    this.textContent = \"\";\n  }\n\n  function textConstant(value) {\n    return function() {\n      this.textContent = value;\n    };\n  }\n\n  function textFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_text(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? textRemove : (typeof value === \"function\"\n            ? textFunction\n            : textConstant)(value))\n        : this.node().textContent;\n  }\n\n  function htmlRemove() {\n    this.innerHTML = \"\";\n  }\n\n  function htmlConstant(value) {\n    return function() {\n      this.innerHTML = value;\n    };\n  }\n\n  function htmlFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_html(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? htmlRemove : (typeof value === \"function\"\n            ? htmlFunction\n            : htmlConstant)(value))\n        : this.node().innerHTML;\n  }\n\n  function raise$1() {\n    if (this.nextSibling) this.parentNode.appendChild(this);\n  }\n\n  function selection_raise() {\n    return this.each(raise$1);\n  }\n\n  function lower() {\n    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n  }\n\n  function selection_lower() {\n    return this.each(lower);\n  }\n\n  function selection_append(name) {\n    var create = typeof name === \"function\" ? name : creator(name);\n    return this.select(function() {\n      return this.appendChild(create.apply(this, arguments));\n    });\n  }\n\n  function constantNull() {\n    return null;\n  }\n\n  function selection_insert(name, before) {\n    var create = typeof name === \"function\" ? name : creator(name),\n        select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n    return this.select(function() {\n      return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n    });\n  }\n\n  function remove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  function selection_remove() {\n    return this.each(remove);\n  }\n\n  function selection_datum(value) {\n    return arguments.length\n        ? this.property(\"__data__\", value)\n        : this.node().__data__;\n  }\n\n  function dispatchEvent(node, type, params) {\n    var window$$ = window(node),\n        event = window$$.CustomEvent;\n\n    if (event) {\n      event = new event(type, params);\n    } else {\n      event = window$$.document.createEvent(\"Event\");\n      if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n      else event.initEvent(type, false, false);\n    }\n\n    node.dispatchEvent(event);\n  }\n\n  function dispatchConstant(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params);\n    };\n  }\n\n  function dispatchFunction(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params.apply(this, arguments));\n    };\n  }\n\n  function selection_dispatch(type, params) {\n    return this.each((typeof params === \"function\"\n        ? dispatchFunction\n        : dispatchConstant)(type, params));\n  }\n\n  var root = [null];\n\n  function Selection(groups, parents) {\n    this._groups = groups;\n    this._parents = parents;\n  }\n\n  function selection() {\n    return new Selection([[document.documentElement]], root);\n  }\n\n  Selection.prototype = selection.prototype = {\n    constructor: Selection,\n    select: selection_select,\n    selectAll: selection_selectAll,\n    filter: selection_filter,\n    data: selection_data,\n    enter: selection_enter,\n    exit: selection_exit,\n    merge: selection_merge,\n    order: selection_order,\n    sort: selection_sort,\n    call: selection_call,\n    nodes: selection_nodes,\n    node: selection_node,\n    size: selection_size,\n    empty: selection_empty,\n    each: selection_each,\n    attr: selection_attr,\n    style: selection_style,\n    property: selection_property,\n    classed: selection_classed,\n    text: selection_text,\n    html: selection_html,\n    raise: selection_raise,\n    lower: selection_lower,\n    append: selection_append,\n    insert: selection_insert,\n    remove: selection_remove,\n    datum: selection_datum,\n    on: selection_on,\n    dispatch: selection_dispatch\n  };\n\n  function select(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n        : new Selection([[selector]], root);\n  }\n\n  function selectAll(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n        : new Selection([selector == null ? [] : selector], root);\n  }\n\n  function touch(node, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n    for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return point$5(node, touch);\n      }\n    }\n\n    return null;\n  }\n\n  function touches(node, touches) {\n    if (touches == null) touches = sourceEvent().touches;\n\n    for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n      points[i] = point$5(node, touches[i]);\n    }\n\n    return points;\n  }\n\n  var emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n  var emptyTween = [];\n\n  var CREATED = 0;\n  var SCHEDULED = 1;\n  var STARTING = 2;\n  var STARTED = 3;\n  var ENDING = 4;\n  var ENDED = 5;\n\n  function schedule(node, name, id, index, group, timing) {\n    var schedules = node.__transition;\n    if (!schedules) node.__transition = {};\n    else if (id in schedules) return;\n    create(node, id, {\n      name: name,\n      index: index, // For context during callback.\n      group: group, // For context during callback.\n      on: emptyOn,\n      tween: emptyTween,\n      time: timing.time,\n      delay: timing.delay,\n      duration: timing.duration,\n      ease: timing.ease,\n      timer: null,\n      state: CREATED\n    });\n  }\n\n  function init(node, id) {\n    var schedule = node.__transition;\n    if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n    return schedule;\n  }\n\n  function set$2(node, id) {\n    var schedule = node.__transition;\n    if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n    return schedule;\n  }\n\n  function get$1(node, id) {\n    var schedule = node.__transition;\n    if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n    return schedule;\n  }\n\n  function create(node, id, self) {\n    var schedules = node.__transition,\n        tween;\n\n    // Initialize the self timer when the transition is created.\n    // Note the actual delay is not known until the first callback!\n    schedules[id] = self;\n    self.timer = timer(schedule, 0, self.time);\n\n    // If the delay is greater than this first sleep, sleep some more;\n    // otherwise, start immediately.\n    function schedule(elapsed) {\n      self.state = SCHEDULED;\n      if (self.delay <= elapsed) start(elapsed - self.delay);\n      else self.timer.restart(start, self.delay, self.time);\n    }\n\n    function start(elapsed) {\n      var i, j, n, o;\n\n      for (i in schedules) {\n        o = schedules[i];\n        if (o.name !== self.name) continue;\n\n        // Interrupt the active transition, if any.\n        // Dispatch the interrupt event.\n        if (o.state === STARTED) {\n          o.state = ENDED;\n          o.timer.stop();\n          o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n          delete schedules[i];\n        }\n\n        // Cancel any pre-empted transitions. No interrupt event is dispatched\n        // because the cancelled transitions never started. Note that this also\n        // removes this transition from the pending list!\n        else if (+i < id) {\n          o.state = ENDED;\n          o.timer.stop();\n          delete schedules[i];\n        }\n      }\n\n      // Defer the first tick to end of the current frame; see mbostock/d3#1576.\n      // Note the transition may be canceled after start and before the first tick!\n      // Note this must be scheduled before the start event; see d3/d3-transition#16!\n      // Assuming this is successful, subsequent callbacks go straight to tick.\n      timeout$1(function() {\n        if (self.state === STARTED) {\n          self.timer.restart(tick, self.delay, self.time);\n          tick(elapsed);\n        }\n      });\n\n      // Dispatch the start event.\n      // Note this must be done before the tween are initialized.\n      self.state = STARTING;\n      self.on.call(\"start\", node, node.__data__, self.index, self.group);\n      if (self.state !== STARTING) return; // interrupted\n      self.state = STARTED;\n\n      // Initialize the tween, deleting null tween.\n      tween = new Array(n = self.tween.length);\n      for (i = 0, j = -1; i < n; ++i) {\n        if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n          tween[++j] = o;\n        }\n      }\n      tween.length = j + 1;\n    }\n\n    function tick(elapsed) {\n      var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.state = ENDING, 1),\n          i = -1,\n          n = tween.length;\n\n      while (++i < n) {\n        tween[i].call(null, t);\n      }\n\n      // Dispatch the end event.\n      if (self.state === ENDING) {\n        self.state = ENDED;\n        self.timer.stop();\n        self.on.call(\"end\", node, node.__data__, self.index, self.group);\n        for (i in schedules) if (+i !== id) return void delete schedules[id];\n        delete node.__transition;\n      }\n    }\n  }\n\n  function interrupt(node, name) {\n    var schedules = node.__transition,\n        schedule,\n        active,\n        empty = true,\n        i;\n\n    if (!schedules) return;\n\n    name = name == null ? null : name + \"\";\n\n    for (i in schedules) {\n      if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n      active = schedule.state === STARTED;\n      schedule.state = ENDED;\n      schedule.timer.stop();\n      if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n      delete schedules[i];\n    }\n\n    if (empty) delete node.__transition;\n  }\n\n  function selection_interrupt(name) {\n    return this.each(function() {\n      interrupt(this, name);\n    });\n  }\n\n  function tweenRemove(id, name) {\n    var tween0, tween1;\n    return function() {\n      var schedule = set$2(this, id),\n          tween = schedule.tween;\n\n      // If this node shared tween with the previous node,\n      // just assign the updated shared tween and we’re done!\n      // Otherwise, copy-on-write.\n      if (tween !== tween0) {\n        tween1 = tween0 = tween;\n        for (var i = 0, n = tween1.length; i < n; ++i) {\n          if (tween1[i].name === name) {\n            tween1 = tween1.slice();\n            tween1.splice(i, 1);\n            break;\n          }\n        }\n      }\n\n      schedule.tween = tween1;\n    };\n  }\n\n  function tweenFunction(id, name, value) {\n    var tween0, tween1;\n    if (typeof value !== \"function\") throw new Error;\n    return function() {\n      var schedule = set$2(this, id),\n          tween = schedule.tween;\n\n      // If this node shared tween with the previous node,\n      // just assign the updated shared tween and we’re done!\n      // Otherwise, copy-on-write.\n      if (tween !== tween0) {\n        tween1 = (tween0 = tween).slice();\n        for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n          if (tween1[i].name === name) {\n            tween1[i] = t;\n            break;\n          }\n        }\n        if (i === n) tween1.push(t);\n      }\n\n      schedule.tween = tween1;\n    };\n  }\n\n  function transition_tween(name, value) {\n    var id = this._id;\n\n    name += \"\";\n\n    if (arguments.length < 2) {\n      var tween = get$1(this.node(), id).tween;\n      for (var i = 0, n = tween.length, t; i < n; ++i) {\n        if ((t = tween[i]).name === name) {\n          return t.value;\n        }\n      }\n      return null;\n    }\n\n    return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n  }\n\n  function tweenValue(transition, name, value) {\n    var id = transition._id;\n\n    transition.each(function() {\n      var schedule = set$2(this, id);\n      (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n    });\n\n    return function(node) {\n      return get$1(node, id).value[name];\n    };\n  }\n\n  function interpolate$1(a, b) {\n    var c;\n    return (typeof b === \"number\" ? interpolateNumber\n        : b instanceof color ? interpolateRgb\n        : (c = color(b)) ? (b = c, interpolateRgb)\n        : interpolateString)(a, b);\n  }\n\n  function attrRemove$1(name) {\n    return function() {\n      this.removeAttribute(name);\n    };\n  }\n\n  function attrRemoveNS$1(fullname) {\n    return function() {\n      this.removeAttributeNS(fullname.space, fullname.local);\n    };\n  }\n\n  function attrConstant$1(name, interpolate, value1) {\n    var value00,\n        interpolate0;\n    return function() {\n      var value0 = this.getAttribute(name);\n      return value0 === value1 ? null\n          : value0 === value00 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value1);\n    };\n  }\n\n  function attrConstantNS$1(fullname, interpolate, value1) {\n    var value00,\n        interpolate0;\n    return function() {\n      var value0 = this.getAttributeNS(fullname.space, fullname.local);\n      return value0 === value1 ? null\n          : value0 === value00 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value1);\n    };\n  }\n\n  function attrFunction$1(name, interpolate, value) {\n    var value00,\n        value10,\n        interpolate0;\n    return function() {\n      var value0, value1 = value(this);\n      if (value1 == null) return void this.removeAttribute(name);\n      value0 = this.getAttribute(name);\n      return value0 === value1 ? null\n          : value0 === value00 && value1 === value10 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n    };\n  }\n\n  function attrFunctionNS$1(fullname, interpolate, value) {\n    var value00,\n        value10,\n        interpolate0;\n    return function() {\n      var value0, value1 = value(this);\n      if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n      value0 = this.getAttributeNS(fullname.space, fullname.local);\n      return value0 === value1 ? null\n          : value0 === value00 && value1 === value10 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n    };\n  }\n\n  function transition_attr(name, value) {\n    var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform$2 : interpolate$1;\n    return this.attrTween(name, typeof value === \"function\"\n        ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n        : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n        : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n  }\n\n  function attrTweenNS(fullname, value) {\n    function tween() {\n      var node = this, i = value.apply(node, arguments);\n      return i && function(t) {\n        node.setAttributeNS(fullname.space, fullname.local, i(t));\n      };\n    }\n    tween._value = value;\n    return tween;\n  }\n\n  function attrTween(name, value) {\n    function tween() {\n      var node = this, i = value.apply(node, arguments);\n      return i && function(t) {\n        node.setAttribute(name, i(t));\n      };\n    }\n    tween._value = value;\n    return tween;\n  }\n\n  function transition_attrTween(name, value) {\n    var key = \"attr.\" + name;\n    if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n    if (value == null) return this.tween(key, null);\n    if (typeof value !== \"function\") throw new Error;\n    var fullname = namespace(name);\n    return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n  }\n\n  function delayFunction(id, value) {\n    return function() {\n      init(this, id).delay = +value.apply(this, arguments);\n    };\n  }\n\n  function delayConstant(id, value) {\n    return value = +value, function() {\n      init(this, id).delay = value;\n    };\n  }\n\n  function transition_delay(value) {\n    var id = this._id;\n\n    return arguments.length\n        ? this.each((typeof value === \"function\"\n            ? delayFunction\n            : delayConstant)(id, value))\n        : get$1(this.node(), id).delay;\n  }\n\n  function durationFunction(id, value) {\n    return function() {\n      set$2(this, id).duration = +value.apply(this, arguments);\n    };\n  }\n\n  function durationConstant(id, value) {\n    return value = +value, function() {\n      set$2(this, id).duration = value;\n    };\n  }\n\n  function transition_duration(value) {\n    var id = this._id;\n\n    return arguments.length\n        ? this.each((typeof value === \"function\"\n            ? durationFunction\n            : durationConstant)(id, value))\n        : get$1(this.node(), id).duration;\n  }\n\n  function easeConstant(id, value) {\n    if (typeof value !== \"function\") throw new Error;\n    return function() {\n      set$2(this, id).ease = value;\n    };\n  }\n\n  function transition_ease(value) {\n    var id = this._id;\n\n    return arguments.length\n        ? this.each(easeConstant(id, value))\n        : get$1(this.node(), id).ease;\n  }\n\n  function transition_filter(match) {\n    if (typeof match !== \"function\") match = matcher$1(match);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return new Transition(subgroups, this._parents, this._name, this._id);\n  }\n\n  function transition_merge(transition) {\n    if (transition._id !== this._id) throw new Error;\n\n    for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group0[i] || group1[i]) {\n          merge[i] = node;\n        }\n      }\n    }\n\n    for (; j < m0; ++j) {\n      merges[j] = groups0[j];\n    }\n\n    return new Transition(merges, this._parents, this._name, this._id);\n  }\n\n  function start$1(name) {\n    return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n      var i = t.indexOf(\".\");\n      if (i >= 0) t = t.slice(0, i);\n      return !t || t === \"start\";\n    });\n  }\n\n  function onFunction(id, name, listener) {\n    var on0, on1, sit = start$1(name) ? init : set$2;\n    return function() {\n      var schedule = sit(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n      schedule.on = on1;\n    };\n  }\n\n  function transition_on(name, listener) {\n    var id = this._id;\n\n    return arguments.length < 2\n        ? get$1(this.node(), id).on.on(name)\n        : this.each(onFunction(id, name, listener));\n  }\n\n  function removeFunction(id) {\n    return function() {\n      var parent = this.parentNode;\n      for (var i in this.__transition) if (+i !== id) return;\n      if (parent) parent.removeChild(this);\n    };\n  }\n\n  function transition_remove() {\n    return this.on(\"end.remove\", removeFunction(this._id));\n  }\n\n  function transition_select(select) {\n    var name = this._name,\n        id = this._id;\n\n    if (typeof select !== \"function\") select = selector(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          subgroup[i] = subnode;\n          schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n        }\n      }\n    }\n\n    return new Transition(subgroups, this._parents, name, id);\n  }\n\n  function transition_selectAll(select) {\n    var name = this._name,\n        id = this._id;\n\n    if (typeof select !== \"function\") select = selectorAll(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n            if (child = children[k]) {\n              schedule(child, name, id, k, children, inherit);\n            }\n          }\n          subgroups.push(children);\n          parents.push(node);\n        }\n      }\n    }\n\n    return new Transition(subgroups, parents, name, id);\n  }\n\n  var Selection$1 = selection.prototype.constructor;\n\n  function transition_selection() {\n    return new Selection$1(this._groups, this._parents);\n  }\n\n  function styleRemove$1(name, interpolate) {\n    var value00,\n        value10,\n        interpolate0;\n    return function() {\n      var style = window(this).getComputedStyle(this, null),\n          value0 = style.getPropertyValue(name),\n          value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n      return value0 === value1 ? null\n          : value0 === value00 && value1 === value10 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n    };\n  }\n\n  function styleRemoveEnd(name) {\n    return function() {\n      this.style.removeProperty(name);\n    };\n  }\n\n  function styleConstant$1(name, interpolate, value1) {\n    var value00,\n        interpolate0;\n    return function() {\n      var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n      return value0 === value1 ? null\n          : value0 === value00 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value1);\n    };\n  }\n\n  function styleFunction$1(name, interpolate, value) {\n    var value00,\n        value10,\n        interpolate0;\n    return function() {\n      var style = window(this).getComputedStyle(this, null),\n          value0 = style.getPropertyValue(name),\n          value1 = value(this);\n      if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n      return value0 === value1 ? null\n          : value0 === value00 && value1 === value10 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n    };\n  }\n\n  function transition_style(name, value, priority) {\n    var i = (name += \"\") === \"transform\" ? interpolateTransform$1 : interpolate$1;\n    return value == null ? this\n            .styleTween(name, styleRemove$1(name, i))\n            .on(\"end.style.\" + name, styleRemoveEnd(name))\n        : this.styleTween(name, typeof value === \"function\"\n            ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n            : styleConstant$1(name, i, value), priority);\n  }\n\n  function styleTween(name, value, priority) {\n    function tween() {\n      var node = this, i = value.apply(node, arguments);\n      return i && function(t) {\n        node.style.setProperty(name, i(t), priority);\n      };\n    }\n    tween._value = value;\n    return tween;\n  }\n\n  function transition_styleTween(name, value, priority) {\n    var key = \"style.\" + (name += \"\");\n    if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n    if (value == null) return this.tween(key, null);\n    if (typeof value !== \"function\") throw new Error;\n    return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n  }\n\n  function textConstant$1(value) {\n    return function() {\n      this.textContent = value;\n    };\n  }\n\n  function textFunction$1(value) {\n    return function() {\n      var value1 = value(this);\n      this.textContent = value1 == null ? \"\" : value1;\n    };\n  }\n\n  function transition_text(value) {\n    return this.tween(\"text\", typeof value === \"function\"\n        ? textFunction$1(tweenValue(this, \"text\", value))\n        : textConstant$1(value == null ? \"\" : value + \"\"));\n  }\n\n  function transition_transition() {\n    var name = this._name,\n        id0 = this._id,\n        id1 = newId();\n\n    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          var inherit = get$1(node, id0);\n          schedule(node, name, id1, i, group, {\n            time: inherit.time + inherit.delay + inherit.duration,\n            delay: 0,\n            duration: inherit.duration,\n            ease: inherit.ease\n          });\n        }\n      }\n    }\n\n    return new Transition(groups, this._parents, name, id1);\n  }\n\n  var id = 0;\n\n  function Transition(groups, parents, name, id) {\n    this._groups = groups;\n    this._parents = parents;\n    this._name = name;\n    this._id = id;\n  }\n\n  function transition(name) {\n    return selection().transition(name);\n  }\n\n  function newId() {\n    return ++id;\n  }\n\n  var selection_prototype = selection.prototype;\n\n  Transition.prototype = transition.prototype = {\n    constructor: Transition,\n    select: transition_select,\n    selectAll: transition_selectAll,\n    filter: transition_filter,\n    merge: transition_merge,\n    selection: transition_selection,\n    transition: transition_transition,\n    call: selection_prototype.call,\n    nodes: selection_prototype.nodes,\n    node: selection_prototype.node,\n    size: selection_prototype.size,\n    empty: selection_prototype.empty,\n    each: selection_prototype.each,\n    on: transition_on,\n    attr: transition_attr,\n    attrTween: transition_attrTween,\n    style: transition_style,\n    styleTween: transition_styleTween,\n    text: transition_text,\n    remove: transition_remove,\n    tween: transition_tween,\n    delay: transition_delay,\n    duration: transition_duration,\n    ease: transition_ease\n  };\n\n  var defaultTiming = {\n    time: null, // Set on use.\n    delay: 0,\n    duration: 250,\n    ease: easeCubicInOut\n  };\n\n  function inherit(node, id) {\n    var timing;\n    while (!(timing = node.__transition) || !(timing = timing[id])) {\n      if (!(node = node.parentNode)) {\n        return defaultTiming.time = now(), defaultTiming;\n      }\n    }\n    return timing;\n  }\n\n  function selection_transition(name) {\n    var id,\n        timing;\n\n    if (name instanceof Transition) {\n      id = name._id, name = name._name;\n    } else {\n      id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n    }\n\n    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          schedule(node, name, id, i, group, timing || inherit(node, id));\n        }\n      }\n    }\n\n    return new Transition(groups, this._parents, name, id);\n  }\n\n  selection.prototype.interrupt = selection_interrupt;\n  selection.prototype.transition = selection_transition;\n\n  var root$1 = [null];\n\n  function active(node, name) {\n    var schedules = node.__transition,\n        schedule,\n        i;\n\n    if (schedules) {\n      name = name == null ? null : name + \"\";\n      for (i in schedules) {\n        if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n          return new Transition([[node]], root$1, name, +i);\n        }\n      }\n    }\n\n    return null;\n  }\n\n  var slice$4 = Array.prototype.slice;\n\n  function identity$5(x) {\n    return x;\n  }\n\n  var top = 1;\n  var right = 2;\n  var bottom = 3;\n  var left = 4;\nvar   epsilon$2 = 1e-6;\n  function translateX(scale0, scale1, d) {\n    var x = scale0(d);\n    return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n  }\n\n  function translateY(scale0, scale1, d) {\n    var y = scale0(d);\n    return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n  }\n\n  function center(scale) {\n    var width = scale.bandwidth() / 2;\n    return function(d) {\n      return scale(d) + width;\n    };\n  }\n\n  function entering() {\n    return !this.__axis;\n  }\n\n  function axis(orient, scale) {\n    var tickArguments = [],\n        tickValues = null,\n        tickFormat = null,\n        tickSizeInner = 6,\n        tickSizeOuter = 6,\n        tickPadding = 3;\n\n    function axis(context) {\n      var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n          format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n          spacing = Math.max(tickSizeInner, 0) + tickPadding,\n          transform = orient === top || orient === bottom ? translateX : translateY,\n          range = scale.range(),\n          range0 = range[0] + 0.5,\n          range1 = range[range.length - 1] + 0.5,\n          position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n          selection = context.selection ? context.selection() : context,\n          path = selection.selectAll(\".domain\").data([null]),\n          tick = selection.selectAll(\".tick\").data(values, scale).order(),\n          tickExit = tick.exit(),\n          tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n          line = tick.select(\"line\"),\n          text = tick.select(\"text\"),\n          k = orient === top || orient === left ? -1 : 1,\n          x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n      path = path.merge(path.enter().insert(\"path\", \".tick\")\n          .attr(\"class\", \"domain\")\n          .attr(\"stroke\", \"#000\"));\n\n      tick = tick.merge(tickEnter);\n\n      line = line.merge(tickEnter.append(\"line\")\n          .attr(\"stroke\", \"#000\")\n          .attr(x + \"2\", k * tickSizeInner)\n          .attr(y + \"1\", 0.5)\n          .attr(y + \"2\", 0.5));\n\n      text = text.merge(tickEnter.append(\"text\")\n          .attr(\"fill\", \"#000\")\n          .attr(x, k * spacing)\n          .attr(y, 0.5)\n          .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \".71em\" : \".32em\"));\n\n      if (context !== selection) {\n        path = path.transition(context);\n        tick = tick.transition(context);\n        line = line.transition(context);\n        text = text.transition(context);\n\n        tickExit = tickExit.transition(context)\n            .attr(\"opacity\", epsilon$2)\n            .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n        tickEnter\n            .attr(\"opacity\", epsilon$2)\n            .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n      }\n\n      tickExit.remove();\n\n      path\n          .attr(\"d\", orient === left || orient == right\n              ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n              : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n      tick\n          .attr(\"opacity\", 1)\n          .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n      line\n          .attr(x + \"2\", k * tickSizeInner);\n\n      text\n          .attr(x, k * spacing)\n          .text(format);\n\n      selection.filter(entering)\n          .attr(\"fill\", \"none\")\n          .attr(\"font-size\", 10)\n          .attr(\"font-family\", \"sans-serif\")\n          .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n      selection\n          .each(function() { this.__axis = position; });\n    }\n\n    axis.scale = function(_) {\n      return arguments.length ? (scale = _, axis) : scale;\n    };\n\n    axis.ticks = function() {\n      return tickArguments = slice$4.call(arguments), axis;\n    };\n\n    axis.tickArguments = function(_) {\n      return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n    };\n\n    axis.tickValues = function(_) {\n      return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n    };\n\n    axis.tickFormat = function(_) {\n      return arguments.length ? (tickFormat = _, axis) : tickFormat;\n    };\n\n    axis.tickSize = function(_) {\n      return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n    };\n\n    axis.tickSizeInner = function(_) {\n      return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n    };\n\n    axis.tickSizeOuter = function(_) {\n      return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n    };\n\n    axis.tickPadding = function(_) {\n      return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n    };\n\n    return axis;\n  }\n\n  function axisTop(scale) {\n    return axis(top, scale);\n  }\n\n  function axisRight(scale) {\n    return axis(right, scale);\n  }\n\n  function axisBottom(scale) {\n    return axis(bottom, scale);\n  }\n\n  function axisLeft(scale) {\n    return axis(left, scale);\n  }\n\n  function defaultSeparation(a, b) {\n    return a.parent === b.parent ? 1 : 2;\n  }\n\n  function meanX(children) {\n    return children.reduce(meanXReduce, 0) / children.length;\n  }\n\n  function meanXReduce(x, c) {\n    return x + c.x;\n  }\n\n  function maxY(children) {\n    return 1 + children.reduce(maxYReduce, 0);\n  }\n\n  function maxYReduce(y, c) {\n    return Math.max(y, c.y);\n  }\n\n  function leafLeft(node) {\n    var children;\n    while (children = node.children) node = children[0];\n    return node;\n  }\n\n  function leafRight(node) {\n    var children;\n    while (children = node.children) node = children[children.length - 1];\n    return node;\n  }\n\n  function cluster() {\n    var separation = defaultSeparation,\n        dx = 1,\n        dy = 1,\n        nodeSize = false;\n\n    function cluster(root) {\n      var previousNode,\n          x = 0;\n\n      // First walk, computing the initial x & y values.\n      root.eachAfter(function(node) {\n        var children = node.children;\n        if (children) {\n          node.x = meanX(children);\n          node.y = maxY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n\n      var left = leafLeft(root),\n          right = leafRight(root),\n          x0 = left.x - separation(left, right) / 2,\n          x1 = right.x + separation(right, left) / 2;\n\n      // Second walk, normalizing x & y to the desired size.\n      return root.eachAfter(nodeSize ? function(node) {\n        node.x = (node.x - root.x) * dx;\n        node.y = (root.y - node.y) * dy;\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * dx;\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n      });\n    }\n\n    cluster.separation = function(x) {\n      return arguments.length ? (separation = x, cluster) : separation;\n    };\n\n    cluster.size = function(x) {\n      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n    };\n\n    cluster.nodeSize = function(x) {\n      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n    };\n\n    return cluster;\n  }\n\n  function node_each(callback) {\n    var node = this, current, next = [node], children, i, n;\n    do {\n      current = next.reverse(), next = [];\n      while (node = current.pop()) {\n        callback(node), children = node.children;\n        if (children) for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    } while (next.length);\n    return this;\n  }\n\n  function node_eachBefore(callback) {\n    var node = this, nodes = [node], children, i;\n    while (node = nodes.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n    return this;\n  }\n\n  function node_eachAfter(callback) {\n    var node = this, nodes = [node], next = [], children, i, n;\n    while (node = nodes.pop()) {\n      next.push(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n    while (node = next.pop()) {\n      callback(node);\n    }\n    return this;\n  }\n\n  function node_sum(value) {\n    return this.eachAfter(function(node) {\n      var sum = +value(node.data) || 0,\n          children = node.children,\n          i = children && children.length;\n      while (--i >= 0) sum += children[i].value;\n      node.value = sum;\n    });\n  }\n\n  function node_sort(compare) {\n    return this.eachBefore(function(node) {\n      if (node.children) {\n        node.children.sort(compare);\n      }\n    });\n  }\n\n  function node_path(end) {\n    var start = this,\n        ancestor = leastCommonAncestor(start, end),\n        nodes = [start];\n    while (start !== ancestor) {\n      start = start.parent;\n      nodes.push(start);\n    }\n    var k = nodes.length;\n    while (end !== ancestor) {\n      nodes.splice(k, 0, end);\n      end = end.parent;\n    }\n    return nodes;\n  }\n\n  function leastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = a.ancestors(),\n        bNodes = b.ancestors(),\n        c = null;\n    a = aNodes.pop();\n    b = bNodes.pop();\n    while (a === b) {\n      c = a;\n      a = aNodes.pop();\n      b = bNodes.pop();\n    }\n    return c;\n  }\n\n  function node_ancestors() {\n    var node = this, nodes = [node];\n    while (node = node.parent) {\n      nodes.push(node);\n    }\n    return nodes;\n  }\n\n  function node_descendants() {\n    var nodes = [];\n    this.each(function(node) {\n      nodes.push(node);\n    });\n    return nodes;\n  }\n\n  function node_leaves() {\n    var leaves = [];\n    this.eachBefore(function(node) {\n      if (!node.children) {\n        leaves.push(node);\n      }\n    });\n    return leaves;\n  }\n\n  function node_links() {\n    var root = this, links = [];\n    root.each(function(node) {\n      if (node !== root) { // Don’t include the root’s parent, if any.\n        links.push({source: node.parent, target: node});\n      }\n    });\n    return links;\n  }\n\n  function hierarchy(data, children) {\n    var root = new Node(data),\n        valued = +data.value && (root.value = data.value),\n        node,\n        nodes = [root],\n        child,\n        childs,\n        i,\n        n;\n\n    if (children == null) children = defaultChildren;\n\n    while (node = nodes.pop()) {\n      if (valued) node.value = +node.data.value;\n      if ((childs = children(node.data)) && (n = childs.length)) {\n        node.children = new Array(n);\n        for (i = n - 1; i >= 0; --i) {\n          nodes.push(child = node.children[i] = new Node(childs[i]));\n          child.parent = node;\n          child.depth = node.depth + 1;\n        }\n      }\n    }\n\n    return root.eachBefore(computeHeight);\n  }\n\n  function node_copy() {\n    return hierarchy(this).eachBefore(copyData);\n  }\n\n  function defaultChildren(d) {\n    return d.children;\n  }\n\n  function copyData(node) {\n    node.data = node.data.data;\n  }\n\n  function computeHeight(node) {\n    var height = 0;\n    do node.height = height;\n    while ((node = node.parent) && (node.height < ++height));\n  }\n\n  function Node(data) {\n    this.data = data;\n    this.depth =\n    this.height = 0;\n    this.parent = null;\n  }\n\n  Node.prototype = hierarchy.prototype = {\n    constructor: Node,\n    each: node_each,\n    eachAfter: node_eachAfter,\n    eachBefore: node_eachBefore,\n    sum: node_sum,\n    sort: node_sort,\n    path: node_path,\n    ancestors: node_ancestors,\n    descendants: node_descendants,\n    leaves: node_leaves,\n    links: node_links,\n    copy: node_copy\n  };\n\n  function Node$2(value) {\n    this._ = value;\n    this.next = null;\n  }\n\n  function shuffle$1(array) {\n    var i,\n        n = (array = array.slice()).length,\n        head = null,\n        node = head;\n\n    while (n) {\n      var next = new Node$2(array[n - 1]);\n      if (node) node = node.next = next;\n      else node = head = next;\n      array[i] = array[--n];\n    }\n\n    return {\n      head: head,\n      tail: node\n    };\n  }\n\n  function enclose(circles) {\n    return encloseN(shuffle$1(circles), []);\n  }\n\n  function encloses(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r - b.r;\n    return dr * dr + 1e-6 > dx * dx + dy * dy;\n  }\n\n  // Returns the smallest circle that contains circles L and intersects circles B.\n  function encloseN(L, B) {\n    var circle,\n        l0 = null,\n        l1 = L.head,\n        l2,\n        p1;\n\n    switch (B.length) {\n      case 1: circle = enclose1(B[0]); break;\n      case 2: circle = enclose2(B[0], B[1]); break;\n      case 3: circle = enclose3(B[0], B[1], B[2]); break;\n    }\n\n    while (l1) {\n      p1 = l1._, l2 = l1.next;\n      if (!circle || !encloses(circle, p1)) {\n\n        // Temporarily truncate L before l1.\n        if (l0) L.tail = l0, l0.next = null;\n        else L.head = L.tail = null;\n\n        B.push(p1);\n        circle = encloseN(L, B); // Note: reorders L!\n        B.pop();\n\n        // Move l1 to the front of L and reconnect the truncated list L.\n        if (L.head) l1.next = L.head, L.head = l1;\n        else l1.next = null, L.head = L.tail = l1;\n        l0 = L.tail, l0.next = l2;\n\n      } else {\n        l0 = l1;\n      }\n      l1 = l2;\n    }\n\n    L.tail = l0;\n    return circle;\n  }\n\n  function enclose1(a) {\n    return {\n      x: a.x,\n      y: a.y,\n      r: a.r\n    };\n  }\n\n  function enclose2(a, b) {\n    var x1 = a.x, y1 = a.y, r1 = a.r,\n        x2 = b.x, y2 = b.y, r2 = b.r,\n        x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n        l = Math.sqrt(x21 * x21 + y21 * y21);\n    return {\n      x: (x1 + x2 + x21 / l * r21) / 2,\n      y: (y1 + y2 + y21 / l * r21) / 2,\n      r: (l + r1 + r2) / 2\n    };\n  }\n\n  function enclose3(a, b, c) {\n    var x1 = a.x, y1 = a.y, r1 = a.r,\n        x2 = b.x, y2 = b.y, r2 = b.r,\n        x3 = c.x, y3 = c.y, r3 = c.r,\n        a2 = 2 * (x1 - x2),\n        b2 = 2 * (y1 - y2),\n        c2 = 2 * (r2 - r1),\n        d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n        a3 = 2 * (x1 - x3),\n        b3 = 2 * (y1 - y3),\n        c3 = 2 * (r3 - r1),\n        d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n        ab = a3 * b2 - a2 * b3,\n        xa = (b2 * d3 - b3 * d2) / ab - x1,\n        xb = (b3 * c2 - b2 * c3) / ab,\n        ya = (a3 * d2 - a2 * d3) / ab - y1,\n        yb = (a2 * c3 - a3 * c2) / ab,\n        A = xb * xb + yb * yb - 1,\n        B = 2 * (xa * xb + ya * yb + r1),\n        C = xa * xa + ya * ya - r1 * r1,\n        r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n    return {\n      x: xa + xb * r + x1,\n      y: ya + yb * r + y1,\n      r: r\n    };\n  }\n\n  function place(a, b, c) {\n    var ax = a.x,\n        ay = a.y,\n        da = b.r + c.r,\n        db = a.r + c.r,\n        dx = b.x - ax,\n        dy = b.y - ay,\n        dc = dx * dx + dy * dy;\n    if (dc) {\n      var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n          y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = ax + x * dx + y * dy;\n      c.y = ay + x * dy - y * dx;\n    } else {\n      c.x = ax + db;\n      c.y = ay;\n    }\n  }\n\n  function intersects(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r + b.r;\n    return dr * dr > dx * dx + dy * dy;\n  }\n\n  function distance2(circle, x, y) {\n    var dx = circle.x - x,\n        dy = circle.y - y;\n    return dx * dx + dy * dy;\n  }\n\n  function Node$1(circle) {\n    this._ = circle;\n    this.next = null;\n    this.previous = null;\n  }\n\n  function packEnclose(circles) {\n    if (!(n = circles.length)) return 0;\n\n    var a, b, c, n;\n\n    // Place the first circle.\n    a = circles[0], a.x = 0, a.y = 0;\n    if (!(n > 1)) return a.r;\n\n    // Place the second circle.\n    b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n    if (!(n > 2)) return a.r + b.r;\n\n    // Place the third circle.\n    place(b, a, c = circles[2]);\n\n    // Initialize the weighted centroid.\n    var aa = a.r * a.r,\n        ba = b.r * b.r,\n        ca = c.r * c.r,\n        oa = aa + ba + ca,\n        ox = aa * a.x + ba * b.x + ca * c.x,\n        oy = aa * a.y + ba * b.y + ca * c.y,\n        cx, cy, i, j, k, sj, sk;\n\n    // Initialize the front-chain using the first three circles a, b and c.\n    a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n    a.next = c.previous = b;\n    b.next = a.previous = c;\n    c.next = b.previous = a;\n\n    // Attempt to place each remaining circle…\n    pack: for (i = 3; i < n; ++i) {\n      place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n      // If there are only three elements in the front-chain…\n      if ((k = a.previous) === (j = b.next)) {\n        // If the new circle intersects the third circle,\n        // rotate the front chain to try the next position.\n        if (intersects(j._, c._)) {\n          a = b, b = j, --i;\n          continue pack;\n        }\n      }\n\n      // Find the closest intersecting circle on the front-chain, if any.\n      else {\n        sj = j._.r, sk = k._.r;\n        do {\n          if (sj <= sk) {\n            if (intersects(j._, c._)) {\n              b = j, a.next = b, b.previous = a, --i;\n              continue pack;\n            }\n            j = j.next, sj += j._.r;\n          } else {\n            if (intersects(k._, c._)) {\n              a = k, a.next = b, b.previous = a, --i;\n              continue pack;\n            }\n            k = k.previous, sk += k._.r;\n          }\n        } while (j !== k.next);\n      }\n\n      // Success! Insert the new circle c between a and b.\n      c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n      // Update the weighted centroid.\n      oa += ca = c._.r * c._.r;\n      ox += ca * c._.x;\n      oy += ca * c._.y;\n\n      // Compute the new closest circle a to centroid.\n      aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n      while ((c = c.next) !== b) {\n        if ((ca = distance2(c._, cx, cy)) < aa) {\n          a = c, aa = ca;\n        }\n      }\n      b = a.next;\n    }\n\n    // Compute the enclosing circle of the front chain.\n    a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n    // Translate the circles to put the enclosing circle around the origin.\n    for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n    return c.r;\n  }\n\n  function siblings(circles) {\n    packEnclose(circles);\n    return circles;\n  }\n\n  function optional(f) {\n    return f == null ? null : required(f);\n  }\n\n  function required(f) {\n    if (typeof f !== \"function\") throw new Error;\n    return f;\n  }\n\n  function constantZero() {\n    return 0;\n  }\n\n  function constant$5(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function defaultRadius(d) {\n    return Math.sqrt(d.value);\n  }\n\n  function index() {\n    var radius = null,\n        dx = 1,\n        dy = 1,\n        padding = constantZero;\n\n    function pack(root) {\n      root.x = dx / 2, root.y = dy / 2;\n      if (radius) {\n        root.eachBefore(radiusLeaf(radius))\n            .eachAfter(packChildren(padding, 0.5))\n            .eachBefore(translateChild(1));\n      } else {\n        root.eachBefore(radiusLeaf(defaultRadius))\n            .eachAfter(packChildren(constantZero, 1))\n            .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n            .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n      }\n      return root;\n    }\n\n    pack.radius = function(x) {\n      return arguments.length ? (radius = optional(x), pack) : radius;\n    };\n\n    pack.size = function(x) {\n      return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n    };\n\n    pack.padding = function(x) {\n      return arguments.length ? (padding = typeof x === \"function\" ? x : constant$5(+x), pack) : padding;\n    };\n\n    return pack;\n  }\n\n  function radiusLeaf(radius) {\n    return function(node) {\n      if (!node.children) {\n        node.r = Math.max(0, +radius(node) || 0);\n      }\n    };\n  }\n\n  function packChildren(padding, k) {\n    return function(node) {\n      if (children = node.children) {\n        var children,\n            i,\n            n = children.length,\n            r = padding(node) * k || 0,\n            e;\n\n        if (r) for (i = 0; i < n; ++i) children[i].r += r;\n        e = packEnclose(children);\n        if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n        node.r = e + r;\n      }\n    };\n  }\n\n  function translateChild(k) {\n    return function(node) {\n      var parent = node.parent;\n      node.r *= k;\n      if (parent) {\n        node.x = parent.x + k * node.x;\n        node.y = parent.y + k * node.y;\n      }\n    };\n  }\n\n  function roundNode(node) {\n    node.x0 = Math.round(node.x0);\n    node.y0 = Math.round(node.y0);\n    node.x1 = Math.round(node.x1);\n    node.y1 = Math.round(node.y1);\n  }\n\n  function treemapDice(parent, x0, y0, x1, y1) {\n    var nodes = parent.children,\n        node,\n        i = -1,\n        n = nodes.length,\n        k = parent.value && (x1 - x0) / parent.value;\n\n    while (++i < n) {\n      node = nodes[i], node.y0 = y0, node.y1 = y1;\n      node.x0 = x0, node.x1 = x0 += node.value * k;\n    }\n  }\n\n  function partition() {\n    var dx = 1,\n        dy = 1,\n        padding = 0,\n        round = false;\n\n    function partition(root) {\n      var n = root.height + 1;\n      root.x0 =\n      root.y0 = padding;\n      root.x1 = dx;\n      root.y1 = dy / n;\n      root.eachBefore(positionNode(dy, n));\n      if (round) root.eachBefore(roundNode);\n      return root;\n    }\n\n    function positionNode(dy, n) {\n      return function(node) {\n        if (node.children) {\n          treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n        }\n        var x0 = node.x0,\n            y0 = node.y0,\n            x1 = node.x1 - padding,\n            y1 = node.y1 - padding;\n        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n        node.x0 = x0;\n        node.y0 = y0;\n        node.x1 = x1;\n        node.y1 = y1;\n      };\n    }\n\n    partition.round = function(x) {\n      return arguments.length ? (round = !!x, partition) : round;\n    };\n\n    partition.size = function(x) {\n      return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n    };\n\n    partition.padding = function(x) {\n      return arguments.length ? (padding = +x, partition) : padding;\n    };\n\n    return partition;\n  }\n\nvar   keyPrefix$1 = \"$\";\n  var preroot = {depth: -1};\n  var ambiguous = {};\n  function defaultId(d) {\n    return d.id;\n  }\n\n  function defaultParentId(d) {\n    return d.parentId;\n  }\n\n  function stratify() {\n    var id = defaultId,\n        parentId = defaultParentId;\n\n    function stratify(data) {\n      var d,\n          i,\n          n = data.length,\n          root,\n          parent,\n          node,\n          nodes = new Array(n),\n          nodeId,\n          nodeKey,\n          nodeByKey = {};\n\n      for (i = 0; i < n; ++i) {\n        d = data[i], node = nodes[i] = new Node(d);\n        if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n          nodeKey = keyPrefix$1 + (node.id = nodeId);\n          nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n        }\n      }\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i], nodeId = parentId(data[i], i, data);\n        if (nodeId == null || !(nodeId += \"\")) {\n          if (root) throw new Error(\"multiple roots\");\n          root = node;\n        } else {\n          parent = nodeByKey[keyPrefix$1 + nodeId];\n          if (!parent) throw new Error(\"missing: \" + nodeId);\n          if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n          if (parent.children) parent.children.push(node);\n          else parent.children = [node];\n          node.parent = parent;\n        }\n      }\n\n      if (!root) throw new Error(\"no root\");\n      root.parent = preroot;\n      root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n      root.parent = null;\n      if (n > 0) throw new Error(\"cycle\");\n\n      return root;\n    }\n\n    stratify.id = function(x) {\n      return arguments.length ? (id = required(x), stratify) : id;\n    };\n\n    stratify.parentId = function(x) {\n      return arguments.length ? (parentId = required(x), stratify) : parentId;\n    };\n\n    return stratify;\n  }\n\n  function defaultSeparation$1(a, b) {\n    return a.parent === b.parent ? 1 : 2;\n  }\n\n  // function radialSeparation(a, b) {\n  //   return (a.parent === b.parent ? 1 : 2) / a.depth;\n  // }\n\n  // This function is used to traverse the left contour of a subtree (or\n  // subforest). It returns the successor of v on this contour. This successor is\n  // either given by the leftmost child of v or by the thread of v. The function\n  // returns null if and only if v is on the highest level of its subtree.\n  function nextLeft(v) {\n    var children = v.children;\n    return children ? children[0] : v.t;\n  }\n\n  // This function works analogously to nextLeft.\n  function nextRight(v) {\n    var children = v.children;\n    return children ? children[children.length - 1] : v.t;\n  }\n\n  // Shifts the current subtree rooted at w+. This is done by increasing\n  // prelim(w+) and mod(w+) by shift.\n  function moveSubtree(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n\n  // All other shifts, applied to the smaller subtrees between w- and w+, are\n  // performed by this function. To prepare the shifts, we have to adjust\n  // change(w+), shift(w+), and change(w-).\n  function executeShifts(v) {\n    var shift = 0,\n        change = 0,\n        children = v.children,\n        i = children.length,\n        w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n\n  // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n  // returns the specified (default) ancestor.\n  function nextAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n\n  function TreeNode(node, i) {\n    this._ = node;\n    this.parent = null;\n    this.children = null;\n    this.A = null; // default ancestor\n    this.a = this; // ancestor\n    this.z = 0; // prelim\n    this.m = 0; // mod\n    this.c = 0; // change\n    this.s = 0; // shift\n    this.t = null; // thread\n    this.i = i; // number\n  }\n\n  TreeNode.prototype = Object.create(Node.prototype);\n\n  function treeRoot(root) {\n    var tree = new TreeNode(root, 0),\n        node,\n        nodes = [tree],\n        child,\n        children,\n        i,\n        n;\n\n    while (node = nodes.pop()) {\n      if (children = node._.children) {\n        node.children = new Array(n = children.length);\n        for (i = n - 1; i >= 0; --i) {\n          nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n          child.parent = node;\n        }\n      }\n    }\n\n    (tree.parent = new TreeNode(null, 0)).children = [tree];\n    return tree;\n  }\n\n  // Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n  function tree() {\n    var separation = defaultSeparation$1,\n        dx = 1,\n        dy = 1,\n        nodeSize = null;\n\n    function tree(root) {\n      var t = treeRoot(root);\n\n      // Compute the layout using Buchheim et al.’s algorithm.\n      t.eachAfter(firstWalk), t.parent.m = -t.z;\n      t.eachBefore(secondWalk);\n\n      // If a fixed node size is specified, scale x and y.\n      if (nodeSize) root.eachBefore(sizeNode);\n\n      // If a fixed tree size is specified, scale x and y based on the extent.\n      // Compute the left-most, right-most, and depth-most nodes for extents.\n      else {\n        var left = root,\n            right = root,\n            bottom = root;\n        root.eachBefore(function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var s = left === right ? 1 : separation(left, right) / 2,\n            tx = s - left.x,\n            kx = dx / (right.x + s + tx),\n            ky = dy / (bottom.depth || 1);\n        root.eachBefore(function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n\n      return root;\n    }\n\n    // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n    // applied recursively to the children of v, as well as the function\n    // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n    // node v is placed to the midpoint of its outermost children.\n    function firstWalk(v) {\n      var children = v.children,\n          siblings = v.parent.children,\n          w = v.i ? siblings[v.i - 1] : null;\n      if (children) {\n        executeShifts(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n\n    // Computes all real x-coordinates by summing up the modifiers recursively.\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n\n    // The core of the algorithm. Here, a new subtree is combined with the\n    // previous subtrees. Threads are used to traverse the inside and outside\n    // contours of the left and right subtree up to the highest common level. The\n    // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n    // superscript o means outside and i means inside, the subscript - means left\n    // subtree and + means right subtree. For summing up the modifiers along the\n    // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n    // nodes of the inside contours conflict, we compute the left one of the\n    // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n    // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n    // Finally, we add a new thread (if necessary).\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v,\n            vop = v,\n            vim = w,\n            vom = vip.parent.children[0],\n            sip = vip.m,\n            sop = vop.m,\n            sim = vim.m,\n            som = vom.m,\n            shift;\n        while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n          vom = nextLeft(vom);\n          vop = nextRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !nextRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !nextLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n\n    function sizeNode(node) {\n      node.x *= dx;\n      node.y = node.depth * dy;\n    }\n\n    tree.separation = function(x) {\n      return arguments.length ? (separation = x, tree) : separation;\n    };\n\n    tree.size = function(x) {\n      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n    };\n\n    tree.nodeSize = function(x) {\n      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n    };\n\n    return tree;\n  }\n\n  function treemapSlice(parent, x0, y0, x1, y1) {\n    var nodes = parent.children,\n        node,\n        i = -1,\n        n = nodes.length,\n        k = parent.value && (y1 - y0) / parent.value;\n\n    while (++i < n) {\n      node = nodes[i], node.x0 = x0, node.x1 = x1;\n      node.y0 = y0, node.y1 = y0 += node.value * k;\n    }\n  }\n\n  var phi = (1 + Math.sqrt(5)) / 2;\n\n  function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n    var rows = [],\n        nodes = parent.children,\n        row,\n        nodeValue,\n        i0 = 0,\n        i1,\n        n = nodes.length,\n        dx, dy,\n        value = parent.value,\n        sumValue,\n        minValue,\n        maxValue,\n        newRatio,\n        minRatio,\n        alpha,\n        beta;\n\n    while (i0 < n) {\n      dx = x1 - x0, dy = y1 - y0;\n      minValue = maxValue = sumValue = nodes[i0].value;\n      alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n      beta = sumValue * sumValue * alpha;\n      minRatio = Math.max(maxValue / beta, beta / minValue);\n\n      // Keep adding nodes while the aspect ratio maintains or improves.\n      for (i1 = i0 + 1; i1 < n; ++i1) {\n        sumValue += nodeValue = nodes[i1].value;\n        if (nodeValue < minValue) minValue = nodeValue;\n        if (nodeValue > maxValue) maxValue = nodeValue;\n        beta = sumValue * sumValue * alpha;\n        newRatio = Math.max(maxValue / beta, beta / minValue);\n        if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n        minRatio = newRatio;\n      }\n\n      // Position and record the row orientation.\n      rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n      if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n      else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n      value -= sumValue, i0 = i1;\n    }\n\n    return rows;\n  }\n\n  var squarify = (function custom(ratio) {\n\n    function squarify(parent, x0, y0, x1, y1) {\n      squarifyRatio(ratio, parent, x0, y0, x1, y1);\n    }\n\n    squarify.ratio = function(x) {\n      return custom((x = +x) > 1 ? x : 1);\n    };\n\n    return squarify;\n  })(phi);\n\n  function index$1() {\n    var tile = squarify,\n        round = false,\n        dx = 1,\n        dy = 1,\n        paddingStack = [0],\n        paddingInner = constantZero,\n        paddingTop = constantZero,\n        paddingRight = constantZero,\n        paddingBottom = constantZero,\n        paddingLeft = constantZero;\n\n    function treemap(root) {\n      root.x0 =\n      root.y0 = 0;\n      root.x1 = dx;\n      root.y1 = dy;\n      root.eachBefore(positionNode);\n      paddingStack = [0];\n      if (round) root.eachBefore(roundNode);\n      return root;\n    }\n\n    function positionNode(node) {\n      var p = paddingStack[node.depth],\n          x0 = node.x0 + p,\n          y0 = node.y0 + p,\n          x1 = node.x1 - p,\n          y1 = node.y1 - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n      if (node.children) {\n        p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n        x0 += paddingLeft(node) - p;\n        y0 += paddingTop(node) - p;\n        x1 -= paddingRight(node) - p;\n        y1 -= paddingBottom(node) - p;\n        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n        tile(node, x0, y0, x1, y1);\n      }\n    }\n\n    treemap.round = function(x) {\n      return arguments.length ? (round = !!x, treemap) : round;\n    };\n\n    treemap.size = function(x) {\n      return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n    };\n\n    treemap.tile = function(x) {\n      return arguments.length ? (tile = required(x), treemap) : tile;\n    };\n\n    treemap.padding = function(x) {\n      return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n    };\n\n    treemap.paddingInner = function(x) {\n      return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingInner;\n    };\n\n    treemap.paddingOuter = function(x) {\n      return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n    };\n\n    treemap.paddingTop = function(x) {\n      return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingTop;\n    };\n\n    treemap.paddingRight = function(x) {\n      return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingRight;\n    };\n\n    treemap.paddingBottom = function(x) {\n      return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingBottom;\n    };\n\n    treemap.paddingLeft = function(x) {\n      return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingLeft;\n    };\n\n    return treemap;\n  }\n\n  function binary(parent, x0, y0, x1, y1) {\n    var nodes = parent.children,\n        i, n = nodes.length,\n        sum, sums = new Array(n + 1);\n\n    for (sums[0] = sum = i = 0; i < n; ++i) {\n      sums[i + 1] = sum += nodes[i].value;\n    }\n\n    partition(0, n, parent.value, x0, y0, x1, y1);\n\n    function partition(i, j, value, x0, y0, x1, y1) {\n      if (i >= j - 1) {\n        var node = nodes[i];\n        node.x0 = x0, node.y0 = y0;\n        node.x1 = x1, node.y1 = y1;\n        return;\n      }\n\n      var valueOffset = sums[i],\n          valueTarget = (value / 2) + valueOffset,\n          k = i + 1,\n          hi = j - 1;\n\n      while (k < hi) {\n        var mid = k + hi >>> 1;\n        if (sums[mid] < valueTarget) k = mid + 1;\n        else hi = mid;\n      }\n\n      var valueLeft = sums[k] - valueOffset,\n          valueRight = value - valueLeft;\n\n      if ((y1 - y0) > (x1 - x0)) {\n        var yk = (y0 * valueRight + y1 * valueLeft) / value;\n        partition(i, k, valueLeft, x0, y0, x1, yk);\n        partition(k, j, valueRight, x0, yk, x1, y1);\n      } else {\n        var xk = (x0 * valueRight + x1 * valueLeft) / value;\n        partition(i, k, valueLeft, x0, y0, xk, y1);\n        partition(k, j, valueRight, xk, y0, x1, y1);\n      }\n    }\n  }\n\n  function sliceDice(parent, x0, y0, x1, y1) {\n    (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n  }\n\n  var resquarify = (function custom(ratio) {\n\n    function resquarify(parent, x0, y0, x1, y1) {\n      if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n        var rows,\n            row,\n            nodes,\n            i,\n            j = -1,\n            n,\n            m = rows.length,\n            value = parent.value;\n\n        while (++j < m) {\n          row = rows[j], nodes = row.children;\n          for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n          if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n          else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n          value -= row.value;\n        }\n      } else {\n        parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n        rows.ratio = ratio;\n      }\n    }\n\n    resquarify.ratio = function(x) {\n      return custom((x = +x) > 1 ? x : 1);\n    };\n\n    return resquarify;\n  })(phi);\n\n  function center$1(x, y) {\n    var nodes;\n\n    if (x == null) x = 0;\n    if (y == null) y = 0;\n\n    function force() {\n      var i,\n          n = nodes.length,\n          node,\n          sx = 0,\n          sy = 0;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i], sx += node.x, sy += node.y;\n      }\n\n      for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n        node = nodes[i], node.x -= sx, node.y -= sy;\n      }\n    }\n\n    force.initialize = function(_) {\n      nodes = _;\n    };\n\n    force.x = function(_) {\n      return arguments.length ? (x = +_, force) : x;\n    };\n\n    force.y = function(_) {\n      return arguments.length ? (y = +_, force) : y;\n    };\n\n    return force;\n  }\n\n  function constant$6(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function jiggle() {\n    return (Math.random() - 0.5) * 1e-6;\n  }\n\n  function x$1(d) {\n    return d.x + d.vx;\n  }\n\n  function y$1(d) {\n    return d.y + d.vy;\n  }\n\n  function collide(radius) {\n    var nodes,\n        radii,\n        strength = 1,\n        iterations = 1;\n\n    if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n    function force() {\n      var i, n = nodes.length,\n          tree,\n          node,\n          xi,\n          yi,\n          ri,\n          ri2;\n\n      for (var k = 0; k < iterations; ++k) {\n        tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n        for (i = 0; i < n; ++i) {\n          node = nodes[i];\n          ri = radii[i], ri2 = ri * ri;\n          xi = node.x + node.vx;\n          yi = node.y + node.vy;\n          tree.visit(apply);\n        }\n      }\n\n      function apply(quad, x0, y0, x1, y1) {\n        var data = quad.data, rj = quad.r, r = ri + rj;\n        if (data) {\n          if (data.index > i) {\n            var x = xi - data.x - data.vx,\n                y = yi - data.y - data.vy,\n                l = x * x + y * y;\n            if (l < r * r) {\n              if (x === 0) x = jiggle(), l += x * x;\n              if (y === 0) y = jiggle(), l += y * y;\n              l = (r - (l = Math.sqrt(l))) / l * strength;\n              node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n              node.vy += (y *= l) * r;\n              data.vx -= x * (r = 1 - r);\n              data.vy -= y * r;\n            }\n          }\n          return;\n        }\n        return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n      }\n    }\n\n    function prepare(quad) {\n      if (quad.data) return quad.r = radii[quad.data.index];\n      for (var i = quad.r = 0; i < 4; ++i) {\n        if (quad[i] && quad[i].r > quad.r) {\n          quad.r = quad[i].r;\n        }\n      }\n    }\n\n    force.initialize = function(_) {\n      var i, n = (nodes = _).length; radii = new Array(n);\n      for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);\n    };\n\n    force.iterations = function(_) {\n      return arguments.length ? (iterations = +_, force) : iterations;\n    };\n\n    force.strength = function(_) {\n      return arguments.length ? (strength = +_, force) : strength;\n    };\n\n    force.radius = function(_) {\n      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), force) : radius;\n    };\n\n    return force;\n  }\n\n  function index$2(d, i) {\n    return i;\n  }\n\n  function link(links) {\n    var id = index$2,\n        strength = defaultStrength,\n        strengths,\n        distance = constant$6(30),\n        distances,\n        nodes,\n        count,\n        bias,\n        iterations = 1;\n\n    if (links == null) links = [];\n\n    function defaultStrength(link) {\n      return 1 / Math.min(count[link.source.index], count[link.target.index]);\n    }\n\n    function force(alpha) {\n      for (var k = 0, n = links.length; k < iterations; ++k) {\n        for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n          link = links[i], source = link.source, target = link.target;\n          x = target.x + target.vx - source.x - source.vx || jiggle();\n          y = target.y + target.vy - source.y - source.vy || jiggle();\n          l = Math.sqrt(x * x + y * y);\n          l = (l - distances[i]) / l * alpha * strengths[i];\n          x *= l, y *= l;\n          target.vx -= x * (b = bias[i]);\n          target.vy -= y * b;\n          source.vx += x * (b = 1 - b);\n          source.vy += y * b;\n        }\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n\n      var i,\n          n = nodes.length,\n          m = links.length,\n          nodeById = map$1(nodes, id),\n          link;\n\n      for (i = 0, count = new Array(n); i < n; ++i) {\n        count[i] = 0;\n      }\n\n      for (i = 0; i < m; ++i) {\n        link = links[i], link.index = i;\n        if (typeof link.source !== \"object\") link.source = nodeById.get(link.source);\n        if (typeof link.target !== \"object\") link.target = nodeById.get(link.target);\n        ++count[link.source.index], ++count[link.target.index];\n      }\n\n      for (i = 0, bias = new Array(m); i < m; ++i) {\n        link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n      }\n\n      strengths = new Array(m), initializeStrength();\n      distances = new Array(m), initializeDistance();\n    }\n\n    function initializeStrength() {\n      if (!nodes) return;\n\n      for (var i = 0, n = links.length; i < n; ++i) {\n        strengths[i] = +strength(links[i], i, links);\n      }\n    }\n\n    function initializeDistance() {\n      if (!nodes) return;\n\n      for (var i = 0, n = links.length; i < n; ++i) {\n        distances[i] = +distance(links[i], i, links);\n      }\n    }\n\n    force.initialize = function(_) {\n      nodes = _;\n      initialize();\n    };\n\n    force.links = function(_) {\n      return arguments.length ? (links = _, initialize(), force) : links;\n    };\n\n    force.id = function(_) {\n      return arguments.length ? (id = _, force) : id;\n    };\n\n    force.iterations = function(_) {\n      return arguments.length ? (iterations = +_, force) : iterations;\n    };\n\n    force.strength = function(_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n    };\n\n    force.distance = function(_) {\n      return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n    };\n\n    return force;\n  }\n\n  function x$2(d) {\n    return d.x;\n  }\n\n  function y$2(d) {\n    return d.y;\n  }\n\n  var initialRadius = 10;\n  var initialAngle = Math.PI * (3 - Math.sqrt(5));\n  function simulation(nodes) {\n    var simulation,\n        alpha = 1,\n        alphaMin = 0.001,\n        alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n        alphaTarget = 0,\n        velocityDecay = 0.6,\n        forces = map$1(),\n        stepper = timer(step),\n        event = dispatch(\"tick\", \"end\");\n\n    if (nodes == null) nodes = [];\n\n    function step() {\n      tick();\n      event.call(\"tick\", simulation);\n      if (alpha < alphaMin) {\n        stepper.stop();\n        event.call(\"end\", simulation);\n      }\n    }\n\n    function tick() {\n      var i, n = nodes.length, node;\n\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.each(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    function initializeNodes() {\n      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n        node = nodes[i], node.index = i;\n        if (isNaN(node.x) || isNaN(node.y)) {\n          var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n          node.x = radius * Math.cos(angle);\n          node.y = radius * Math.sin(angle);\n        }\n        if (isNaN(node.vx) || isNaN(node.vy)) {\n          node.vx = node.vy = 0;\n        }\n      }\n    }\n\n    function initializeForce(force) {\n      if (force.initialize) force.initialize(nodes);\n      return force;\n    }\n\n    initializeNodes();\n\n    return simulation = {\n      tick: tick,\n\n      restart: function() {\n        return stepper.restart(step), simulation;\n      },\n\n      stop: function() {\n        return stepper.stop(), simulation;\n      },\n\n      nodes: function(_) {\n        return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n      },\n\n      alpha: function(_) {\n        return arguments.length ? (alpha = +_, simulation) : alpha;\n      },\n\n      alphaMin: function(_) {\n        return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n      },\n\n      alphaDecay: function(_) {\n        return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n      },\n\n      alphaTarget: function(_) {\n        return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n      },\n\n      velocityDecay: function(_) {\n        return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n      },\n\n      force: function(name, _) {\n        return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n      },\n\n      find: function(x, y, radius) {\n        var i = 0,\n            n = nodes.length,\n            dx,\n            dy,\n            d2,\n            node,\n            closest;\n\n        if (radius == null) radius = Infinity;\n        else radius *= radius;\n\n        for (i = 0; i < n; ++i) {\n          node = nodes[i];\n          dx = x - node.x;\n          dy = y - node.y;\n          d2 = dx * dx + dy * dy;\n          if (d2 < radius) closest = node, radius = d2;\n        }\n\n        return closest;\n      },\n\n      on: function(name, _) {\n        return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n      }\n    };\n  }\n\n  function manyBody() {\n    var nodes,\n        node,\n        alpha,\n        strength = constant$6(-30),\n        strengths,\n        distanceMin2 = 1,\n        distanceMax2 = Infinity,\n        theta2 = 0.81;\n\n    function force(_) {\n      var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n      for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i, n = nodes.length;\n      strengths = new Array(n);\n      for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);\n    }\n\n    function accumulate(quad) {\n      var strength = 0, q, c, x, y, i;\n\n      // For internal nodes, accumulate forces from child quadrants.\n      if (quad.length) {\n        for (x = y = i = 0; i < 4; ++i) {\n          if ((q = quad[i]) && (c = q.value)) {\n            strength += c, x += c * q.x, y += c * q.y;\n          }\n        }\n        quad.x = x / strength;\n        quad.y = y / strength;\n      }\n\n      // For leaf nodes, accumulate forces from coincident quadrants.\n      else {\n        q = quad;\n        q.x = q.data.x;\n        q.y = q.data.y;\n        do strength += strengths[q.data.index];\n        while (q = q.next);\n      }\n\n      quad.value = strength;\n    }\n\n    function apply(quad, x1, _, x2) {\n      if (!quad.value) return true;\n\n      var x = quad.x - node.x,\n          y = quad.y - node.y,\n          w = x2 - x1,\n          l = x * x + y * y;\n\n      // Apply the Barnes-Hut approximation if possible.\n      // Limit forces for very close nodes; randomize direction if coincident.\n      if (w * w / theta2 < l) {\n        if (l < distanceMax2) {\n          if (x === 0) x = jiggle(), l += x * x;\n          if (y === 0) y = jiggle(), l += y * y;\n          if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n          node.vx += x * quad.value * alpha / l;\n          node.vy += y * quad.value * alpha / l;\n        }\n        return true;\n      }\n\n      // Otherwise, process points directly.\n      else if (quad.length || l >= distanceMax2) return;\n\n      // Limit forces for very close nodes; randomize direction if coincident.\n      if (quad.data !== node || quad.next) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n      }\n\n      do if (quad.data !== node) {\n        w = strengths[quad.data.index] * alpha / l;\n        node.vx += x * w;\n        node.vy += y * w;\n      } while (quad = quad.next);\n    }\n\n    force.initialize = function(_) {\n      nodes = _;\n      initialize();\n    };\n\n    force.strength = function(_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n    };\n\n    force.distanceMin = function(_) {\n      return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n    };\n\n    force.distanceMax = function(_) {\n      return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n    };\n\n    force.theta = function(_) {\n      return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n    };\n\n    return force;\n  }\n\n  function x$3(x) {\n    var strength = constant$6(0.1),\n        nodes,\n        strengths,\n        xz;\n\n    if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n    function force(alpha) {\n      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n        node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i, n = nodes.length;\n      strengths = new Array(n);\n      xz = new Array(n);\n      for (i = 0; i < n; ++i) {\n        strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n      }\n    }\n\n    force.initialize = function(_) {\n      nodes = _;\n      initialize();\n    };\n\n    force.strength = function(_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n    };\n\n    force.x = function(_) {\n      return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n    };\n\n    return force;\n  }\n\n  function y$3(y) {\n    var strength = constant$6(0.1),\n        nodes,\n        strengths,\n        yz;\n\n    if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n    function force(alpha) {\n      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n        node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i, n = nodes.length;\n      strengths = new Array(n);\n      yz = new Array(n);\n      for (i = 0; i < n; ++i) {\n        strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n      }\n    }\n\n    force.initialize = function(_) {\n      nodes = _;\n      initialize();\n    };\n\n    force.strength = function(_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n    };\n\n    force.y = function(_) {\n      return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n    };\n\n    return force;\n  }\n\n  function nopropagation() {\n    exports.event.stopImmediatePropagation();\n  }\n\n  function noevent() {\n    exports.event.preventDefault();\n    exports.event.stopImmediatePropagation();\n  }\n\n  function dragDisable(view) {\n    var root = view.document.documentElement,\n        selection = select(view).on(\"dragstart.drag\", noevent, true);\n    if (\"onselectstart\" in root) {\n      selection.on(\"selectstart.drag\", noevent, true);\n    } else {\n      root.__noselect = root.style.MozUserSelect;\n      root.style.MozUserSelect = \"none\";\n    }\n  }\n\n  function dragEnable(view, noclick) {\n    var root = view.document.documentElement,\n        selection = select(view).on(\"dragstart.drag\", null);\n    if (noclick) {\n      selection.on(\"click.drag\", noevent, true);\n      setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n    }\n    if (\"onselectstart\" in root) {\n      selection.on(\"selectstart.drag\", null);\n    } else {\n      root.style.MozUserSelect = root.__noselect;\n      delete root.__noselect;\n    }\n  }\n\n  function constant$7(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n    this.target = target;\n    this.type = type;\n    this.subject = subject;\n    this.identifier = id;\n    this.active = active;\n    this.x = x;\n    this.y = y;\n    this.dx = dx;\n    this.dy = dy;\n    this._ = dispatch;\n  }\n\n  DragEvent.prototype.on = function() {\n    var value = this._.on.apply(this._, arguments);\n    return value === this._ ? this : value;\n  };\n\n  // Ignore right-click, since that should open the context menu.\n  function defaultFilter() {\n    return !exports.event.button;\n  }\n\n  function defaultContainer() {\n    return this.parentNode;\n  }\n\n  function defaultSubject(d) {\n    return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n  }\n\n  function drag() {\n    var filter = defaultFilter,\n        container = defaultContainer,\n        subject = defaultSubject,\n        gestures = {},\n        listeners = dispatch(\"start\", \"drag\", \"end\"),\n        active = 0,\n        mousemoving,\n        touchending;\n\n    function drag(selection) {\n      selection\n          .on(\"mousedown.drag\", mousedowned)\n          .on(\"touchstart.drag\", touchstarted)\n          .on(\"touchmove.drag\", touchmoved)\n          .on(\"touchend.drag touchcancel.drag\", touchended)\n          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n    }\n\n    function mousedowned() {\n      if (touchending || !filter.apply(this, arguments)) return;\n      var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n      if (!gesture) return;\n      select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n      dragDisable(exports.event.view);\n      nopropagation();\n      mousemoving = false;\n      gesture(\"start\");\n    }\n\n    function mousemoved() {\n      noevent();\n      mousemoving = true;\n      gestures.mouse(\"drag\");\n    }\n\n    function mouseupped() {\n      select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n      dragEnable(exports.event.view, mousemoving);\n      noevent();\n      gestures.mouse(\"end\");\n    }\n\n    function touchstarted() {\n      if (!filter.apply(this, arguments)) return;\n      var touches = exports.event.changedTouches,\n          c = container.apply(this, arguments),\n          n = touches.length, i, gesture;\n\n      for (i = 0; i < n; ++i) {\n        if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n          nopropagation();\n          gesture(\"start\");\n        }\n      }\n    }\n\n    function touchmoved() {\n      var touches = exports.event.changedTouches,\n          n = touches.length, i, gesture;\n\n      for (i = 0; i < n; ++i) {\n        if (gesture = gestures[touches[i].identifier]) {\n          noevent();\n          gesture(\"drag\");\n        }\n      }\n    }\n\n    function touchended() {\n      var touches = exports.event.changedTouches,\n          n = touches.length, i, gesture;\n\n      if (touchending) clearTimeout(touchending);\n      touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      for (i = 0; i < n; ++i) {\n        if (gesture = gestures[touches[i].identifier]) {\n          nopropagation();\n          gesture(\"end\");\n        }\n      }\n    }\n\n    function beforestart(id, container, point, that, args) {\n      var p = point(container, id), s, dx, dy,\n          sublisteners = listeners.copy();\n\n      if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n        if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n        dx = s.x - p[0] || 0;\n        dy = s.y - p[1] || 0;\n        return true;\n      })) return;\n\n      return function gesture(type) {\n        var p0 = p, n;\n        switch (type) {\n          case \"start\": gestures[id] = gesture, n = active++; break;\n          case \"end\": delete gestures[id], --active; // nobreak\n          case \"drag\": p = point(container, id), n = active; break;\n        }\n        customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n      };\n    }\n\n    drag.filter = function(_) {\n      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$7(!!_), drag) : filter;\n    };\n\n    drag.container = function(_) {\n      return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$7(_), drag) : container;\n    };\n\n    drag.subject = function(_) {\n      return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$7(_), drag) : subject;\n    };\n\n    drag.on = function() {\n      var value = listeners.on.apply(listeners, arguments);\n      return value === listeners ? drag : value;\n    };\n\n    return drag;\n  }\n\n  function constant$8(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function x$4(d) {\n    return d[0];\n  }\n\n  function y$4(d) {\n    return d[1];\n  }\n\n  function RedBlackTree() {\n    this._ = null; // root node\n  }\n\n  function RedBlackNode(node) {\n    node.U = // parent node\n    node.C = // color - true for red, false for black\n    node.L = // left node\n    node.R = // right node\n    node.P = // previous node\n    node.N = null; // next node\n  }\n\n  RedBlackTree.prototype = {\n    constructor: RedBlackTree,\n\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = RedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              RedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            RedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              RedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            RedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n\n      var parent = node.U,\n          sibling,\n          left = node.L,\n          right = node.R,\n          next,\n          red;\n\n      if (!left) next = right;\n      else if (!right) next = left;\n      else next = RedBlackFirst(right);\n\n      if (parent) {\n        if (parent.L === node) parent.L = next;\n        else parent.R = next;\n      } else {\n        this._ = next;\n      }\n\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) { node.C = false; return; }\n\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            RedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if ((sibling.L && sibling.L.C)\n              || (sibling.R && sibling.R.C)) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              RedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            RedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            RedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              RedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            RedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n\n      if (node) node.C = false;\n    }\n  };\n\n  function RedBlackRotateLeft(tree, node) {\n    var p = node,\n        q = node.R,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;\n      else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n\n  function RedBlackRotateRight(tree, node) {\n    var p = node,\n        q = node.L,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;\n      else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n\n  function RedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n\n  function createEdge(left, right, v0, v1) {\n    var edge = [null, null],\n        index = edges.push(edge) - 1;\n    edge.left = left;\n    edge.right = right;\n    if (v0) setEdgeEnd(edge, left, right, v0);\n    if (v1) setEdgeEnd(edge, right, left, v1);\n    cells[left.index].halfedges.push(index);\n    cells[right.index].halfedges.push(index);\n    return edge;\n  }\n\n  function createBorderEdge(left, v0, v1) {\n    var edge = [v0, v1];\n    edge.left = left;\n    return edge;\n  }\n\n  function setEdgeEnd(edge, left, right, vertex) {\n    if (!edge[0] && !edge[1]) {\n      edge[0] = vertex;\n      edge.left = left;\n      edge.right = right;\n    } else if (edge.left === right) {\n      edge[1] = vertex;\n    } else {\n      edge[0] = vertex;\n    }\n  }\n\n  // Liang–Barsky line clipping.\n  function clipEdge(edge, x0, y0, x1, y1) {\n    var a = edge[0],\n        b = edge[1],\n        ax = a[0],\n        ay = a[1],\n        bx = b[0],\n        by = b[1],\n        t0 = 0,\n        t1 = 1,\n        dx = bx - ax,\n        dy = by - ay,\n        r;\n\n    r = x0 - ax;\n    if (!dx && r > 0) return;\n    r /= dx;\n    if (dx < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dx > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n\n    r = x1 - ax;\n    if (!dx && r < 0) return;\n    r /= dx;\n    if (dx < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dx > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n\n    r = y0 - ay;\n    if (!dy && r > 0) return;\n    r /= dy;\n    if (dy < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dy > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n\n    r = y1 - ay;\n    if (!dy && r < 0) return;\n    r /= dy;\n    if (dy < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dy > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n\n    if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n    if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n    if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n    return true;\n  }\n\n  function connectEdge(edge, x0, y0, x1, y1) {\n    var v1 = edge[1];\n    if (v1) return true;\n\n    var v0 = edge[0],\n        left = edge.left,\n        right = edge.right,\n        lx = left[0],\n        ly = left[1],\n        rx = right[0],\n        ry = right[1],\n        fx = (lx + rx) / 2,\n        fy = (ly + ry) / 2,\n        fm,\n        fb;\n\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!v0) v0 = [fx, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [fx, y1];\n      } else {\n        if (!v0) v0 = [fx, y1];\n        else if (v0[1] < y0) return;\n        v1 = [fx, y0];\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!v0) v0 = [(y0 - fb) / fm, y0];\n          else if (v0[1] >= y1) return;\n          v1 = [(y1 - fb) / fm, y1];\n        } else {\n          if (!v0) v0 = [(y1 - fb) / fm, y1];\n          else if (v0[1] < y0) return;\n          v1 = [(y0 - fb) / fm, y0];\n        }\n      } else {\n        if (ly < ry) {\n          if (!v0) v0 = [x0, fm * x0 + fb];\n          else if (v0[0] >= x1) return;\n          v1 = [x1, fm * x1 + fb];\n        } else {\n          if (!v0) v0 = [x1, fm * x1 + fb];\n          else if (v0[0] < x0) return;\n          v1 = [x0, fm * x0 + fb];\n        }\n      }\n    }\n\n    edge[0] = v0;\n    edge[1] = v1;\n    return true;\n  }\n\n  function clipEdges(x0, y0, x1, y1) {\n    var i = edges.length,\n        edge;\n\n    while (i--) {\n      if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n          || !clipEdge(edge, x0, y0, x1, y1)\n          || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n              || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n        delete edges[i];\n      }\n    }\n  }\n\n  function createCell(site) {\n    return cells[site.index] = {\n      site: site,\n      halfedges: []\n    };\n  }\n\n  function cellHalfedgeAngle(cell, edge) {\n    var site = cell.site,\n        va = edge.left,\n        vb = edge.right;\n    if (site === vb) vb = va, va = site;\n    if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n    if (site === va) va = edge[1], vb = edge[0];\n    else va = edge[0], vb = edge[1];\n    return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n  }\n\n  function cellHalfedgeStart(cell, edge) {\n    return edge[+(edge.left !== cell.site)];\n  }\n\n  function cellHalfedgeEnd(cell, edge) {\n    return edge[+(edge.left === cell.site)];\n  }\n\n  function sortCellHalfedges() {\n    for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n      if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n        var index = new Array(m),\n            array = new Array(m);\n        for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n        index.sort(function(i, j) { return array[j] - array[i]; });\n        for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n        for (j = 0; j < m; ++j) halfedges[j] = array[j];\n      }\n    }\n  }\n\n  function clipCells(x0, y0, x1, y1) {\n    var nCells = cells.length,\n        iCell,\n        cell,\n        site,\n        iHalfedge,\n        halfedges,\n        nHalfedges,\n        start,\n        startX,\n        startY,\n        end,\n        endX,\n        endY,\n        cover = true;\n\n    for (iCell = 0; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        halfedges = cell.halfedges;\n        iHalfedge = halfedges.length;\n\n        // Remove any dangling clipped edges.\n        while (iHalfedge--) {\n          if (!edges[halfedges[iHalfedge]]) {\n            halfedges.splice(iHalfedge, 1);\n          }\n        }\n\n        // Insert any border edges as necessary.\n        iHalfedge = 0, nHalfedges = halfedges.length;\n        while (iHalfedge < nHalfedges) {\n          end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n          start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n          if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n            halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n                Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n                : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n                : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n                : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n                : null)) - 1);\n            ++nHalfedges;\n          }\n        }\n\n        if (nHalfedges) cover = false;\n      }\n    }\n\n    // If there weren’t any edges, have the closest site cover the extent.\n    // It doesn’t matter which corner of the extent we measure!\n    if (cover) {\n      var dx, dy, d2, dc = Infinity;\n\n      for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n        if (cell = cells[iCell]) {\n          site = cell.site;\n          dx = site[0] - x0;\n          dy = site[1] - y0;\n          d2 = dx * dx + dy * dy;\n          if (d2 < dc) dc = d2, cover = cell;\n        }\n      }\n\n      if (cover) {\n        var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n        cover.halfedges.push(\n          edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n          edges.push(createBorderEdge(site, v01, v11)) - 1,\n          edges.push(createBorderEdge(site, v11, v10)) - 1,\n          edges.push(createBorderEdge(site, v10, v00)) - 1\n        );\n      }\n    }\n\n    // Lastly delete any cells with no edges; these were entirely clipped.\n    for (iCell = 0; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        if (!cell.halfedges.length) {\n          delete cells[iCell];\n        }\n      }\n    }\n  }\n\n  var circlePool = [];\n\n  var firstCircle;\n\n  function Circle() {\n    RedBlackNode(this);\n    this.x =\n    this.y =\n    this.arc =\n    this.site =\n    this.cy = null;\n  }\n\n  function attachCircle(arc) {\n    var lArc = arc.P,\n        rArc = arc.N;\n\n    if (!lArc || !rArc) return;\n\n    var lSite = lArc.site,\n        cSite = arc.site,\n        rSite = rArc.site;\n\n    if (lSite === rSite) return;\n\n    var bx = cSite[0],\n        by = cSite[1],\n        ax = lSite[0] - bx,\n        ay = lSite[1] - by,\n        cx = rSite[0] - bx,\n        cy = rSite[1] - by;\n\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -epsilon2$1) return;\n\n    var ha = ax * ax + ay * ay,\n        hc = cx * cx + cy * cy,\n        x = (cy * ha - ay * hc) / d,\n        y = (ax * hc - cx * ha) / d;\n\n    var circle = circlePool.pop() || new Circle;\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n    arc.circle = circle;\n\n    var before = null,\n        node = circles._;\n\n    while (node) {\n      if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n        if (node.L) node = node.L;\n        else { before = node.P; break; }\n      } else {\n        if (node.R) node = node.R;\n        else { before = node; break; }\n      }\n    }\n\n    circles.insert(before, circle);\n    if (!before) firstCircle = circle;\n  }\n\n  function detachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) firstCircle = circle.N;\n      circles.remove(circle);\n      circlePool.push(circle);\n      RedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n\n  var beachPool = [];\n\n  function Beach() {\n    RedBlackNode(this);\n    this.edge =\n    this.site =\n    this.circle = null;\n  }\n\n  function createBeach(site) {\n    var beach = beachPool.pop() || new Beach;\n    beach.site = site;\n    return beach;\n  }\n\n  function detachBeach(beach) {\n    detachCircle(beach);\n    beaches.remove(beach);\n    beachPool.push(beach);\n    RedBlackNode(beach);\n  }\n\n  function removeBeach(beach) {\n    var circle = beach.circle,\n        x = circle.x,\n        y = circle.cy,\n        vertex = [x, y],\n        previous = beach.P,\n        next = beach.N,\n        disappearing = [beach];\n\n    detachBeach(beach);\n\n    var lArc = previous;\n    while (lArc.circle\n        && Math.abs(x - lArc.circle.x) < epsilon$3\n        && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      detachBeach(lArc);\n      lArc = previous;\n    }\n\n    disappearing.unshift(lArc);\n    detachCircle(lArc);\n\n    var rArc = next;\n    while (rArc.circle\n        && Math.abs(x - rArc.circle.x) < epsilon$3\n        && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      detachBeach(rArc);\n      rArc = next;\n    }\n\n    disappearing.push(rArc);\n    detachCircle(rArc);\n\n    var nArcs = disappearing.length,\n        iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n    attachCircle(lArc);\n    attachCircle(rArc);\n  }\n\n  function addBeach(site) {\n    var x = site[0],\n        directrix = site[1],\n        lArc,\n        rArc,\n        dxl,\n        dxr,\n        node = beaches._;\n\n    while (node) {\n      dxl = leftBreakPoint(node, directrix) - x;\n      if (dxl > epsilon$3) node = node.L; else {\n        dxr = x - rightBreakPoint(node, directrix);\n        if (dxr > epsilon$3) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -epsilon$3) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -epsilon$3) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n\n    createCell(site);\n    var newArc = createBeach(site);\n    beaches.insert(lArc, newArc);\n\n    if (!lArc && !rArc) return;\n\n    if (lArc === rArc) {\n      detachCircle(lArc);\n      rArc = createBeach(lArc.site);\n      beaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n      attachCircle(lArc);\n      attachCircle(rArc);\n      return;\n    }\n\n    if (!rArc) { // && lArc\n      newArc.edge = createEdge(lArc.site, newArc.site);\n      return;\n    }\n\n    // else lArc !== rArc\n    detachCircle(lArc);\n    detachCircle(rArc);\n\n    var lSite = lArc.site,\n        ax = lSite[0],\n        ay = lSite[1],\n        bx = site[0] - ax,\n        by = site[1] - ay,\n        rSite = rArc.site,\n        cx = rSite[0] - ax,\n        cy = rSite[1] - ay,\n        d = 2 * (bx * cy - by * cx),\n        hb = bx * bx + by * by,\n        hc = cx * cx + cy * cy,\n        vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n    setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = createEdge(lSite, site, null, vertex);\n    rArc.edge = createEdge(site, rSite, null, vertex);\n    attachCircle(lArc);\n    attachCircle(rArc);\n  }\n\n  function leftBreakPoint(arc, directrix) {\n    var site = arc.site,\n        rfocx = site[0],\n        rfocy = site[1],\n        pby2 = rfocy - directrix;\n\n    if (!pby2) return rfocx;\n\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n\n    site = lArc.site;\n    var lfocx = site[0],\n        lfocy = site[1],\n        plby2 = lfocy - directrix;\n\n    if (!plby2) return lfocx;\n\n    var hl = lfocx - rfocx,\n        aby2 = 1 / pby2 - 1 / plby2,\n        b = hl / plby2;\n\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n    return (rfocx + lfocx) / 2;\n  }\n\n  function rightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return leftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site[1] === directrix ? site[0] : Infinity;\n  }\n\n  var epsilon$3 = 1e-6;\n  var epsilon2$1 = 1e-12;\n  var beaches;\n  var cells;\n  var circles;\n  var edges;\n\n  function triangleArea(a, b, c) {\n    return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n  }\n\n  function lexicographic(a, b) {\n    return b[1] - a[1]\n        || b[0] - a[0];\n  }\n\n  function Diagram(sites, extent) {\n    var site = sites.sort(lexicographic).pop(),\n        x,\n        y,\n        circle;\n\n    edges = [];\n    cells = new Array(sites.length);\n    beaches = new RedBlackTree;\n    circles = new RedBlackTree;\n\n    while (true) {\n      circle = firstCircle;\n      if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n        if (site[0] !== x || site[1] !== y) {\n          addBeach(site);\n          x = site[0], y = site[1];\n        }\n        site = sites.pop();\n      } else if (circle) {\n        removeBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n\n    sortCellHalfedges();\n\n    if (extent) {\n      var x0 = +extent[0][0],\n          y0 = +extent[0][1],\n          x1 = +extent[1][0],\n          y1 = +extent[1][1];\n      clipEdges(x0, y0, x1, y1);\n      clipCells(x0, y0, x1, y1);\n    }\n\n    this.edges = edges;\n    this.cells = cells;\n\n    beaches =\n    circles =\n    edges =\n    cells = null;\n  }\n\n  Diagram.prototype = {\n    constructor: Diagram,\n\n    polygons: function() {\n      var edges = this.edges;\n\n      return this.cells.map(function(cell) {\n        var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n        polygon.data = cell.site.data;\n        return polygon;\n      });\n    },\n\n    triangles: function() {\n      var triangles = [],\n          edges = this.edges;\n\n      this.cells.forEach(function(cell, i) {\n        var site = cell.site,\n            halfedges = cell.halfedges,\n            j = -1,\n            m = halfedges.length,\n            s0,\n            e1 = edges[halfedges[m - 1]],\n            s1 = e1.left === site ? e1.right : e1.left;\n\n        while (++j < m) {\n          s0 = s1;\n          e1 = edges[halfedges[j]];\n          s1 = e1.left === site ? e1.right : e1.left;\n          if (i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n            triangles.push([site.data, s0.data, s1.data]);\n          }\n        }\n      });\n\n      return triangles;\n    },\n\n    links: function() {\n      return this.edges.filter(function(edge) {\n        return edge.right;\n      }).map(function(edge) {\n        return {\n          source: edge.left.data,\n          target: edge.right.data\n        };\n      });\n    }\n  }\n\n  function voronoi() {\n    var x = x$4,\n        y = y$4,\n        extent = null;\n\n    function voronoi(data) {\n      return new Diagram(data.map(function(d, i) {\n        var s = [Math.round(x(d, i, data) / epsilon$3) * epsilon$3, Math.round(y(d, i, data) / epsilon$3) * epsilon$3];\n        s.index = i;\n        s.data = d;\n        return s;\n      }), extent);\n    }\n\n    voronoi.polygons = function(data) {\n      return voronoi(data).polygons();\n    };\n\n    voronoi.links = function(data) {\n      return voronoi(data).links();\n    };\n\n    voronoi.triangles = function(data) {\n      return voronoi(data).triangles();\n    };\n\n    voronoi.x = function(_) {\n      return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$8(+_), voronoi) : x;\n    };\n\n    voronoi.y = function(_) {\n      return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$8(+_), voronoi) : y;\n    };\n\n    voronoi.extent = function(_) {\n      return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n    };\n\n    voronoi.size = function(_) {\n      return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n    };\n\n    return voronoi;\n  }\n\n  function constant$9(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function ZoomEvent(target, type, transform) {\n    this.target = target;\n    this.type = type;\n    this.transform = transform;\n  }\n\n  function Transform(k, x, y) {\n    this.k = k;\n    this.x = x;\n    this.y = y;\n  }\n\n  Transform.prototype = {\n    constructor: Transform,\n    scale: function(k) {\n      return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n    },\n    translate: function(x, y) {\n      return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n    },\n    apply: function(point) {\n      return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n    },\n    applyX: function(x) {\n      return x * this.k + this.x;\n    },\n    applyY: function(y) {\n      return y * this.k + this.y;\n    },\n    invert: function(location) {\n      return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n    },\n    invertX: function(x) {\n      return (x - this.x) / this.k;\n    },\n    invertY: function(y) {\n      return (y - this.y) / this.k;\n    },\n    rescaleX: function(x) {\n      return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n    },\n    rescaleY: function(y) {\n      return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n    },\n    toString: function() {\n      return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n    }\n  };\n\n  var identity$6 = new Transform(1, 0, 0);\n\n  transform.prototype = Transform.prototype;\n\n  function transform(node) {\n    return node.__zoom || identity$6;\n  }\n\n  function nopropagation$1() {\n    exports.event.stopImmediatePropagation();\n  }\n\n  function noevent$1() {\n    exports.event.preventDefault();\n    exports.event.stopImmediatePropagation();\n  }\n\n  // Ignore right-click, since that should open the context menu.\n  function defaultFilter$1() {\n    return !exports.event.button;\n  }\n\n  function defaultExtent() {\n    var e = this, w, h;\n    if (e instanceof SVGElement) {\n      e = e.ownerSVGElement || e;\n      w = e.width.baseVal.value;\n      h = e.height.baseVal.value;\n    } else {\n      w = e.clientWidth;\n      h = e.clientHeight;\n    }\n    return [[0, 0], [w, h]];\n  }\n\n  function defaultTransform() {\n    return this.__zoom || identity$6;\n  }\n\n  function zoom() {\n    var filter = defaultFilter$1,\n        extent = defaultExtent,\n        k0 = 0,\n        k1 = Infinity,\n        x0 = -k1,\n        x1 = k1,\n        y0 = x0,\n        y1 = x1,\n        duration = 250,\n        gestures = [],\n        listeners = dispatch(\"start\", \"zoom\", \"end\"),\n        touchstarting,\n        touchending,\n        touchDelay = 500,\n        wheelDelay = 150;\n\n    function zoom(selection) {\n      selection\n          .on(\"wheel.zoom\", wheeled)\n          .on(\"mousedown.zoom\", mousedowned)\n          .on(\"dblclick.zoom\", dblclicked)\n          .on(\"touchstart.zoom\", touchstarted)\n          .on(\"touchmove.zoom\", touchmoved)\n          .on(\"touchend.zoom touchcancel.zoom\", touchended)\n          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n          .property(\"__zoom\", defaultTransform);\n    }\n\n    zoom.transform = function(collection, transform) {\n      var selection = collection.selection ? collection.selection() : collection;\n      selection.property(\"__zoom\", defaultTransform);\n      if (collection !== selection) {\n        schedule(collection, transform);\n      } else {\n        selection.interrupt().each(function() {\n          gesture(this, arguments)\n              .start()\n              .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n              .end();\n        });\n      }\n    };\n\n    zoom.scaleBy = function(selection, k) {\n      zoom.scaleTo(selection, function() {\n        var k0 = this.__zoom.k,\n            k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n        return k0 * k1;\n      });\n    };\n\n    zoom.scaleTo = function(selection, k) {\n      zoom.transform(selection, function() {\n        var e = extent.apply(this, arguments),\n            t0 = this.__zoom,\n            p0 = centroid(e),\n            p1 = t0.invert(p0),\n            k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n        return constrain(translate(scale(t0, k1), p0, p1), e);\n      });\n    };\n\n    zoom.translateBy = function(selection, x, y) {\n      zoom.transform(selection, function() {\n        return constrain(this.__zoom.translate(\n          typeof x === \"function\" ? x.apply(this, arguments) : x,\n          typeof y === \"function\" ? y.apply(this, arguments) : y\n        ), extent.apply(this, arguments));\n      });\n    };\n\n    function scale(transform, k) {\n      k = Math.max(k0, Math.min(k1, k));\n      return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n    }\n\n    function translate(transform, p0, p1) {\n      var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n      return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n    }\n\n    function constrain(transform, extent) {\n      var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),\n          dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);\n      return dx || dy ? transform.translate(dx, dy) : transform;\n    }\n\n    function centroid(extent) {\n      return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n    }\n\n    function schedule(transition, transform, center) {\n      transition\n          .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n          .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n          .tween(\"zoom\", function() {\n            var that = this,\n                args = arguments,\n                g = gesture(that, args),\n                e = extent.apply(that, args),\n                p = center || centroid(e),\n                w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n                a = that.__zoom,\n                b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n                i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n            return function(t) {\n              if (t === 1) t = b; // Avoid rounding error on end.\n              else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n              g.zoom(null, t);\n            };\n          });\n    }\n\n    function gesture(that, args) {\n      for (var i = 0, n = gestures.length, g; i < n; ++i) {\n        if ((g = gestures[i]).that === that) {\n          return g;\n        }\n      }\n      return new Gesture(that, args);\n    }\n\n    function Gesture(that, args) {\n      this.that = that;\n      this.args = args;\n      this.index = -1;\n      this.active = 0;\n      this.extent = extent.apply(that, args);\n    }\n\n    Gesture.prototype = {\n      start: function() {\n        if (++this.active === 1) {\n          this.index = gestures.push(this) - 1;\n          this.emit(\"start\");\n        }\n        return this;\n      },\n      zoom: function(key, transform) {\n        if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n        if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n        if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n        this.that.__zoom = transform;\n        this.emit(\"zoom\");\n        return this;\n      },\n      end: function() {\n        if (--this.active === 0) {\n          gestures.splice(this.index, 1);\n          this.index = -1;\n          this.emit(\"end\");\n        }\n        return this;\n      },\n      emit: function(type) {\n        customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n      }\n    };\n\n    function wheeled() {\n      if (!filter.apply(this, arguments)) return;\n      var g = gesture(this, arguments),\n          t = this.__zoom,\n          k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n          p = mouse(this);\n\n      // If the mouse is in the same location as before, reuse it.\n      // If there were recent wheel events, reset the wheel idle timeout.\n      if (g.wheel) {\n        if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n          g.mouse[1] = t.invert(g.mouse[0] = p);\n        }\n        clearTimeout(g.wheel);\n      }\n\n      // If this wheel event won’t trigger a transform change, ignore it.\n      else if (t.k === k) return;\n\n      // Otherwise, capture the mouse point and location at the start.\n      else {\n        g.mouse = [p, t.invert(p)];\n        interrupt(this);\n        g.start();\n      }\n\n      noevent$1();\n      g.wheel = setTimeout(wheelidled, wheelDelay);\n      g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n      function wheelidled() {\n        g.wheel = null;\n        g.end();\n      }\n    }\n\n    function mousedowned() {\n      if (touchending || !filter.apply(this, arguments)) return;\n      var g = gesture(this, arguments),\n          v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n          p = mouse(this);\n\n      dragDisable(exports.event.view);\n      nopropagation$1();\n      g.mouse = [p, this.__zoom.invert(p)];\n      interrupt(this);\n      g.start();\n\n      function mousemoved() {\n        noevent$1();\n        g.moved = true;\n        g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n      }\n\n      function mouseupped() {\n        v.on(\"mousemove.zoom mouseup.zoom\", null);\n        dragEnable(exports.event.view, g.moved);\n        noevent$1();\n        g.end();\n      }\n    }\n\n    function dblclicked() {\n      if (!filter.apply(this, arguments)) return;\n      var t0 = this.__zoom,\n          p0 = mouse(this),\n          p1 = t0.invert(p0),\n          k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n          t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n      noevent$1();\n      if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n      else select(this).call(zoom.transform, t1);\n    }\n\n    function touchstarted() {\n      if (!filter.apply(this, arguments)) return;\n      var g = gesture(this, arguments),\n          touches = exports.event.changedTouches,\n          n = touches.length, i, t, p;\n\n      nopropagation$1();\n      for (i = 0; i < n; ++i) {\n        t = touches[i], p = touch(this, touches, t.identifier);\n        p = [p, this.__zoom.invert(p), t.identifier];\n        if (!g.touch0) g.touch0 = p;\n        else if (!g.touch1) g.touch1 = p;\n      }\n      if (touchstarting) {\n        touchstarting = clearTimeout(touchstarting);\n        if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);\n      }\n      if (exports.event.touches.length === n) {\n        touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n        interrupt(this);\n        g.start();\n      }\n    }\n\n    function touchmoved() {\n      var g = gesture(this, arguments),\n          touches = exports.event.changedTouches,\n          n = touches.length, i, t, p, l;\n\n      noevent$1();\n      if (touchstarting) touchstarting = clearTimeout(touchstarting);\n      for (i = 0; i < n; ++i) {\n        t = touches[i], p = touch(this, touches, t.identifier);\n        if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n        else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n      }\n      t = g.that.__zoom;\n      if (g.touch1) {\n        var p0 = g.touch0[0], l0 = g.touch0[1],\n            p1 = g.touch1[0], l1 = g.touch1[1],\n            dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n            dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n        t = scale(t, Math.sqrt(dp / dl));\n        p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n        l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n      }\n      else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n      else return;\n      g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n    }\n\n    function touchended() {\n      var g = gesture(this, arguments),\n          touches = exports.event.changedTouches,\n          n = touches.length, i, t;\n\n      nopropagation$1();\n      if (touchending) clearTimeout(touchending);\n      touchending = setTimeout(function() { touchending = null; }, touchDelay);\n      for (i = 0; i < n; ++i) {\n        t = touches[i];\n        if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n        else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n      }\n      if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n      if (!g.touch0) g.end();\n    }\n\n    zoom.filter = function(_) {\n      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$9(!!_), zoom) : filter;\n    };\n\n    zoom.extent = function(_) {\n      return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$9([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n    };\n\n    zoom.scaleExtent = function(_) {\n      return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n    };\n\n    zoom.translateExtent = function(_) {\n      return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n    };\n\n    zoom.duration = function(_) {\n      return arguments.length ? (duration = +_, zoom) : duration;\n    };\n\n    zoom.on = function() {\n      var value = listeners.on.apply(listeners, arguments);\n      return value === listeners ? zoom : value;\n    };\n\n    return zoom;\n  }\n\n  function constant$10(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function BrushEvent(target, type, selection) {\n    this.target = target;\n    this.type = type;\n    this.selection = selection;\n  }\n\n  function nopropagation$2() {\n    exports.event.stopImmediatePropagation();\n  }\n\n  function noevent$2() {\n    exports.event.preventDefault();\n    exports.event.stopImmediatePropagation();\n  }\n\n  var MODE_DRAG = {name: \"drag\"};\n  var MODE_SPACE = {name: \"space\"};\n  var MODE_HANDLE = {name: \"handle\"};\n  var MODE_CENTER = {name: \"center\"};\n  var X = {\n    name: \"x\",\n    handles: [\"e\", \"w\"].map(type$1),\n    input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n    output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n  };\n\n  var Y = {\n    name: \"y\",\n    handles: [\"n\", \"s\"].map(type$1),\n    input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n    output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n  };\n\n  var XY = {\n    name: \"xy\",\n    handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n    input: function(xy) { return xy; },\n    output: function(xy) { return xy; }\n  };\n\n  var cursors = {\n    overlay: \"crosshair\",\n    selection: \"move\",\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n\n  var flipX = {\n    e: \"w\",\n    w: \"e\",\n    nw: \"ne\",\n    ne: \"nw\",\n    se: \"sw\",\n    sw: \"se\"\n  };\n\n  var flipY = {\n    n: \"s\",\n    s: \"n\",\n    nw: \"sw\",\n    ne: \"se\",\n    se: \"ne\",\n    sw: \"nw\"\n  };\n\n  var signsX = {\n    overlay: +1,\n    selection: +1,\n    n: null,\n    e: +1,\n    s: null,\n    w: -1,\n    nw: -1,\n    ne: +1,\n    se: +1,\n    sw: -1\n  };\n\n  var signsY = {\n    overlay: +1,\n    selection: +1,\n    n: -1,\n    e: null,\n    s: +1,\n    w: null,\n    nw: -1,\n    ne: -1,\n    se: +1,\n    sw: +1\n  };\n\n  function type$1(t) {\n    return {type: t};\n  }\n\n  // Ignore right-click, since that should open the context menu.\n  function defaultFilter$2() {\n    return !exports.event.button;\n  }\n\n  function defaultExtent$1() {\n    var svg = this.ownerSVGElement || this;\n    return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n  }\n\n  // Like d3.local, but with the name “__brush” rather than auto-generated.\n  function local$1(node) {\n    while (!node.__brush) if (!(node = node.parentNode)) return;\n    return node.__brush;\n  }\n\n  function empty$1(extent) {\n    return extent[0][0] === extent[1][0]\n        || extent[0][1] === extent[1][1];\n  }\n\n  function brushSelection(node) {\n    var state = node.__brush;\n    return state ? state.dim.output(state.selection) : null;\n  }\n\n  function brushX() {\n    return brush$1(X);\n  }\n\n  function brushY() {\n    return brush$1(Y);\n  }\n\n  function brush() {\n    return brush$1(XY);\n  }\n\n  function brush$1(dim) {\n    var extent = defaultExtent$1,\n        filter = defaultFilter$2,\n        listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n        handleSize = 6,\n        touchending;\n\n    function brush(group) {\n      var overlay = group\n          .property(\"__brush\", initialize)\n        .selectAll(\".overlay\")\n        .data([type$1(\"overlay\")]);\n\n      overlay.enter().append(\"rect\")\n          .attr(\"class\", \"overlay\")\n          .attr(\"pointer-events\", \"all\")\n          .attr(\"cursor\", cursors.overlay)\n        .merge(overlay)\n          .each(function() {\n            var extent = local$1(this).extent;\n            select(this)\n                .attr(\"x\", extent[0][0])\n                .attr(\"y\", extent[0][1])\n                .attr(\"width\", extent[1][0] - extent[0][0])\n                .attr(\"height\", extent[1][1] - extent[0][1]);\n          });\n\n      group.selectAll(\".selection\")\n        .data([type$1(\"selection\")])\n        .enter().append(\"rect\")\n          .attr(\"class\", \"selection\")\n          .attr(\"cursor\", cursors.selection)\n          .attr(\"fill\", \"#777\")\n          .attr(\"fill-opacity\", 0.3)\n          .attr(\"stroke\", \"#fff\")\n          .attr(\"shape-rendering\", \"crispEdges\");\n\n      var handle = group.selectAll(\".handle\")\n        .data(dim.handles, function(d) { return d.type; });\n\n      handle.exit().remove();\n\n      handle.enter().append(\"rect\")\n          .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n          .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n      group\n          .each(redraw)\n          .attr(\"fill\", \"none\")\n          .attr(\"pointer-events\", \"all\")\n          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n          .on(\"mousedown.brush touchstart.brush\", started);\n    }\n\n    brush.move = function(group, selection) {\n      if (group.selection) {\n        group\n            .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n            .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n            .tween(\"brush\", function() {\n              var that = this,\n                  state = that.__brush,\n                  emit = emitter(that, arguments),\n                  selection0 = state.selection,\n                  selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                  i = interpolate(selection0, selection1);\n\n              function tween(t) {\n                state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n                redraw.call(that);\n                emit.brush();\n              }\n\n              return selection0 && selection1 ? tween : tween(1);\n            });\n      } else {\n        group\n            .each(function() {\n              var that = this,\n                  args = arguments,\n                  state = that.__brush,\n                  selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                  emit = emitter(that, args).beforestart();\n\n              interrupt(that);\n              state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n              redraw.call(that);\n              emit.start().brush().end();\n            });\n      }\n    };\n\n    function redraw() {\n      var group = select(this),\n          selection = local$1(this).selection;\n\n      if (selection) {\n        group.selectAll(\".selection\")\n            .style(\"display\", null)\n            .attr(\"x\", selection[0][0])\n            .attr(\"y\", selection[0][1])\n            .attr(\"width\", selection[1][0] - selection[0][0])\n            .attr(\"height\", selection[1][1] - selection[0][1]);\n\n        group.selectAll(\".handle\")\n            .style(\"display\", null)\n            .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n            .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n            .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n            .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n      }\n\n      else {\n        group.selectAll(\".selection,.handle\")\n            .style(\"display\", \"none\")\n            .attr(\"x\", null)\n            .attr(\"y\", null)\n            .attr(\"width\", null)\n            .attr(\"height\", null);\n      }\n    }\n\n    function emitter(that, args) {\n      return that.__brush.emitter || new Emitter(that, args);\n    }\n\n    function Emitter(that, args) {\n      this.that = that;\n      this.args = args;\n      this.state = that.__brush;\n      this.active = 0;\n    }\n\n    Emitter.prototype = {\n      beforestart: function() {\n        if (++this.active === 1) this.state.emitter = this, this.starting = true;\n        return this;\n      },\n      start: function() {\n        if (this.starting) this.starting = false, this.emit(\"start\");\n        return this;\n      },\n      brush: function() {\n        this.emit(\"brush\");\n        return this;\n      },\n      end: function() {\n        if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n        return this;\n      },\n      emit: function(type) {\n        customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n      }\n    };\n\n    function started() {\n      if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n      else if (touchending) return;\n      if (!filter.apply(this, arguments)) return;\n\n      var that = this,\n          type = exports.event.target.__data__.type,\n          mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n          signX = dim === Y ? null : signsX[type],\n          signY = dim === X ? null : signsY[type],\n          state = local$1(that),\n          extent = state.extent,\n          selection = state.selection,\n          W = extent[0][0], w0, w1,\n          N = extent[0][1], n0, n1,\n          E = extent[1][0], e0, e1,\n          S = extent[1][1], s0, s1,\n          dx,\n          dy,\n          moving,\n          shifting = signX && signY && exports.event.shiftKey,\n          lockX,\n          lockY,\n          point0 = mouse(that),\n          point = point0,\n          emit = emitter(that, arguments).beforestart();\n\n      if (type === \"overlay\") {\n        state.selection = selection = [\n          [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n          [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n        ];\n      } else {\n        w0 = selection[0][0];\n        n0 = selection[0][1];\n        e0 = selection[1][0];\n        s0 = selection[1][1];\n      }\n\n      w1 = w0;\n      n1 = n0;\n      e1 = e0;\n      s1 = s0;\n\n      var group = select(that)\n          .attr(\"pointer-events\", \"none\");\n\n      var overlay = group.selectAll(\".overlay\")\n          .attr(\"cursor\", cursors[type]);\n\n      if (exports.event.touches) {\n        group\n            .on(\"touchmove.brush\", moved, true)\n            .on(\"touchend.brush touchcancel.brush\", ended, true);\n      } else {\n        var view = select(exports.event.view)\n            .on(\"keydown.brush\", keydowned, true)\n            .on(\"keyup.brush\", keyupped, true)\n            .on(\"mousemove.brush\", moved, true)\n            .on(\"mouseup.brush\", ended, true);\n\n        dragDisable(exports.event.view);\n      }\n\n      nopropagation$2();\n      interrupt(that);\n      redraw.call(that);\n      emit.start();\n\n      function moved() {\n        var point1 = mouse(that);\n        if (shifting && !lockX && !lockY) {\n          if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n          else lockX = true;\n        }\n        point = point1;\n        moving = true;\n        noevent$2();\n        move();\n      }\n\n      function move() {\n        var t;\n\n        dx = point[0] - point0[0];\n        dy = point[1] - point0[1];\n\n        switch (mode) {\n          case MODE_SPACE:\n          case MODE_DRAG: {\n            if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n            if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n            break;\n          }\n          case MODE_HANDLE: {\n            if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n            else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n            else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n            break;\n          }\n          case MODE_CENTER: {\n            if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n            if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n            break;\n          }\n        }\n\n        if (e1 < w1) {\n          signX *= -1;\n          t = w0, w0 = e0, e0 = t;\n          t = w1, w1 = e1, e1 = t;\n          if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n        }\n\n        if (s1 < n1) {\n          signY *= -1;\n          t = n0, n0 = s0, s0 = t;\n          t = n1, n1 = s1, s1 = t;\n          if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n        }\n\n        selection = state.selection; // May be set by brush.move!\n\n        if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n        if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n        if (selection[0][0] !== w1\n            || selection[0][1] !== n1\n            || selection[1][0] !== e1\n            || selection[1][1] !== s1) {\n          state.selection = [[w1, n1], [e1, s1]];\n          redraw.call(that);\n          emit.brush();\n        }\n      }\n\n      function ended() {\n        nopropagation$2();\n        if (exports.event.touches) {\n          if (exports.event.touches.length) return;\n          if (touchending) clearTimeout(touchending);\n          touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n          group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n        } else {\n          dragEnable(exports.event.view, moving);\n          view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n        }\n        group.attr(\"pointer-events\", \"all\");\n        overlay.attr(\"cursor\", cursors.overlay);\n        if (empty$1(selection)) state.selection = null, redraw.call(that);\n        emit.end();\n      }\n\n      function keydowned() {\n        switch (exports.event.keyCode) {\n          case 16: { // SHIFT\n            shifting = signX && signY;\n            break;\n          }\n          case 18: { // ALT\n            if (mode === MODE_HANDLE) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n              move();\n            }\n            break;\n          }\n          case 32: { // SPACE; takes priority over ALT\n            if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n              if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n              mode = MODE_SPACE;\n              overlay.attr(\"cursor\", cursors.selection);\n              move();\n            }\n            break;\n          }\n          default: return;\n        }\n        noevent$2();\n      }\n\n      function keyupped() {\n        switch (exports.event.keyCode) {\n          case 16: { // SHIFT\n            if (shifting) {\n              lockX = lockY = shifting = false;\n              move();\n            }\n            break;\n          }\n          case 18: { // ALT\n            if (mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n              move();\n            }\n            break;\n          }\n          case 32: { // SPACE\n            if (mode === MODE_SPACE) {\n              if (exports.event.altKey) {\n                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n                mode = MODE_CENTER;\n              } else {\n                if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n                if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n                mode = MODE_HANDLE;\n              }\n              overlay.attr(\"cursor\", cursors[type]);\n              move();\n            }\n            break;\n          }\n          default: return;\n        }\n        noevent$2();\n      }\n    }\n\n    function initialize() {\n      var state = this.__brush || {selection: null};\n      state.extent = extent.apply(this, arguments);\n      state.dim = dim;\n      return state;\n    }\n\n    brush.extent = function(_) {\n      return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n    };\n\n    brush.filter = function(_) {\n      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), brush) : filter;\n    };\n\n    brush.handleSize = function(_) {\n      return arguments.length ? (handleSize = +_, brush) : handleSize;\n    };\n\n    brush.on = function() {\n      var value = listeners.on.apply(listeners, arguments);\n      return value === listeners ? brush : value;\n    };\n\n    return brush;\n  }\n\n  var cos = Math.cos;\n  var sin = Math.sin;\n  var pi$3 = Math.PI;\n  var halfPi$2 = pi$3 / 2;\n  var tau$3 = pi$3 * 2;\n  var max$1 = Math.max;\n\n  function compareValue(compare) {\n    return function(a, b) {\n      return compare(\n        a.source.value + a.target.value,\n        b.source.value + b.target.value\n      );\n    };\n  }\n\n  function chord() {\n    var padAngle = 0,\n        sortGroups = null,\n        sortSubgroups = null,\n        sortChords = null;\n\n    function chord(matrix) {\n      var n = matrix.length,\n          groupSums = [],\n          groupIndex = range(n),\n          subgroupIndex = [],\n          chords = [],\n          groups = chords.groups = new Array(n),\n          subgroups = new Array(n * n),\n          k,\n          x,\n          x0,\n          dx,\n          i,\n          j;\n\n      // Compute the sum.\n      k = 0, i = -1; while (++i < n) {\n        x = 0, j = -1; while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(range(n));\n        k += x;\n      }\n\n      // Sort groups…\n      if (sortGroups) groupIndex.sort(function(a, b) {\n        return sortGroups(groupSums[a], groupSums[b]);\n      });\n\n      // Sort subgroups…\n      if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n        d.sort(function(a, b) {\n          return sortSubgroups(matrix[i][a], matrix[i][b]);\n        });\n      });\n\n      // Convert the sum to scaling factor for [0, 2pi].\n      // TODO Allow start and end angle to be specified?\n      // TODO Allow padding to be specified as percentage?\n      k = max$1(0, tau$3 - padAngle * n) / k;\n      dx = k ? padAngle : tau$3 / n;\n\n      // Compute the start and end angle for each group and subgroup.\n      // Note: Opera has a bug reordering object literal properties!\n      x = 0, i = -1; while (++i < n) {\n        x0 = x, j = -1; while (++j < n) {\n          var di = groupIndex[i],\n              dj = subgroupIndex[di][j],\n              v = matrix[di][dj],\n              a0 = x,\n              a1 = x += v * k;\n          subgroups[dj * n + di] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += dx;\n      }\n\n      // Generate chords for each (non-empty) subgroup-subgroup link.\n      i = -1; while (++i < n) {\n        j = i - 1; while (++j < n) {\n          var source = subgroups[j * n + i],\n              target = subgroups[i * n + j];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value\n                ? {source: target, target: source}\n                : {source: source, target: target});\n          }\n        }\n      }\n\n      return sortChords ? chords.sort(sortChords) : chords;\n    }\n\n    chord.padAngle = function(_) {\n      return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n    };\n\n    chord.sortGroups = function(_) {\n      return arguments.length ? (sortGroups = _, chord) : sortGroups;\n    };\n\n    chord.sortSubgroups = function(_) {\n      return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n    };\n\n    chord.sortChords = function(_) {\n      return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n    };\n\n    return chord;\n  }\n\n  var slice$5 = Array.prototype.slice;\n\n  function constant$11(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function defaultSource(d) {\n    return d.source;\n  }\n\n  function defaultTarget(d) {\n    return d.target;\n  }\n\n  function defaultRadius$1(d) {\n    return d.radius;\n  }\n\n  function defaultStartAngle(d) {\n    return d.startAngle;\n  }\n\n  function defaultEndAngle(d) {\n    return d.endAngle;\n  }\n\n  function ribbon() {\n    var source = defaultSource,\n        target = defaultTarget,\n        radius = defaultRadius$1,\n        startAngle = defaultStartAngle,\n        endAngle = defaultEndAngle,\n        context = null;\n\n    function ribbon() {\n      var buffer,\n          argv = slice$5.call(arguments),\n          s = source.apply(this, argv),\n          t = target.apply(this, argv),\n          sr = +radius.apply(this, (argv[0] = s, argv)),\n          sa0 = startAngle.apply(this, argv) - halfPi$2,\n          sa1 = endAngle.apply(this, argv) - halfPi$2,\n          sx0 = sr * cos(sa0),\n          sy0 = sr * sin(sa0),\n          tr = +radius.apply(this, (argv[0] = t, argv)),\n          ta0 = startAngle.apply(this, argv) - halfPi$2,\n          ta1 = endAngle.apply(this, argv) - halfPi$2;\n\n      if (!context) context = buffer = path();\n\n      context.moveTo(sx0, sy0);\n      context.arc(0, 0, sr, sa0, sa1);\n      if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n        context.arc(0, 0, tr, ta0, ta1);\n      }\n      context.quadraticCurveTo(0, 0, sx0, sy0);\n      context.closePath();\n\n      if (buffer) return context = null, buffer + \"\" || null;\n    }\n\n    ribbon.radius = function(_) {\n      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$11(+_), ribbon) : radius;\n    };\n\n    ribbon.startAngle = function(_) {\n      return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$11(+_), ribbon) : startAngle;\n    };\n\n    ribbon.endAngle = function(_) {\n      return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$11(+_), ribbon) : endAngle;\n    };\n\n    ribbon.source = function(_) {\n      return arguments.length ? (source = _, ribbon) : source;\n    };\n\n    ribbon.target = function(_) {\n      return arguments.length ? (target = _, ribbon) : target;\n    };\n\n    ribbon.context = function(_) {\n      return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n    };\n\n    return ribbon;\n  }\n\n  // Adds floating point numbers with twice the normal precision.\n  // Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n  // Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n  // 305–363 (1997).\n  // Code adapted from GeographicLib by Charles F. F. Karney,\n  // http://geographiclib.sourceforge.net/\n\n  function adder() {\n    return new Adder;\n  }\n\n  function Adder() {\n    this.reset();\n  }\n\n  Adder.prototype = {\n    constructor: Adder,\n    reset: function() {\n      this.s = // rounded value\n      this.t = 0; // exact error\n    },\n    add: function(y) {\n      add$1(temp, y, this.t);\n      add$1(this, temp.s, this.s);\n      if (this.s) this.t += temp.t;\n      else this.s = temp.t;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n\n  var temp = new Adder;\n\n  function add$1(adder, a, b) {\n    var x = adder.s = a + b,\n        bv = x - a,\n        av = x - bv;\n    adder.t = (a - av) + (b - bv);\n  }\n\n  var epsilon$4 = 1e-6;\n  var epsilon2$2 = 1e-12;\n  var pi$4 = Math.PI;\n  var halfPi$3 = pi$4 / 2;\n  var quarterPi = pi$4 / 4;\n  var tau$4 = pi$4 * 2;\n\n  var degrees$1 = 180 / pi$4;\n  var radians = pi$4 / 180;\n\n  var abs = Math.abs;\n  var atan = Math.atan;\n  var atan2 = Math.atan2;\n  var cos$1 = Math.cos;\n  var ceil = Math.ceil;\n  var exp = Math.exp;\n  var log$1 = Math.log;\n  var pow$1 = Math.pow;\n  var sin$1 = Math.sin;\n  var sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n  var sqrt$1 = Math.sqrt;\n  var tan = Math.tan;\n\n  function acos(x) {\n    return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n  }\n\n  function asin$1(x) {\n    return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n  }\n\n  function haversin(x) {\n    return (x = sin$1(x / 2)) * x;\n  }\n\n  function noop$2() {}\n\n  function streamGeometry(geometry, stream) {\n    if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n      streamGeometryType[geometry.type](geometry, stream);\n    }\n  }\n\n  var streamObjectType = {\n    Feature: function(feature, stream) {\n      streamGeometry(feature.geometry, stream);\n    },\n    FeatureCollection: function(object, stream) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) streamGeometry(features[i].geometry, stream);\n    }\n  };\n\n  var streamGeometryType = {\n    Sphere: function(object, stream) {\n      stream.sphere();\n    },\n    Point: function(object, stream) {\n      object = object.coordinates;\n      stream.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, stream) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, stream) {\n      streamLine(object.coordinates, stream, 0);\n    },\n    MultiLineString: function(object, stream) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) streamLine(coordinates[i], stream, 0);\n    },\n    Polygon: function(object, stream) {\n      streamPolygon(object.coordinates, stream);\n    },\n    MultiPolygon: function(object, stream) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) streamPolygon(coordinates[i], stream);\n    },\n    GeometryCollection: function(object, stream) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) streamGeometry(geometries[i], stream);\n    }\n  };\n\n  function streamLine(coordinates, stream, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    stream.lineStart();\n    while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n    stream.lineEnd();\n  }\n\n  function streamPolygon(coordinates, stream) {\n    var i = -1, n = coordinates.length;\n    stream.polygonStart();\n    while (++i < n) streamLine(coordinates[i], stream, 1);\n    stream.polygonEnd();\n  }\n\n  function stream(object, stream) {\n    if (object && streamObjectType.hasOwnProperty(object.type)) {\n      streamObjectType[object.type](object, stream);\n    } else {\n      streamGeometry(object, stream);\n    }\n  }\n\n  var areaRingSum;\n\n  var areaSum;\n  var lambda00;\n  var phi00;\n  var lambda0;\n  var cosPhi0;\n  var sinPhi0;\n  var areaStream = {\n    point: noop$2,\n    lineStart: noop$2,\n    lineEnd: noop$2,\n    polygonStart: function() {\n      areaRingSum.reset();\n      areaStream.lineStart = areaRingStart;\n      areaStream.lineEnd = areaRingEnd;\n    },\n    polygonEnd: function() {\n      var areaRing = +areaRingSum;\n      areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n      this.lineStart = this.lineEnd = this.point = noop$2;\n    },\n    sphere: function() {\n      areaSum.add(tau$4);\n    }\n  };\n\n  function areaRingStart() {\n    areaStream.point = areaPointFirst;\n  }\n\n  function areaRingEnd() {\n    areaPoint(lambda00, phi00);\n  }\n\n  function areaPointFirst(lambda, phi) {\n    areaStream.point = areaPoint;\n    lambda00 = lambda, phi00 = phi;\n    lambda *= radians, phi *= radians;\n    lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n  }\n\n  function areaPoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n    // Spherical excess E for a spherical triangle with vertices: south pole,\n    // previous point, current point.  Uses a formula derived from Cagnoli’s\n    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n    var dLambda = lambda - lambda0,\n        sdLambda = dLambda >= 0 ? 1 : -1,\n        adLambda = sdLambda * dLambda,\n        cosPhi = cos$1(phi),\n        sinPhi = sin$1(phi),\n        k = sinPhi0 * sinPhi,\n        u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n        v = k * sdLambda * sin$1(adLambda);\n    areaRingSum.add(atan2(v, u));\n\n    // Advance the previous points.\n    lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n  }\n\n  function area$2(object) {\n    if (areaSum) areaSum.reset();\n    else areaSum = adder(), areaRingSum = adder();\n    stream(object, areaStream);\n    return areaSum * 2;\n  }\n\n  function spherical(cartesian) {\n    return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n  }\n\n  function cartesian(spherical) {\n    var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n    return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n  }\n\n  function cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n\n  function cartesianCross(a, b) {\n    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n  }\n\n  // TODO return a\n  function cartesianAddInPlace(a, b) {\n    a[0] += b[0], a[1] += b[1], a[2] += b[2];\n  }\n\n  function cartesianScale(vector, k) {\n    return [vector[0] * k, vector[1] * k, vector[2] * k];\n  }\n\n  // TODO return d\n  function cartesianNormalizeInPlace(d) {\n    var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l, d[1] /= l, d[2] /= l;\n  }\n\nvar   lambda0$1;\n  var phi0;\n  var lambda1;\n  var phi1;\n  var lambda2;\nvar   lambda00$1;\nvar   phi00$1;\n  var p0;\n  var deltaSum;\n  var ranges;\nvar   range$1;\n  var boundsStream = {\n    point: boundsPoint,\n    lineStart: boundsLineStart,\n    lineEnd: boundsLineEnd,\n    polygonStart: function() {\n      boundsStream.point = boundsRingPoint;\n      boundsStream.lineStart = boundsRingStart;\n      boundsStream.lineEnd = boundsRingEnd;\n      deltaSum.reset();\n      areaStream.polygonStart();\n    },\n    polygonEnd: function() {\n      areaStream.polygonEnd();\n      boundsStream.point = boundsPoint;\n      boundsStream.lineStart = boundsLineStart;\n      boundsStream.lineEnd = boundsLineEnd;\n      if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n      else if (deltaSum > epsilon$4) phi1 = 90;\n      else if (deltaSum < -epsilon$4) phi0 = -90;\n      range$1[0] = lambda0$1, range$1[1] = lambda1;\n    }\n  };\n\n  function boundsPoint(lambda, phi) {\n    ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n    if (phi < phi0) phi0 = phi;\n    if (phi > phi1) phi1 = phi;\n  }\n\n  function linePoint(lambda, phi) {\n    var p = cartesian([lambda * radians, phi * radians]);\n    if (p0) {\n      var normal = cartesianCross(p0, p),\n          equatorial = [normal[1], -normal[0], 0],\n          inflection = cartesianCross(equatorial, normal);\n      cartesianNormalizeInPlace(inflection);\n      inflection = spherical(inflection);\n      var delta = lambda - lambda2,\n          sign = delta > 0 ? 1 : -1,\n          lambdai = inflection[0] * degrees$1 * sign,\n          phii,\n          antimeridian = abs(delta) > 180;\n      if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n        phii = inflection[1] * degrees$1;\n        if (phii > phi1) phi1 = phii;\n      } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n        phii = -inflection[1] * degrees$1;\n        if (phii < phi0) phi0 = phii;\n      } else {\n        if (phi < phi0) phi0 = phi;\n        if (phi > phi1) phi1 = phi;\n      }\n      if (antimeridian) {\n        if (lambda < lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      } else {\n        if (lambda1 >= lambda0$1) {\n          if (lambda < lambda0$1) lambda0$1 = lambda;\n          if (lambda > lambda1) lambda1 = lambda;\n        } else {\n          if (lambda > lambda2) {\n            if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n          } else {\n            if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n          }\n        }\n      }\n    } else {\n      boundsPoint(lambda, phi);\n    }\n    p0 = p, lambda2 = lambda;\n  }\n\n  function boundsLineStart() {\n    boundsStream.point = linePoint;\n  }\n\n  function boundsLineEnd() {\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n    boundsStream.point = boundsPoint;\n    p0 = null;\n  }\n\n  function boundsRingPoint(lambda, phi) {\n    if (p0) {\n      var delta = lambda - lambda2;\n      deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n    } else {\n      lambda00$1 = lambda, phi00$1 = phi;\n    }\n    areaStream.point(lambda, phi);\n    linePoint(lambda, phi);\n  }\n\n  function boundsRingStart() {\n    areaStream.lineStart();\n  }\n\n  function boundsRingEnd() {\n    boundsRingPoint(lambda00$1, phi00$1);\n    areaStream.lineEnd();\n    if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n    p0 = null;\n  }\n\n  // Finds the left-right distance between two longitudes.\n  // This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n  // the distance between ±180° to be 360°.\n  function angle(lambda0, lambda1) {\n    return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n  }\n\n  function rangeCompare(a, b) {\n    return a[0] - b[0];\n  }\n\n  function rangeContains(range, x) {\n    return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n  }\n\n  function bounds(feature) {\n    var i, n, a, b, merged, deltaMax, delta;\n\n    if (deltaSum) deltaSum.reset();\n    else deltaSum = adder();\n    phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n    ranges = [];\n    stream(feature, boundsStream);\n\n    // First, sort ranges by their minimum longitudes.\n    if (n = ranges.length) {\n      ranges.sort(rangeCompare);\n\n      // Then, merge any ranges that overlap.\n      for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n        b = ranges[i];\n        if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n          if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n          if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n        } else {\n          merged.push(a = b);\n        }\n      }\n\n      // Finally, find the largest gap between the merged ranges.\n      // The final bounding box will be the inverse of this gap.\n      for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n        b = merged[i];\n        if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n      }\n    }\n\n    ranges = range$1 = null;\n\n    return lambda0$1 === Infinity || phi0 === Infinity\n        ? [[NaN, NaN], [NaN, NaN]]\n        : [[lambda0$1, phi0], [lambda1, phi1]];\n  }\n\n  var W0;\n  var W1;\n  var X0;\n  var Y0;\n  var Z0;\n  var X1;\n  var Y1;\n  var Z1;\n  var X2;\n  var Y2;\n  var Z2;\nvar   lambda00$2;\nvar   phi00$2;\n  var x0;\n  var y0;\n  var z0;\n  // previous point\n\n  var centroidStream = {\n    sphere: noop$2,\n    point: centroidPoint,\n    lineStart: centroidLineStart,\n    lineEnd: centroidLineEnd,\n    polygonStart: function() {\n      centroidStream.lineStart = centroidRingStart;\n      centroidStream.lineEnd = centroidRingEnd;\n    },\n    polygonEnd: function() {\n      centroidStream.lineStart = centroidLineStart;\n      centroidStream.lineEnd = centroidLineEnd;\n    }\n  };\n\n  // Arithmetic mean of Cartesian vectors.\n  function centroidPoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var cosPhi = cos$1(phi);\n    centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n  }\n\n  function centroidPointCartesian(x, y, z) {\n    ++W0;\n    X0 += (x - X0) / W0;\n    Y0 += (y - Y0) / W0;\n    Z0 += (z - Z0) / W0;\n  }\n\n  function centroidLineStart() {\n    centroidStream.point = centroidLinePointFirst;\n  }\n\n  function centroidLinePointFirst(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var cosPhi = cos$1(phi);\n    x0 = cosPhi * cos$1(lambda);\n    y0 = cosPhi * sin$1(lambda);\n    z0 = sin$1(phi);\n    centroidStream.point = centroidLinePoint;\n    centroidPointCartesian(x0, y0, z0);\n  }\n\n  function centroidLinePoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var cosPhi = cos$1(phi),\n        x = cosPhi * cos$1(lambda),\n        y = cosPhi * sin$1(lambda),\n        z = sin$1(phi),\n        w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n    W1 += w;\n    X1 += w * (x0 + (x0 = x));\n    Y1 += w * (y0 + (y0 = y));\n    Z1 += w * (z0 + (z0 = z));\n    centroidPointCartesian(x0, y0, z0);\n  }\n\n  function centroidLineEnd() {\n    centroidStream.point = centroidPoint;\n  }\n\n  // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n  // J. Applied Mechanics 42, 239 (1975).\n  function centroidRingStart() {\n    centroidStream.point = centroidRingPointFirst;\n  }\n\n  function centroidRingEnd() {\n    centroidRingPoint(lambda00$2, phi00$2);\n    centroidStream.point = centroidPoint;\n  }\n\n  function centroidRingPointFirst(lambda, phi) {\n    lambda00$2 = lambda, phi00$2 = phi;\n    lambda *= radians, phi *= radians;\n    centroidStream.point = centroidRingPoint;\n    var cosPhi = cos$1(phi);\n    x0 = cosPhi * cos$1(lambda);\n    y0 = cosPhi * sin$1(lambda);\n    z0 = sin$1(phi);\n    centroidPointCartesian(x0, y0, z0);\n  }\n\n  function centroidRingPoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var cosPhi = cos$1(phi),\n        x = cosPhi * cos$1(lambda),\n        y = cosPhi * sin$1(lambda),\n        z = sin$1(phi),\n        cx = y0 * z - z0 * y,\n        cy = z0 * x - x0 * z,\n        cz = x0 * y - y0 * x,\n        m = sqrt$1(cx * cx + cy * cy + cz * cz),\n        u = x0 * x + y0 * y + z0 * z,\n        v = m && -acos(u) / m, // area weight\n        w = atan2(m, u); // line weight\n    X2 += v * cx;\n    Y2 += v * cy;\n    Z2 += v * cz;\n    W1 += w;\n    X1 += w * (x0 + (x0 = x));\n    Y1 += w * (y0 + (y0 = y));\n    Z1 += w * (z0 + (z0 = z));\n    centroidPointCartesian(x0, y0, z0);\n  }\n\n  function centroid$1(object) {\n    W0 = W1 =\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    stream(object, centroidStream);\n\n    var x = X2,\n        y = Y2,\n        z = Z2,\n        m = x * x + y * y + z * z;\n\n    // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n    if (m < epsilon2$2) {\n      x = X1, y = Y1, z = Z1;\n      // If the feature has zero length, fall back to arithmetic mean of point vectors.\n      if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n      m = x * x + y * y + z * z;\n      // If the feature still has an undefined ccentroid, then return.\n      if (m < epsilon2$2) return [NaN, NaN];\n    }\n\n    return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n  }\n\n  function constant$12(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function compose(a, b) {\n\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n\n    return compose;\n  }\n\n  function rotationIdentity(lambda, phi) {\n    return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n  }\n\n  rotationIdentity.invert = rotationIdentity;\n\n  function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n    return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n      : rotationLambda(deltaLambda))\n      : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n      : rotationIdentity);\n  }\n\n  function forwardRotationLambda(deltaLambda) {\n    return function(lambda, phi) {\n      return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n    };\n  }\n\n  function rotationLambda(deltaLambda) {\n    var rotation = forwardRotationLambda(deltaLambda);\n    rotation.invert = forwardRotationLambda(-deltaLambda);\n    return rotation;\n  }\n\n  function rotationPhiGamma(deltaPhi, deltaGamma) {\n    var cosDeltaPhi = cos$1(deltaPhi),\n        sinDeltaPhi = sin$1(deltaPhi),\n        cosDeltaGamma = cos$1(deltaGamma),\n        sinDeltaGamma = sin$1(deltaGamma);\n\n    function rotation(lambda, phi) {\n      var cosPhi = cos$1(phi),\n          x = cos$1(lambda) * cosPhi,\n          y = sin$1(lambda) * cosPhi,\n          z = sin$1(phi),\n          k = z * cosDeltaPhi + x * sinDeltaPhi;\n      return [\n        atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n        asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n      ];\n    }\n\n    rotation.invert = function(lambda, phi) {\n      var cosPhi = cos$1(phi),\n          x = cos$1(lambda) * cosPhi,\n          y = sin$1(lambda) * cosPhi,\n          z = sin$1(phi),\n          k = z * cosDeltaGamma - y * sinDeltaGamma;\n      return [\n        atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n        asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n      ];\n    };\n\n    return rotation;\n  }\n\n  function rotation(rotate) {\n    rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n      return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n    }\n\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n      return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n    };\n\n    return forward;\n  }\n\n  // Generates a circle centered at [0°, 0°], with a given radius and precision.\n  function circleStream(stream, radius, delta, direction, t0, t1) {\n    if (!delta) return;\n    var cosRadius = cos$1(radius),\n        sinRadius = sin$1(radius),\n        step = direction * delta;\n    if (t0 == null) {\n      t0 = radius + direction * tau$4;\n      t1 = radius - step / 2;\n    } else {\n      t0 = circleRadius(cosRadius, t0);\n      t1 = circleRadius(cosRadius, t1);\n      if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n    }\n    for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n      point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n      stream.point(point[0], point[1]);\n    }\n  }\n\n  // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n  function circleRadius(cosRadius, point) {\n    point = cartesian(point), point[0] -= cosRadius;\n    cartesianNormalizeInPlace(point);\n    var radius = acos(-point[1]);\n    return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n  }\n\n  function circle$1() {\n    var center = constant$12([0, 0]),\n        radius = constant$12(90),\n        precision = constant$12(6),\n        ring,\n        rotate,\n        stream = {point: point};\n\n    function point(x, y) {\n      ring.push(x = rotate(x, y));\n      x[0] *= degrees$1, x[1] *= degrees$1;\n    }\n\n    function circle() {\n      var c = center.apply(this, arguments),\n          r = radius.apply(this, arguments) * radians,\n          p = precision.apply(this, arguments) * radians;\n      ring = [];\n      rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n      circleStream(stream, r, p, 1);\n      c = {type: \"Polygon\", coordinates: [ring]};\n      ring = rotate = null;\n      return c;\n    }\n\n    circle.center = function(_) {\n      return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$12([+_[0], +_[1]]), circle) : center;\n    };\n\n    circle.radius = function(_) {\n      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), circle) : radius;\n    };\n\n    circle.precision = function(_) {\n      return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$12(+_), circle) : precision;\n    };\n\n    return circle;\n  }\n\n  function clipBuffer() {\n    var lines = [],\n        line;\n    return {\n      point: function(x, y) {\n        line.push([x, y]);\n      },\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      lineEnd: noop$2,\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      },\n      result: function() {\n        var result = lines;\n        lines = [];\n        line = null;\n        return result;\n      }\n    };\n  }\n\n  function clipLine(a, b, x0, y0, x1, y1) {\n    var ax = a[0],\n        ay = a[1],\n        bx = b[0],\n        by = b[1],\n        t0 = 0,\n        t1 = 1,\n        dx = bx - ax,\n        dy = by - ay,\n        r;\n\n    r = x0 - ax;\n    if (!dx && r > 0) return;\n    r /= dx;\n    if (dx < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dx > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n\n    r = x1 - ax;\n    if (!dx && r < 0) return;\n    r /= dx;\n    if (dx < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dx > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n\n    r = y0 - ay;\n    if (!dy && r > 0) return;\n    r /= dy;\n    if (dy < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dy > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n\n    r = y1 - ay;\n    if (!dy && r < 0) return;\n    r /= dy;\n    if (dy < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dy > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n\n    if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n    if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n    return true;\n  }\n\n  function pointEqual(a, b) {\n    return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n  }\n\n  function Intersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other; // another intersection\n    this.e = entry; // is an entry?\n    this.v = false; // visited\n    this.n = this.p = null; // next & previous\n  }\n\n  // A generalized polygon clipping algorithm: given a polygon that has been cut\n  // into its visible line segments, and rejoins the segments by interpolating\n  // along the clip edge.\n  function clipPolygon(segments, compareIntersection, startInside, interpolate, stream) {\n    var subject = [],\n        clip = [],\n        i,\n        n;\n\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n], x;\n\n      // If the first and last points of a segment are coincident, then treat as a\n      // closed ring. TODO if all rings are closed, then the winding order of the\n      // exterior ring should be checked.\n      if (pointEqual(p0, p1)) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n\n      subject.push(x = new Intersection(p0, segment, null, true));\n      clip.push(x.o = new Intersection(p0, null, x, false));\n      subject.push(x = new Intersection(p1, segment, null, false));\n      clip.push(x.o = new Intersection(p1, null, x, true));\n    });\n\n    if (!subject.length) return;\n\n    clip.sort(compareIntersection);\n    link$1(subject);\n    link$1(clip);\n\n    for (i = 0, n = clip.length; i < n; ++i) {\n      clip[i].e = startInside = !startInside;\n    }\n\n    var start = subject[0],\n        points,\n        point;\n\n    while (1) {\n      // Find first unvisited intersection.\n      var current = start,\n          isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      stream.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, stream);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, stream);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      stream.lineEnd();\n    }\n  }\n\n  function link$1(array) {\n    if (!(n = array.length)) return;\n    var n,\n        i = 0,\n        a = array[0],\n        b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n\n  var clipMax = 1e9;\n  var clipMin = -clipMax;\n  // TODO Use d3-polygon’s polygonContains here for the ring check?\n  // TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\n  function clipExtent(x0, y0, x1, y1) {\n\n    function visible(x, y) {\n      return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n    }\n\n    function interpolate(from, to, direction, stream) {\n      var a = 0, a1 = 0;\n      if (from == null\n          || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n          || comparePoint(from, to) < 0 ^ direction > 0) {\n        do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n        while ((a = (a + direction + 4) % 4) !== a1);\n      } else {\n        stream.point(to[0], to[1]);\n      }\n    }\n\n    function corner(p, direction) {\n      return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n          : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n          : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n          : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n    }\n\n    function compareIntersection(a, b) {\n      return comparePoint(a.x, b.x);\n    }\n\n    function comparePoint(a, b) {\n      var ca = corner(a, 1),\n          cb = corner(b, 1);\n      return ca !== cb ? ca - cb\n          : ca === 0 ? b[1] - a[1]\n          : ca === 1 ? a[0] - b[0]\n          : ca === 2 ? a[1] - b[1]\n          : b[0] - a[0];\n    }\n\n    return function(stream) {\n      var activeStream = stream,\n          bufferStream = clipBuffer(),\n          segments,\n          polygon,\n          ring,\n          x__, y__, v__, // first point\n          x_, y_, v_, // previous point\n          first,\n          clean;\n\n      var clipStream = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: polygonStart,\n        polygonEnd: polygonEnd\n      };\n\n      function point(x, y) {\n        if (visible(x, y)) activeStream.point(x, y);\n      }\n\n      function polygonInside() {\n        var winding = 0;\n\n        for (var i = 0, n = polygon.length; i < n; ++i) {\n          for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n            a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n            if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n            else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n          }\n        }\n\n        return winding;\n      }\n\n      // Buffer geometry within a polygon and then clip it en masse.\n      function polygonStart() {\n        activeStream = bufferStream, segments = [], polygon = [], clean = true;\n      }\n\n      function polygonEnd() {\n        var startInside = polygonInside(),\n            cleanInside = clean && startInside,\n            visible = (segments = merge(segments)).length;\n        if (cleanInside || visible) {\n          stream.polygonStart();\n          if (cleanInside) {\n            stream.lineStart();\n            interpolate(null, null, 1, stream);\n            stream.lineEnd();\n          }\n          if (visible) {\n            clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n          }\n          stream.polygonEnd();\n        }\n        activeStream = stream, segments = polygon = ring = null;\n      }\n\n      function lineStart() {\n        clipStream.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n\n      // TODO rather than special-case polygons, simply handle them separately.\n      // Ideally, coincident intersection points should be jittered to avoid\n      // clipping issues.\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferStream.rejoin();\n          segments.push(bufferStream.result());\n        }\n        clipStream.point = point;\n        if (v_) activeStream.lineEnd();\n      }\n\n      function linePoint(x, y) {\n        var v = visible(x, y);\n        if (polygon) ring.push([x, y]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n          }\n        } else {\n          if (v && v_) activeStream.point(x, y);\n          else {\n            var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n                b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n            if (clipLine(a, b, x0, y0, x1, y1)) {\n              if (!v_) {\n                activeStream.lineStart();\n                activeStream.point(a[0], a[1]);\n              }\n              activeStream.point(b[0], b[1]);\n              if (!v) activeStream.lineEnd();\n              clean = false;\n            } else if (v) {\n              activeStream.lineStart();\n              activeStream.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n\n      return clipStream;\n    };\n  }\n\n  function extent$1() {\n    var x0 = 0,\n        y0 = 0,\n        x1 = 960,\n        y1 = 500,\n        cache,\n        cacheStream,\n        clip;\n\n    return clip = {\n      stream: function(stream) {\n        return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n      },\n      extent: function(_) {\n        return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n      }\n    };\n  }\n\n  var lengthSum;\nvar   lambda0$2;\nvar   sinPhi0$1;\nvar   cosPhi0$1;\n  var lengthStream = {\n    sphere: noop$2,\n    point: noop$2,\n    lineStart: lengthLineStart,\n    lineEnd: noop$2,\n    polygonStart: noop$2,\n    polygonEnd: noop$2\n  };\n\n  function lengthLineStart() {\n    lengthStream.point = lengthPointFirst;\n    lengthStream.lineEnd = lengthLineEnd;\n  }\n\n  function lengthLineEnd() {\n    lengthStream.point = lengthStream.lineEnd = noop$2;\n  }\n\n  function lengthPointFirst(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n    lengthStream.point = lengthPoint;\n  }\n\n  function lengthPoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var sinPhi = sin$1(phi),\n        cosPhi = cos$1(phi),\n        delta = abs(lambda - lambda0$2),\n        cosDelta = cos$1(delta),\n        sinDelta = sin$1(delta),\n        x = cosPhi * sinDelta,\n        y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n        z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n    lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n    lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n  }\n\n  function length$2(object) {\n    if (lengthSum) lengthSum.reset();\n    else lengthSum = adder();\n    stream(object, lengthStream);\n    return +lengthSum;\n  }\n\n  var coordinates = [null, null];\nvar   object$1 = {type: \"LineString\", coordinates: coordinates};\n  function distance(a, b) {\n    coordinates[0] = a;\n    coordinates[1] = b;\n    return length$2(object$1);\n  }\n\n  function graticuleX(y0, y1, dy) {\n    var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n    return function(x) { return y.map(function(y) { return [x, y]; }); };\n  }\n\n  function graticuleY(x0, x1, dx) {\n    var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n    return function(y) { return x.map(function(x) { return [x, y]; }); };\n  }\n\n  function graticule() {\n    var x1, x0, X1, X0,\n        y1, y0, Y1, Y0,\n        dx = 10, dy = dx, DX = 90, DY = 360,\n        x, y, X, Y,\n        precision = 2.5;\n\n    function graticule() {\n      return {type: \"MultiLineString\", coordinates: lines()};\n    }\n\n    function lines() {\n      return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n          .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n          .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n          .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n    }\n\n    graticule.lines = function() {\n      return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n    };\n\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [\n          X(X0).concat(\n          Y(Y1).slice(1),\n          X(X1).reverse().slice(1),\n          Y(Y0).reverse().slice(1))\n        ]\n      };\n    };\n\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.extentMinor();\n      return graticule.extentMajor(_).extentMinor(_);\n    };\n\n    graticule.extentMajor = function(_) {\n      if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.extentMinor = function(_) {\n      if (!arguments.length) return [[x0, y0], [x1, y1]];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.stepMinor();\n      return graticule.stepMajor(_).stepMinor(_);\n    };\n\n    graticule.stepMajor = function(_) {\n      if (!arguments.length) return [DX, DY];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n\n    graticule.stepMinor = function(_) {\n      if (!arguments.length) return [dx, dy];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = graticuleX(y0, y1, 90);\n      y = graticuleY(x0, x1, precision);\n      X = graticuleX(Y0, Y1, 90);\n      Y = graticuleY(X0, X1, precision);\n      return graticule;\n    };\n\n    return graticule\n        .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n        .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n  }\n\n  function interpolate$2(a, b) {\n    var x0 = a[0] * radians,\n        y0 = a[1] * radians,\n        x1 = b[0] * radians,\n        y1 = b[1] * radians,\n        cy0 = cos$1(y0),\n        sy0 = sin$1(y0),\n        cy1 = cos$1(y1),\n        sy1 = sin$1(y1),\n        kx0 = cy0 * cos$1(x0),\n        ky0 = cy0 * sin$1(x0),\n        kx1 = cy1 * cos$1(x1),\n        ky1 = cy1 * sin$1(x1),\n        d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n        k = sin$1(d);\n\n    var interpolate = d ? function(t) {\n      var B = sin$1(t *= d) / k,\n          A = sin$1(d - t) / k,\n          x = A * kx0 + B * kx1,\n          y = A * ky0 + B * ky1,\n          z = A * sy0 + B * sy1;\n      return [\n        atan2(y, x) * degrees$1,\n        atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n      ];\n    } : function() {\n      return [x0 * degrees$1, y0 * degrees$1];\n    };\n\n    interpolate.distance = d;\n\n    return interpolate;\n  }\n\n  function identity$7(x) {\n    return x;\n  }\n\nvar   areaSum$1 = adder();\nvar   areaRingSum$1 = adder();\n  var x00;\n  var y00;\nvar   x0$1;\nvar   y0$1;\n  var areaStream$1 = {\n    point: noop$2,\n    lineStart: noop$2,\n    lineEnd: noop$2,\n    polygonStart: function() {\n      areaStream$1.lineStart = areaRingStart$1;\n      areaStream$1.lineEnd = areaRingEnd$1;\n    },\n    polygonEnd: function() {\n      areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n      areaSum$1.add(abs(areaRingSum$1));\n      areaRingSum$1.reset();\n    },\n    result: function() {\n      var area = areaSum$1 / 2;\n      areaSum$1.reset();\n      return area;\n    }\n  };\n\n  function areaRingStart$1() {\n    areaStream$1.point = areaPointFirst$1;\n  }\n\n  function areaPointFirst$1(x, y) {\n    areaStream$1.point = areaPoint$1;\n    x00 = x0$1 = x, y00 = y0$1 = y;\n  }\n\n  function areaPoint$1(x, y) {\n    areaRingSum$1.add(y0$1 * x - x0$1 * y);\n    x0$1 = x, y0$1 = y;\n  }\n\n  function areaRingEnd$1() {\n    areaPoint$1(x00, y00);\n  }\n\nvar   x0$2 = Infinity;\nvar   y0$2 = x0$2;\n  var x1 = -x0$2;\n  var y1 = x1;\n  var boundsStream$1 = {\n    point: boundsPoint$1,\n    lineStart: noop$2,\n    lineEnd: noop$2,\n    polygonStart: noop$2,\n    polygonEnd: noop$2,\n    result: function() {\n      var bounds = [[x0$2, y0$2], [x1, y1]];\n      x1 = y1 = -(y0$2 = x0$2 = Infinity);\n      return bounds;\n    }\n  };\n\n  function boundsPoint$1(x, y) {\n    if (x < x0$2) x0$2 = x;\n    if (x > x1) x1 = x;\n    if (y < y0$2) y0$2 = y;\n    if (y > y1) y1 = y;\n  }\n\nvar   X0$1 = 0;\nvar   Y0$1 = 0;\nvar   Z0$1 = 0;\nvar   X1$1 = 0;\nvar   Y1$1 = 0;\nvar   Z1$1 = 0;\nvar   X2$1 = 0;\nvar   Y2$1 = 0;\nvar   Z2$1 = 0;\nvar   x00$1;\nvar   y00$1;\nvar   x0$3;\nvar   y0$3;\n  var centroidStream$1 = {\n    point: centroidPoint$1,\n    lineStart: centroidLineStart$1,\n    lineEnd: centroidLineEnd$1,\n    polygonStart: function() {\n      centroidStream$1.lineStart = centroidRingStart$1;\n      centroidStream$1.lineEnd = centroidRingEnd$1;\n    },\n    polygonEnd: function() {\n      centroidStream$1.point = centroidPoint$1;\n      centroidStream$1.lineStart = centroidLineStart$1;\n      centroidStream$1.lineEnd = centroidLineEnd$1;\n    },\n    result: function() {\n      var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n          : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n          : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n          : [NaN, NaN];\n      X0$1 = Y0$1 = Z0$1 =\n      X1$1 = Y1$1 = Z1$1 =\n      X2$1 = Y2$1 = Z2$1 = 0;\n      return centroid;\n    }\n  };\n\n  function centroidPoint$1(x, y) {\n    X0$1 += x;\n    Y0$1 += y;\n    ++Z0$1;\n  }\n\n  function centroidLineStart$1() {\n    centroidStream$1.point = centroidPointFirstLine;\n  }\n\n  function centroidPointFirstLine(x, y) {\n    centroidStream$1.point = centroidPointLine;\n    centroidPoint$1(x0$3 = x, y0$3 = y);\n  }\n\n  function centroidPointLine(x, y) {\n    var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n    X1$1 += z * (x0$3 + x) / 2;\n    Y1$1 += z * (y0$3 + y) / 2;\n    Z1$1 += z;\n    centroidPoint$1(x0$3 = x, y0$3 = y);\n  }\n\n  function centroidLineEnd$1() {\n    centroidStream$1.point = centroidPoint$1;\n  }\n\n  function centroidRingStart$1() {\n    centroidStream$1.point = centroidPointFirstRing;\n  }\n\n  function centroidRingEnd$1() {\n    centroidPointRing(x00$1, y00$1);\n  }\n\n  function centroidPointFirstRing(x, y) {\n    centroidStream$1.point = centroidPointRing;\n    centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n  }\n\n  function centroidPointRing(x, y) {\n    var dx = x - x0$3,\n        dy = y - y0$3,\n        z = sqrt$1(dx * dx + dy * dy);\n\n    X1$1 += z * (x0$3 + x) / 2;\n    Y1$1 += z * (y0$3 + y) / 2;\n    Z1$1 += z;\n\n    z = y0$3 * x - x0$3 * y;\n    X2$1 += z * (x0$3 + x);\n    Y2$1 += z * (y0$3 + y);\n    Z2$1 += z * 3;\n    centroidPoint$1(x0$3 = x, y0$3 = y);\n  }\n\n  function PathContext(context) {\n    var pointRadius = 4.5;\n\n    var stream = {\n      point: point,\n\n      // While inside a line, override point to moveTo then lineTo.\n      lineStart: function() { stream.point = pointLineStart; },\n      lineEnd: lineEnd,\n\n      // While inside a polygon, override lineEnd to closePath.\n      polygonStart: function() { stream.lineEnd = lineEndPolygon; },\n      polygonEnd: function() { stream.lineEnd = lineEnd; stream.point = point; },\n\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n\n      result: noop$2\n    };\n\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, tau$4);\n    }\n\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      context.closePath();\n    }\n\n    return stream;\n  }\n\n  function PathString() {\n    var pointCircle = circle$2(4.5),\n        string = [];\n\n    var stream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = circle$2(_);\n        return stream;\n      },\n      result: function() {\n        if (string.length) {\n          var result = string.join(\"\");\n          string = [];\n          return result;\n        }\n      }\n    };\n\n    function point(x, y) {\n      string.push(\"M\", x, \",\", y, pointCircle);\n    }\n\n    function pointLineStart(x, y) {\n      string.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      string.push(\"L\", x, \",\", y);\n    }\n\n    function lineStart() {\n      stream.point = pointLineStart;\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      string.push(\"Z\");\n    }\n\n    return stream;\n  }\n\n  function circle$2(radius) {\n    return \"m0,\" + radius\n        + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n        + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n        + \"z\";\n  }\n\n  function index$3() {\n    var pointRadius = 4.5,\n        projection,\n        projectionStream,\n        context,\n        contextStream;\n\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        stream(object, projectionStream(contextStream));\n      }\n      return contextStream.result();\n    }\n\n    path.area = function(object) {\n      stream(object, projectionStream(areaStream$1));\n      return areaStream$1.result();\n    };\n\n    path.bounds = function(object) {\n      stream(object, projectionStream(boundsStream$1));\n      return boundsStream$1.result();\n    };\n\n    path.centroid = function(object) {\n      stream(object, projectionStream(centroidStream$1));\n      return centroidStream$1.result();\n    };\n\n    path.projection = function(_) {\n      return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;\n    };\n\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new PathString : new PathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return path;\n    };\n\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n\n    return path.projection(null).context(null);\n  }\n\n  var sum$2 = adder();\n\n  function polygonContains(polygon, point) {\n    var lambda = point[0],\n        phi = point[1],\n        normal = [sin$1(lambda), -cos$1(lambda), 0],\n        angle = 0,\n        winding = 0;\n\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      if (!(m = (ring = polygon[i]).length)) continue;\n      var ring,\n          m,\n          point0 = ring[m - 1],\n          lambda0 = point0[0],\n          phi0 = point0[1] / 2 + quarterPi,\n          sinPhi0 = sin$1(phi0),\n          cosPhi0 = cos$1(phi0);\n\n      for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n        var point1 = ring[j],\n            lambda1 = point1[0],\n            phi1 = point1[1] / 2 + quarterPi,\n            sinPhi1 = sin$1(phi1),\n            cosPhi1 = cos$1(phi1),\n            delta = lambda1 - lambda0,\n            sign = delta >= 0 ? 1 : -1,\n            absDelta = sign * delta,\n            antimeridian = absDelta > pi$4,\n            k = sinPhi0 * sinPhi1;\n\n        sum$2.add(atan2(k * sign * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n        angle += antimeridian ? delta + sign * tau$4 : delta;\n\n        // Are the longitudes either side of the point’s meridian (lambda),\n        // and are the latitudes smaller than the parallel (phi)?\n        if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n          var arc = cartesianCross(cartesian(point0), cartesian(point1));\n          cartesianNormalizeInPlace(arc);\n          var intersection = cartesianCross(normal, arc);\n          cartesianNormalizeInPlace(intersection);\n          var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n          if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ delta >= 0 ? 1 : -1;\n          }\n        }\n      }\n    }\n\n    // First, determine whether the South pole is inside or outside:\n    //\n    // It is inside if:\n    // * the polygon winds around it in a clockwise direction.\n    // * the polygon does not (cumulatively) wind around it, but has a negative\n    //   (counter-clockwise) area.\n    //\n    // Second, count the (signed) number of times a segment crosses a lambda\n    // from the point to the South pole.  If it is zero, then the point is the\n    // same side as the South pole.\n\n    var contains = (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n    sum$2.reset();\n    return contains;\n  }\n\n  function clip(pointVisible, clipLine, interpolate, start) {\n    return function(rotate, sink) {\n      var line = clipLine(sink),\n          rotatedStart = rotate.invert(start[0], start[1]),\n          ringBuffer = clipBuffer(),\n          ringSink = clipLine(ringBuffer),\n          polygonStarted = false,\n          polygon,\n          segments,\n          ring;\n\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = merge(segments);\n          var startInside = polygonContains(polygon, rotatedStart);\n          if (segments.length) {\n            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n            clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n          } else if (startInside) {\n            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n            sink.lineStart();\n            interpolate(null, null, 1, sink);\n            sink.lineEnd();\n          }\n          if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          sink.polygonStart();\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n          sink.polygonEnd();\n        }\n      };\n\n      function point(lambda, phi) {\n        var point = rotate(lambda, phi);\n        if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n      }\n\n      function pointLine(lambda, phi) {\n        var point = rotate(lambda, phi);\n        line.point(point[0], point[1]);\n      }\n\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n\n      function pointRing(lambda, phi) {\n        ring.push([lambda, phi]);\n        var point = rotate(lambda, phi);\n        ringSink.point(point[0], point[1]);\n      }\n\n      function ringStart() {\n        ringSink.lineStart();\n        ring = [];\n      }\n\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringSink.lineEnd();\n\n        var clean = ringSink.clean(),\n            ringSegments = ringBuffer.result(),\n            i, n = ringSegments.length, m,\n            segment,\n            point;\n\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n\n        if (!n) return;\n\n        // No intersections.\n        if (clean & 1) {\n          segment = ringSegments[0];\n          if ((m = segment.length - 1) > 0) {\n            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n            sink.lineStart();\n            for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n            sink.lineEnd();\n          }\n          return;\n        }\n\n        // Rejoin connected segments.\n        // TODO reuse ringBuffer.rejoin()?\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n        segments.push(ringSegments.filter(validSegment));\n      }\n\n      return clip;\n    };\n  }\n\n  function validSegment(segment) {\n    return segment.length > 1;\n  }\n\n  // Intersections are sorted along the clip edge. For both antimeridian cutting\n  // and circle clipping, the same comparison is used.\n  function compareIntersection(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n         - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n  }\n\n  var clipAntimeridian = clip(\n    function() { return true; },\n    clipAntimeridianLine,\n    clipAntimeridianInterpolate,\n    [-pi$4, -halfPi$3]\n  );\n\n  // Takes a line and cuts into visible segments. Return values: 0 - there were\n  // intersections or the line was empty; 1 - no intersections; 2 - there were\n  // intersections, and the first and last segments should be rejoined.\n  function clipAntimeridianLine(stream) {\n    var lambda0 = NaN,\n        phi0 = NaN,\n        sign0 = NaN,\n        clean; // no intersections\n\n    return {\n      lineStart: function() {\n        stream.lineStart();\n        clean = 1;\n      },\n      point: function(lambda1, phi1) {\n        var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n            delta = abs(lambda1 - lambda0);\n        if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n          stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n          stream.point(sign0, phi0);\n          stream.lineEnd();\n          stream.lineStart();\n          stream.point(sign1, phi0);\n          stream.point(lambda1, phi0);\n          clean = 0;\n        } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n          if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n          if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n          phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n          stream.point(sign0, phi0);\n          stream.lineEnd();\n          stream.lineStart();\n          stream.point(sign1, phi0);\n          clean = 0;\n        }\n        stream.point(lambda0 = lambda1, phi0 = phi1);\n        sign0 = sign1;\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n        lambda0 = phi0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean; // if intersections, rejoin first and last segments\n      }\n    };\n  }\n\n  function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n    var cosPhi0,\n        cosPhi1,\n        sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n    return abs(sinLambda0Lambda1) > epsilon$4\n        ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n            - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n            / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n        : (phi0 + phi1) / 2;\n  }\n\n  function clipAntimeridianInterpolate(from, to, direction, stream) {\n    var phi;\n    if (from == null) {\n      phi = direction * halfPi$3;\n      stream.point(-pi$4, phi);\n      stream.point(0, phi);\n      stream.point(pi$4, phi);\n      stream.point(pi$4, 0);\n      stream.point(pi$4, -phi);\n      stream.point(0, -phi);\n      stream.point(-pi$4, -phi);\n      stream.point(-pi$4, 0);\n      stream.point(-pi$4, phi);\n    } else if (abs(from[0] - to[0]) > epsilon$4) {\n      var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n      phi = direction * lambda / 2;\n      stream.point(-lambda, phi);\n      stream.point(0, phi);\n      stream.point(lambda, phi);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function clipCircle(radius, delta) {\n    var cr = cos$1(radius),\n        smallRadius = cr > 0,\n        notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\n    function interpolate(from, to, direction, stream) {\n      circleStream(stream, radius, delta, direction, from, to);\n    }\n\n    function visible(lambda, phi) {\n      return cos$1(lambda) * cos$1(phi) > cr;\n    }\n\n    // Takes a line and cuts into visible segments. Return values used for polygon\n    // clipping: 0 - there were intersections or the line was empty; 1 - no\n    // intersections 2 - there were intersections, and the first and last segments\n    // should be rejoined.\n    function clipLine(stream) {\n      var point0, // previous point\n          c0, // code for previous point\n          v0, // visibility of previous point\n          v00, // visibility of first point\n          clean; // no intersections\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(lambda, phi) {\n          var point1 = [lambda, phi],\n              point2,\n              v = visible(lambda, phi),\n              c = smallRadius\n                ? v ? 0 : code(lambda, phi)\n                : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n          if (!point0 && (v00 = v0 = v)) stream.lineStart();\n          // Handle degeneracies.\n          // TODO ignore if not clipping polygons.\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n              point1[0] += epsilon$4;\n              point1[1] += epsilon$4;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              // outside going in\n              stream.lineStart();\n              point2 = intersect(point1, point0);\n              stream.point(point2[0], point2[1]);\n            } else {\n              // inside going out\n              point2 = intersect(point0, point1);\n              stream.point(point2[0], point2[1]);\n              stream.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            // If the codes for two points are different, or are both zero,\n            // and there this segment intersects with the small circle.\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                stream.lineStart();\n                stream.point(t[0][0], t[0][1]);\n                stream.point(t[1][0], t[1][1]);\n                stream.lineEnd();\n              } else {\n                stream.point(t[1][0], t[1][1]);\n                stream.lineEnd();\n                stream.lineStart();\n                stream.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !pointEqual(point0, point1))) {\n            stream.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) stream.lineEnd();\n          point0 = null;\n        },\n        // Rejoin first and last segments if there were intersections and the first\n        // and last points were visible.\n        clean: function() {\n          return clean | ((v00 && v0) << 1);\n        }\n      };\n    }\n\n    // Intersects the great circle between a and b with the clip circle.\n    function intersect(a, b, two) {\n      var pa = cartesian(a),\n          pb = cartesian(b);\n\n      // We have two planes, n1.p = d1 and n2.p = d2.\n      // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n      var n1 = [1, 0, 0], // normal\n          n2 = cartesianCross(pa, pb),\n          n2n2 = cartesianDot(n2, n2),\n          n1n2 = n2[0], // cartesianDot(n1, n2),\n          determinant = n2n2 - n1n2 * n1n2;\n\n      // Two polar points.\n      if (!determinant) return !two && a;\n\n      var c1 =  cr * n2n2 / determinant,\n          c2 = -cr * n1n2 / determinant,\n          n1xn2 = cartesianCross(n1, n2),\n          A = cartesianScale(n1, c1),\n          B = cartesianScale(n2, c2);\n      cartesianAddInPlace(A, B);\n\n      // Solve |p(t)|^2 = 1.\n      var u = n1xn2,\n          w = cartesianDot(A, u),\n          uu = cartesianDot(u, u),\n          t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n      if (t2 < 0) return;\n\n      var t = sqrt$1(t2),\n          q = cartesianScale(u, (-w - t) / uu);\n      cartesianAddInPlace(q, A);\n      q = spherical(q);\n\n      if (!two) return q;\n\n      // Two intersection points.\n      var lambda0 = a[0],\n          lambda1 = b[0],\n          phi0 = a[1],\n          phi1 = b[1],\n          z;\n\n      if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n      var delta = lambda1 - lambda0,\n          polar = abs(delta - pi$4) < epsilon$4,\n          meridian = polar || delta < epsilon$4;\n\n      if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n      // Check that the first point is between a and b.\n      if (meridian\n          ? polar\n            ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n            : phi0 <= q[1] && q[1] <= phi1\n          : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n        var q1 = cartesianScale(u, (-w + t) / uu);\n        cartesianAddInPlace(q1, A);\n        return [q, spherical(q1)];\n      }\n    }\n\n    // Generates a 4-bit vector representing the location of a point relative to\n    // the small circle's bounding box.\n    function code(lambda, phi) {\n      var r = smallRadius ? radius : pi$4 - radius,\n          code = 0;\n      if (lambda < -r) code |= 1; // left\n      else if (lambda > r) code |= 2; // right\n      if (phi < -r) code |= 4; // below\n      else if (phi > r) code |= 8; // above\n      return code;\n    }\n\n    return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n  }\n\n  function transform$1(prototype) {\n    return {\n      stream: transform$2(prototype)\n    };\n  }\n\n  function transform$2(prototype) {\n    function T() {}\n    var p = T.prototype = Object.create(Transform$1.prototype);\n    for (var k in prototype) p[k] = prototype[k];\n    return function(stream) {\n      var t = new T;\n      t.stream = stream;\n      return t;\n    };\n  }\n\n  function Transform$1() {}\n\n  Transform$1.prototype = {\n    point: function(x, y) { this.stream.point(x, y); },\n    sphere: function() { this.stream.sphere(); },\n    lineStart: function() { this.stream.lineStart(); },\n    lineEnd: function() { this.stream.lineEnd(); },\n    polygonStart: function() { this.stream.polygonStart(); },\n    polygonEnd: function() { this.stream.polygonEnd(); }\n  };\n\n  var maxDepth = 16;\n  var cosMinDistance = cos$1(30 * radians);\n  // cos(minimum angular distance)\n\n  function resample(project, delta2) {\n    return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n  }\n\n  function resampleNone(project) {\n    return transform$2({\n      point: function(x, y) {\n        x = project(x, y);\n        this.stream.point(x[0], x[1]);\n      }\n    });\n  }\n\n  function resample$1(project, delta2) {\n\n    function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0,\n          dy = y1 - y0,\n          d2 = dx * dx + dy * dy;\n      if (d2 > 4 * delta2 && depth--) {\n        var a = a0 + a1,\n            b = b0 + b1,\n            c = c0 + c1,\n            m = sqrt$1(a * a + b * b + c * c),\n            phi2 = asin$1(c /= m),\n            lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n            p = project(lambda2, phi2),\n            x2 = p[0],\n            y2 = p[1],\n            dx2 = x2 - x0,\n            dy2 = y2 - y0,\n            dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > delta2 // perpendicular projected distance\n            || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n            || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n          resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    return function(stream) {\n      var lambda00, x00, y00, a00, b00, c00, // first point\n          lambda0, x0, y0, a0, b0, c0; // previous point\n\n      var resampleStream = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n        polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n      };\n\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n\n      function lineStart() {\n        x0 = NaN;\n        resampleStream.point = linePoint;\n        stream.lineStart();\n      }\n\n      function linePoint(lambda, phi) {\n        var c = cartesian([lambda, phi]), p = project(lambda, phi);\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n\n      function lineEnd() {\n        resampleStream.point = point;\n        stream.lineEnd();\n      }\n\n      function ringStart() {\n        lineStart();\n        resampleStream.point = ringPoint;\n        resampleStream.lineEnd = ringEnd;\n      }\n\n      function ringPoint(lambda, phi) {\n        linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resampleStream.point = linePoint;\n      }\n\n      function ringEnd() {\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n        resampleStream.lineEnd = lineEnd;\n        lineEnd();\n      }\n\n      return resampleStream;\n    };\n  }\n\n  var transformRadians = transform$2({\n    point: function(x, y) {\n      this.stream.point(x * radians, y * radians);\n    }\n  });\n\n  function projection(project) {\n    return projectionMutator(function() { return project; })();\n  }\n\n  function projectionMutator(projectAt) {\n    var project,\n        k = 150, // scale\n        x = 480, y = 250, // translate\n        dx, dy, lambda = 0, phi = 0, // center\n        deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n        theta = null, preclip = clipAntimeridian, // clip angle\n        x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n        delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n        cache,\n        cacheStream;\n\n    function projection(point) {\n      point = projectRotate(point[0] * radians, point[1] * radians);\n      return [point[0] * k + dx, dy - point[1] * k];\n    }\n\n    function invert(point) {\n      point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n      return point && [point[0] * degrees$1, point[1] * degrees$1];\n    }\n\n    function projectTransform(x, y) {\n      return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n    }\n\n    projection.stream = function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n    };\n\n    projection.clipAngle = function(_) {\n      return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n    };\n\n    projection.clipExtent = function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    };\n\n    projection.scale = function(_) {\n      return arguments.length ? (k = +_, recenter()) : k;\n    };\n\n    projection.translate = function(_) {\n      return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n    };\n\n    projection.center = function(_) {\n      return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n    };\n\n    projection.rotate = function(_) {\n      return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n    };\n\n    projection.precision = function(_) {\n      return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n    };\n\n    function recenter() {\n      projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n      var center = project(lambda, phi);\n      dx = x - center[0] * k;\n      dy = y + center[1] * k;\n      return reset();\n    }\n\n    function reset() {\n      cache = cacheStream = null;\n      return projection;\n    }\n\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return recenter();\n    };\n  }\n\n  function conicProjection(projectAt) {\n    var phi0 = 0,\n        phi1 = pi$4 / 3,\n        m = projectionMutator(projectAt),\n        p = m(phi0, phi1);\n\n    p.parallels = function(_) {\n      return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n    };\n\n    return p;\n  }\n\n  function conicEqualAreaRaw(y0, y1) {\n    var sy0 = sin$1(y0),\n        n = (sy0 + sin$1(y1)) / 2,\n        c = 1 + sy0 * (2 * n - sy0),\n        r0 = sqrt$1(c) / n;\n\n    function project(x, y) {\n      var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n      return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n    }\n\n    project.invert = function(x, y) {\n      var r0y = r0 - y;\n      return [atan2(x, r0y) / n, asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n    };\n\n    return project;\n  }\n\n  function conicEqualArea() {\n    return conicProjection(conicEqualAreaRaw)\n        .scale(155.424)\n        .center([0, 33.6442]);\n  }\n\n  function albers() {\n    return conicEqualArea()\n        .parallels([29.5, 45.5])\n        .scale(1070)\n        .translate([480, 250])\n        .rotate([96, 0])\n        .center([-0.6, 38.7]);\n  }\n\n  // The projections must have mutually exclusive clip regions on the sphere,\n  // as this will avoid emitting interleaving lines and polygons.\n  function multiplex(streams) {\n    var n = streams.length;\n    return {\n      point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n      sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n      lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n      lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n      polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n      polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n    };\n  }\n\n  // A composite projection for the United States, configured by default for\n  // 960×500. The projection also works quite well at 960×600 if you change the\n  // scale to 1285 and adjust the translate accordingly. The set of standard\n  // parallels for each region comes from USGS, which is published here:\n  // http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n  function albersUsa() {\n    var cache,\n        cacheStream,\n        lower48 = albers(), lower48Point,\n        alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n        hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n        point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      return point = null,\n          (lower48Point.point(x, y), point)\n          || (alaskaPoint.point(x, y), point)\n          || (hawaiiPoint.point(x, y), point);\n    }\n\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(),\n          t = lower48.translate(),\n          x = (coordinates[0] - t[0]) / k,\n          y = (coordinates[1] - t[1]) / k;\n      return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n          : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n          : lower48).invert(coordinates);\n    };\n\n    albersUsa.stream = function(stream) {\n      return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n    };\n\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n      return albersUsa;\n    };\n\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n\n      lower48Point = lower48\n          .translate(_)\n          .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n          .stream(pointStream);\n\n      alaskaPoint = alaska\n          .translate([x - 0.307 * k, y + 0.201 * k])\n          .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n          .stream(pointStream);\n\n      hawaiiPoint = hawaii\n          .translate([x - 0.205 * k, y + 0.212 * k])\n          .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n          .stream(pointStream);\n\n      return albersUsa;\n    };\n\n    return albersUsa.scale(1070);\n  }\n\n  function azimuthalRaw(scale) {\n    return function(x, y) {\n      var cx = cos$1(x),\n          cy = cos$1(y),\n          k = scale(cx * cy);\n      return [\n        k * cy * sin$1(x),\n        k * sin$1(y)\n      ];\n    }\n  }\n\n  function azimuthalInvert(angle) {\n    return function(x, y) {\n      var z = sqrt$1(x * x + y * y),\n          c = angle(z),\n          sc = sin$1(c),\n          cc = cos$1(c);\n      return [\n        atan2(x * sc, z * cc),\n        asin$1(z && y * sc / z)\n      ];\n    }\n  }\n\n  var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n    return sqrt$1(2 / (1 + cxcy));\n  });\n\n  azimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n    return 2 * asin$1(z / 2);\n  });\n\n  function azimuthalEqualArea() {\n    return projection(azimuthalEqualAreaRaw)\n        .scale(124.75)\n        .clipAngle(180 - 1e-3);\n  }\n\n  var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n    return (c = acos(c)) && c / sin$1(c);\n  });\n\n  azimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n    return z;\n  });\n\n  function azimuthalEquidistant() {\n    return projection(azimuthalEquidistantRaw)\n        .scale(79.4188)\n        .clipAngle(180 - 1e-3);\n  }\n\n  function mercatorRaw(lambda, phi) {\n    return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n  }\n\n  mercatorRaw.invert = function(x, y) {\n    return [x, 2 * atan(exp(y)) - halfPi$3];\n  };\n\n  function mercator() {\n    return mercatorProjection(mercatorRaw)\n        .scale(961 / tau$4);\n  }\n\n  function mercatorProjection(project) {\n    var m = projection(project),\n        scale = m.scale,\n        translate = m.translate,\n        clipExtent = m.clipExtent,\n        clipAuto;\n\n    m.scale = function(_) {\n      return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n    };\n\n    m.translate = function(_) {\n      return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n    };\n\n    m.clipExtent = function(_) {\n      if (!arguments.length) return clipAuto ? null : clipExtent();\n      if (clipAuto = _ == null) {\n        var k = pi$4 * scale(),\n            t = translate();\n        _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n      }\n      clipExtent(_);\n      return m;\n    };\n\n    return m.clipExtent(null);\n  }\n\n  function tany(y) {\n    return tan((halfPi$3 + y) / 2);\n  }\n\n  function conicConformalRaw(y0, y1) {\n    var cy0 = cos$1(y0),\n        n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n        f = cy0 * pow$1(tany(y0), n) / n;\n\n    if (!n) return mercatorRaw;\n\n    function project(x, y) {\n      if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n      else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n      var r = f / pow$1(tany(y), n);\n      return [r * sin$1(n * x), f - r * cos$1(n * x)];\n    }\n\n    project.invert = function(x, y) {\n      var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n      return [atan2(x, fy) / n, 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n    };\n\n    return project;\n  }\n\n  function conicConformal() {\n    return conicProjection(conicConformalRaw)\n        .scale(109.5)\n        .parallels([30, 30]);\n  }\n\n  function equirectangularRaw(lambda, phi) {\n    return [lambda, phi];\n  }\n\n  equirectangularRaw.invert = equirectangularRaw;\n\n  function equirectangular() {\n    return projection(equirectangularRaw)\n        .scale(152.63);\n  }\n\n  function conicEquidistantRaw(y0, y1) {\n    var cy0 = cos$1(y0),\n        n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n        g = cy0 / n + y0;\n\n    if (abs(n) < epsilon$4) return equirectangularRaw;\n\n    function project(x, y) {\n      var gy = g - y, nx = n * x;\n      return [gy * sin$1(nx), g - gy * cos$1(nx)];\n    }\n\n    project.invert = function(x, y) {\n      var gy = g - y;\n      return [atan2(x, gy) / n, g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n    };\n\n    return project;\n  }\n\n  function conicEquidistant() {\n    return conicProjection(conicEquidistantRaw)\n        .scale(131.154)\n        .center([0, 13.9389]);\n  }\n\n  function gnomonicRaw(x, y) {\n    var cy = cos$1(y), k = cos$1(x) * cy;\n    return [cy * sin$1(x) / k, sin$1(y) / k];\n  }\n\n  gnomonicRaw.invert = azimuthalInvert(atan);\n\n  function gnomonic() {\n    return projection(gnomonicRaw)\n        .scale(144.049)\n        .clipAngle(60);\n  }\n\n  function orthographicRaw(x, y) {\n    return [cos$1(y) * sin$1(x), sin$1(y)];\n  }\n\n  orthographicRaw.invert = azimuthalInvert(asin$1);\n\n  function orthographic() {\n    return projection(orthographicRaw)\n        .scale(249.5)\n        .clipAngle(90 + epsilon$4);\n  }\n\n  function stereographicRaw(x, y) {\n    var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n    return [cy * sin$1(x) / k, sin$1(y) / k];\n  }\n\n  stereographicRaw.invert = azimuthalInvert(function(z) {\n    return 2 + atan(z);\n  });\n\n  function stereographic() {\n    return projection(stereographicRaw)\n        .scale(250)\n        .clipAngle(142);\n  }\n\n  function transverseMercatorRaw(lambda, phi) {\n    return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n  }\n\n  transverseMercatorRaw.invert = function(x, y) {\n    return [-y, 2 * atan(exp(x)) - halfPi$3];\n  };\n\n  function transverseMercator() {\n    var m = mercatorProjection(transverseMercatorRaw),\n        center = m.center,\n        rotate = m.rotate;\n\n    m.center = function(_) {\n      return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n    };\n\n    m.rotate = function(_) {\n      return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n    };\n\n    return rotate([0, 0, 90])\n        .scale(159.155);\n  }\n\n  exports.version = version;\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = threshold;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n  exports.entries = entries;\n  exports.keys = keys;\n  exports.values = values;\n  exports.map = map$1;\n  exports.set = set;\n  exports.nest = nest;\n  exports.randomUniform = uniform;\n  exports.randomNormal = normal;\n  exports.randomLogNormal = logNormal;\n  exports.randomBates = bates;\n  exports.randomIrwinHall = irwinHall;\n  exports.randomExponential = exponential;\n  exports.easeLinear = linear;\n  exports.easeQuad = quadInOut;\n  exports.easeQuadIn = quadIn;\n  exports.easeQuadOut = quadOut;\n  exports.easeQuadInOut = quadInOut;\n  exports.easeCubic = easeCubicInOut;\n  exports.easeCubicIn = cubicIn;\n  exports.easeCubicOut = cubicOut;\n  exports.easeCubicInOut = easeCubicInOut;\n  exports.easePoly = polyInOut;\n  exports.easePolyIn = polyIn;\n  exports.easePolyOut = polyOut;\n  exports.easePolyInOut = polyInOut;\n  exports.easeSin = sinInOut;\n  exports.easeSinIn = sinIn;\n  exports.easeSinOut = sinOut;\n  exports.easeSinInOut = sinInOut;\n  exports.easeExp = expInOut;\n  exports.easeExpIn = expIn;\n  exports.easeExpOut = expOut;\n  exports.easeExpInOut = expInOut;\n  exports.easeCircle = circleInOut;\n  exports.easeCircleIn = circleIn;\n  exports.easeCircleOut = circleOut;\n  exports.easeCircleInOut = circleInOut;\n  exports.easeBounce = bounceOut;\n  exports.easeBounceIn = bounceIn;\n  exports.easeBounceOut = bounceOut;\n  exports.easeBounceInOut = bounceInOut;\n  exports.easeBack = backInOut;\n  exports.easeBackIn = backIn;\n  exports.easeBackOut = backOut;\n  exports.easeBackInOut = backInOut;\n  exports.easeElastic = elasticOut;\n  exports.easeElasticIn = elasticIn;\n  exports.easeElasticOut = elasticOut;\n  exports.easeElasticInOut = elasticInOut;\n  exports.polygonArea = area;\n  exports.polygonCentroid = centroid;\n  exports.polygonHull = hull;\n  exports.polygonContains = contains;\n  exports.polygonLength = length$1;\n  exports.path = path;\n  exports.quadtree = quadtree;\n  exports.queue = queue;\n  exports.arc = arc;\n  exports.area = area$1;\n  exports.line = line;\n  exports.pie = pie;\n  exports.radialArea = radialArea;\n  exports.radialLine = radialLine$1;\n  exports.symbol = symbol;\n  exports.symbols = symbols;\n  exports.symbolCircle = circle;\n  exports.symbolCross = cross$1;\n  exports.symbolDiamond = diamond;\n  exports.symbolSquare = square;\n  exports.symbolStar = star;\n  exports.symbolTriangle = triangle;\n  exports.symbolWye = wye;\n  exports.curveBasisClosed = basisClosed;\n  exports.curveBasisOpen = basisOpen;\n  exports.curveBasis = basis;\n  exports.curveBundle = bundle;\n  exports.curveCardinalClosed = cardinalClosed;\n  exports.curveCardinalOpen = cardinalOpen;\n  exports.curveCardinal = cardinal;\n  exports.curveCatmullRomClosed = catmullRomClosed;\n  exports.curveCatmullRomOpen = catmullRomOpen;\n  exports.curveCatmullRom = catmullRom;\n  exports.curveLinearClosed = linearClosed;\n  exports.curveLinear = curveLinear;\n  exports.curveMonotoneX = monotoneX;\n  exports.curveMonotoneY = monotoneY;\n  exports.curveNatural = natural;\n  exports.curveStep = step;\n  exports.curveStepAfter = stepAfter;\n  exports.curveStepBefore = stepBefore;\n  exports.stack = stack;\n  exports.stackOffsetExpand = expand;\n  exports.stackOffsetNone = none;\n  exports.stackOffsetSilhouette = silhouette;\n  exports.stackOffsetWiggle = wiggle;\n  exports.stackOrderAscending = ascending$1;\n  exports.stackOrderDescending = descending$2;\n  exports.stackOrderInsideOut = insideOut;\n  exports.stackOrderNone = none$1;\n  exports.stackOrderReverse = reverse;\n  exports.color = color;\n  exports.rgb = colorRgb;\n  exports.hsl = colorHsl;\n  exports.lab = lab;\n  exports.hcl = colorHcl;\n  exports.cubehelix = cubehelix;\n  exports.interpolate = interpolate;\n  exports.interpolateArray = array$1;\n  exports.interpolateDate = date;\n  exports.interpolateNumber = interpolateNumber;\n  exports.interpolateObject = object;\n  exports.interpolateRound = interpolateRound;\n  exports.interpolateString = interpolateString;\n  exports.interpolateTransformCss = interpolateTransform$1;\n  exports.interpolateTransformSvg = interpolateTransform$2;\n  exports.interpolateZoom = interpolateZoom;\n  exports.interpolateRgb = interpolateRgb;\n  exports.interpolateRgbBasis = rgbBasis;\n  exports.interpolateRgbBasisClosed = rgbBasisClosed;\n  exports.interpolateHsl = hsl$1;\n  exports.interpolateHslLong = hslLong;\n  exports.interpolateLab = lab$1;\n  exports.interpolateHcl = hcl$1;\n  exports.interpolateHclLong = hclLong;\n  exports.interpolateCubehelix = cubehelix$2;\n  exports.interpolateCubehelixLong = interpolateCubehelixLong;\n  exports.interpolateBasis = basis$2;\n  exports.interpolateBasisClosed = basisClosed$1;\n  exports.quantize = quantize;\n  exports.dispatch = dispatch;\n  exports.dsvFormat = dsv;\n  exports.csvParse = csvParse;\n  exports.csvParseRows = csvParseRows;\n  exports.csvFormat = csvFormat;\n  exports.csvFormatRows = csvFormatRows;\n  exports.tsvParse = tsvParse;\n  exports.tsvParseRows = tsvParseRows;\n  exports.tsvFormat = tsvFormat;\n  exports.tsvFormatRows = tsvFormatRows;\n  exports.request = request;\n  exports.html = html;\n  exports.json = json;\n  exports.text = text;\n  exports.xml = xml;\n  exports.csv = csv$1;\n  exports.tsv = tsv$1;\n  exports.now = now;\n  exports.timer = timer;\n  exports.timerFlush = timerFlush;\n  exports.timeout = timeout$1;\n  exports.interval = interval$1;\n  exports.timeInterval = newInterval;\n  exports.timeMillisecond = millisecond;\n  exports.timeMilliseconds = milliseconds;\n  exports.timeSecond = second;\n  exports.timeSeconds = seconds;\n  exports.timeMinute = minute;\n  exports.timeMinutes = minutes;\n  exports.timeHour = hour;\n  exports.timeHours = hours;\n  exports.timeDay = day;\n  exports.timeDays = days;\n  exports.timeWeek = timeWeek;\n  exports.timeWeeks = sundays;\n  exports.timeSunday = timeWeek;\n  exports.timeSundays = sundays;\n  exports.timeMonday = timeMonday;\n  exports.timeMondays = mondays;\n  exports.timeTuesday = tuesday;\n  exports.timeTuesdays = tuesdays;\n  exports.timeWednesday = wednesday;\n  exports.timeWednesdays = wednesdays;\n  exports.timeThursday = thursday;\n  exports.timeThursdays = thursdays;\n  exports.timeFriday = friday;\n  exports.timeFridays = fridays;\n  exports.timeSaturday = saturday;\n  exports.timeSaturdays = saturdays;\n  exports.timeMonth = month;\n  exports.timeMonths = months;\n  exports.timeYear = year;\n  exports.timeYears = years;\n  exports.utcMillisecond = millisecond;\n  exports.utcMilliseconds = milliseconds;\n  exports.utcSecond = second;\n  exports.utcSeconds = seconds;\n  exports.utcMinute = utcMinute;\n  exports.utcMinutes = utcMinutes;\n  exports.utcHour = utcHour;\n  exports.utcHours = utcHours;\n  exports.utcDay = utcDay;\n  exports.utcDays = utcDays;\n  exports.utcWeek = utcWeek;\n  exports.utcWeeks = utcSundays;\n  exports.utcSunday = utcWeek;\n  exports.utcSundays = utcSundays;\n  exports.utcMonday = utcMonday;\n  exports.utcMondays = utcMondays;\n  exports.utcTuesday = utcTuesday;\n  exports.utcTuesdays = utcTuesdays;\n  exports.utcWednesday = utcWednesday;\n  exports.utcWednesdays = utcWednesdays;\n  exports.utcThursday = utcThursday;\n  exports.utcThursdays = utcThursdays;\n  exports.utcFriday = utcFriday;\n  exports.utcFridays = utcFridays;\n  exports.utcSaturday = utcSaturday;\n  exports.utcSaturdays = utcSaturdays;\n  exports.utcMonth = utcMonth;\n  exports.utcMonths = utcMonths;\n  exports.utcYear = utcYear;\n  exports.utcYears = utcYears;\n  exports.formatLocale = formatLocale;\n  exports.formatDefaultLocale = defaultLocale;\n  exports.formatSpecifier = formatSpecifier;\n  exports.precisionFixed = precisionFixed;\n  exports.precisionPrefix = precisionPrefix;\n  exports.precisionRound = precisionRound;\n  exports.isoFormat = formatIso;\n  exports.isoParse = parseIso;\n  exports.timeFormatLocale = formatLocale$1;\n  exports.timeFormatDefaultLocale = defaultLocale$1;\n  exports.scaleBand = band;\n  exports.scalePoint = point$4;\n  exports.scaleIdentity = identity$4;\n  exports.scaleLinear = linear$2;\n  exports.scaleLog = log;\n  exports.scaleOrdinal = ordinal;\n  exports.scaleImplicit = implicit;\n  exports.scalePow = pow;\n  exports.scaleSqrt = sqrt;\n  exports.scaleQuantile = quantile;\n  exports.scaleQuantize = quantize$1;\n  exports.scaleThreshold = threshold$1;\n  exports.scaleTime = time;\n  exports.scaleUtc = utcTime;\n  exports.schemeCategory10 = category10;\n  exports.schemeCategory20b = category20b;\n  exports.schemeCategory20c = category20c;\n  exports.schemeCategory20 = category20;\n  exports.scaleSequential = sequential;\n  exports.interpolateCubehelixDefault = cubehelix$3;\n  exports.interpolateRainbow = rainbow$1;\n  exports.interpolateWarm = warm;\n  exports.interpolateCool = cool;\n  exports.interpolateViridis = viridis;\n  exports.interpolateMagma = magma;\n  exports.interpolateInferno = inferno;\n  exports.interpolatePlasma = plasma;\n  exports.creator = creator;\n  exports.customEvent = customEvent;\n  exports.local = local;\n  exports.matcher = matcher$1;\n  exports.mouse = mouse;\n  exports.namespace = namespace;\n  exports.namespaces = namespaces;\n  exports.select = select;\n  exports.selectAll = selectAll;\n  exports.selection = selection;\n  exports.selector = selector;\n  exports.selectorAll = selectorAll;\n  exports.touch = touch;\n  exports.touches = touches;\n  exports.window = window;\n  exports.active = active;\n  exports.interrupt = interrupt;\n  exports.transition = transition;\n  exports.axisTop = axisTop;\n  exports.axisRight = axisRight;\n  exports.axisBottom = axisBottom;\n  exports.axisLeft = axisLeft;\n  exports.cluster = cluster;\n  exports.hierarchy = hierarchy;\n  exports.pack = index;\n  exports.packSiblings = siblings;\n  exports.packEnclose = enclose;\n  exports.partition = partition;\n  exports.stratify = stratify;\n  exports.tree = tree;\n  exports.treemap = index$1;\n  exports.treemapBinary = binary;\n  exports.treemapDice = treemapDice;\n  exports.treemapSlice = treemapSlice;\n  exports.treemapSliceDice = sliceDice;\n  exports.treemapSquarify = squarify;\n  exports.treemapResquarify = resquarify;\n  exports.forceCenter = center$1;\n  exports.forceCollide = collide;\n  exports.forceLink = link;\n  exports.forceManyBody = manyBody;\n  exports.forceSimulation = simulation;\n  exports.forceX = x$3;\n  exports.forceY = y$3;\n  exports.drag = drag;\n  exports.dragDisable = dragDisable;\n  exports.dragEnable = dragEnable;\n  exports.voronoi = voronoi;\n  exports.zoom = zoom;\n  exports.zoomIdentity = identity$6;\n  exports.zoomTransform = transform;\n  exports.brush = brush;\n  exports.brushX = brushX;\n  exports.brushY = brushY;\n  exports.brushSelection = brushSelection;\n  exports.chord = chord;\n  exports.ribbon = ribbon;\n  exports.geoAlbers = albers;\n  exports.geoAlbersUsa = albersUsa;\n  exports.geoArea = area$2;\n  exports.geoAzimuthalEqualArea = azimuthalEqualArea;\n  exports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n  exports.geoAzimuthalEquidistant = azimuthalEquidistant;\n  exports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n  exports.geoBounds = bounds;\n  exports.geoCentroid = centroid$1;\n  exports.geoCircle = circle$1;\n  exports.geoClipExtent = extent$1;\n  exports.geoConicConformal = conicConformal;\n  exports.geoConicConformalRaw = conicConformalRaw;\n  exports.geoConicEqualArea = conicEqualArea;\n  exports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n  exports.geoConicEquidistant = conicEquidistant;\n  exports.geoConicEquidistantRaw = conicEquidistantRaw;\n  exports.geoDistance = distance;\n  exports.geoEquirectangular = equirectangular;\n  exports.geoEquirectangularRaw = equirectangularRaw;\n  exports.geoGnomonic = gnomonic;\n  exports.geoGnomonicRaw = gnomonicRaw;\n  exports.geoGraticule = graticule;\n  exports.geoInterpolate = interpolate$2;\n  exports.geoLength = length$2;\n  exports.geoMercator = mercator;\n  exports.geoMercatorRaw = mercatorRaw;\n  exports.geoOrthographic = orthographic;\n  exports.geoOrthographicRaw = orthographicRaw;\n  exports.geoPath = index$3;\n  exports.geoProjection = projection;\n  exports.geoProjectionMutator = projectionMutator;\n  exports.geoRotation = rotation;\n  exports.geoStereographic = stereographic;\n  exports.geoStereographicRaw = stereographicRaw;\n  exports.geoStream = stream;\n  exports.geoTransform = transform$1;\n  exports.geoTransverseMercator = transverseMercator;\n  exports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/d3/build/d3.js\n ** module id = 2\n ** module chunks = 0\n **/","/**\n * Simple Assertion function\n * @param  {anything} test    Anything that will evaluate to true of false.\n * @param  {string} message The error message to send if `test` is false\n */\nfunction kotoAssert(test, message) {\n  if (test) {\n    return;\n  }\n  throw new Error(`[koto] ${message}`);\n}\n\nexport default kotoAssert;\n\n\n\n/** WEBPACK FOOTER **\n ** ./assert.js\n **/","import kotoAssert from './assert.js';\nimport * as d3 from 'd3';\n\n/**\n * Create a layer using the provided `base` selection.\n *\n * @class\n *\n * @param {d3.selection} base The containing DOM node for the layer.\n * @param {Object} options Overrides for databind, insert and event methods.\n * @param {Function} options.databind databind override\n * @param {Function} options.insert insert override\n * @param {Function} [options.events] life-cycle event handler overrides.\n *                                  Possible values are [enter, update, merge, exit]\n *                                  with or without the 'transition postfix'.\n */\nclass Layer {\n  constructor(base, options) {\n    this._base = base;\n    this._handlers = {};\n    this._lifecycleRe = /^(enter|update|merge|exit)(:transition)?$/;\n\n    if (options) {\n      // Set layer methods (required)\n      this.dataBind = options.dataBind;\n      this.insert = options.insert;\n\n      // Bind events (optional)\n      if ('events' in options) {\n        for (var eventName in options.events) {\n          this.on(eventName, options.events[eventName]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Invoked by {@link Layer#draw} to join data with this layer's DOM nodes. This\n   * implementation is \"virtual\"--it *must* be overridden by Layer instances.\n   *\n   * @param {Array} data Value passed to {@link Layer#draw}\n   * @param {Object} [context] the instance of this layers\n   */\n  dataBind() {\n    kotoAssert(false, 'Layers must specify a dataBind method.');\n  }\n\n  /**\n   * Invoked by {@link Layer#draw} in order to insert new DOM nodes into this\n   * layer's `base`. This implementation is \"virtual\"--it *must* be overridden by\n   * Layer instances.\n   */\n  insert() {\n    kotoAssert(false, 'Layers must specify an `insert` method.');\n  }\n\n  /**\n   * Subscribe a handler to a lifecycle event. These events (and only these\n   * events) are triggered when {@link Layer#draw} is invoked--see that method\n   * for more details on lifecycle events.\n   *\n   * @param {String} eventName Identifier for the lifecycle event for which to\n   *        subscribe.\n   * @param {Function} handler Callback function\n   *\n   * @returns {Chart} Reference to the layer instance (for chaining).\n   */\n  on(eventName, handler, options) {\n    options = options || {};\n\n    kotoAssert(this._lifecycleRe.test(eventName),\n      `Unrecognized lifecycle event name specified to 'Layer#on': '${eventName}'.`);\n\n    if (!(eventName in this._handlers)) {\n      this._handlers[eventName] = [];\n    }\n    this._handlers[eventName].push({\n      callback: handler,\n      chart: options.chart || null\n    });\n\n    return this;\n  }\n\n  /**\n   * Unsubscribe the specified handler from the specified event. If no handler is\n   * supplied, remove *all* handlers from the event.\n   *\n   * @param {String} eventName Identifier for event from which to remove\n   *        unsubscribe\n   * @param {Function} handler Callback to remove from the specified event\n   *\n   * @returns {Chart} Reference to the layer instance (for chaining).\n   */\n  off(eventName, handler) {\n    var handlers = this._handlers[eventName];\n    var idx;\n\n    kotoAssert(this._lifecycleRe.test(eventName),\n      `Unrecognized lifecycle event name specified to 'Layer#on': '${eventName}'.`);\n\n    if (!handlers) {\n      return this;\n    }\n\n    if (arguments.length === 1) {\n      handlers.length = 0;\n      return this;\n    }\n\n    for (idx = handlers.length - 1; idx > -1; --idx) {\n      if (handlers[idx].callback === handler) {\n        handlers.splice(idx, 1);\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Render the layer according to the input data. Bind the data to the layer\n   * (according to {@link Layer#dataBind}, insert new elements (according to\n   * {@link Layer#insert}, make lifecycle selections, and invoke all relevant\n   * handlers (as attached via {@link Layer#on}) with the lifecycle selections.\n   *\n   * - update\n   * - update:transition\n   * - enter\n   * - enter:transition\n   * - exit\n   * - exit:transition\n   *\n   * @param {Array} data Data to drive the rendering.\n   */\n  draw(data) {\n    var bound,\n      entering,\n      events,\n      selection,\n      method,\n      handlers,\n      eventName,\n      idx,\n      len,\n      tidx,\n      tlen,\n      promises = [];\n\n    function endall(transition, callback) {\n      var n = 0;\n      if (transition.size() === 0) {\n        callback();\n      } else {\n        transition\n          .each(function() {\n            ++n;\n          })\n          .each('interrupt.promise', function () {\n            callback.apply(this, arguments);\n          })\n          .each('end.promise', function () {\n            if (!--n) {\n              callback.apply(this, arguments);\n            }\n          });\n      }\n    }\n\n    function promiseCallback (resolve) {\n      selection.call(endall, function() {\n        resolve(true);\n      });\n    }\n\n    bound = this.dataBind.call(this._base, data, this);\n\n    kotoAssert(bound instanceof d3.selection,\n      'Invalid selection defined by `Layer#dataBind` method.');\n    kotoAssert(bound.enter, 'Layer selection not properly bound.');\n\n    entering = bound.enter();\n    entering._chart = this._base._chart;\n\n    events = [\n      {\n        name: 'update',\n        selection: bound\n      },\n      {\n        name: 'enter',\n        selection: entering,\n        method: this.insert\n      },\n      {\n        name: 'merge',\n        // Although the `merge` lifecycle event shares its selection object\n        // with the `update` lifecycle event, the object's contents will be\n        // modified when koto invokes the user-supplied `insert` method\n        // when triggering the `enter` event.\n        selection: bound\n      },\n      {\n        name: 'exit',\n        // Although the `exit` lifecycle event shares its selection object\n        // with the `update` and `merge` lifecycle events, the object's\n        // contents will be modified when koto invokes\n        // `d3.selection.exit`.\n        selection: bound,\n        method: bound.exit\n      }\n    ];\n\n    for (var i = 0, l = events.length; i < l; ++i) {\n      eventName = events[i].name;\n      selection = events[i].selection;\n      method = events[i].method;\n\n      // Some lifecycle selections modify shared state, so they must be\n      // deferred until just prior to handler invocation.\n      if (typeof method === 'function') {\n        selection = method.call(selection, selection);\n      }\n\n      if (selection.empty()) {\n        continue;\n      }\n\n      kotoAssert(selection && selection instanceof d3.selection,\n        `Invalid selection defined for ${eventName} lifecycle event.`);\n\n      handlers = this._handlers[eventName];\n\n      if (handlers) {\n        for (idx = 0, len = handlers.length; idx < len; ++idx) {\n          // Attach a reference to the parent chart so the selection's\n          // `chart` method will function correctly.\n          selection._chart = handlers[idx].chart || this._base._chart;\n          // selection.call(handlers[idx].callback);\n          handlers[idx].callback.call(selection, selection);\n        }\n      }\n\n      handlers = this._handlers[eventName + ':transition'];\n\n      if (handlers && handlers.length) {\n        selection = selection.transition();\n        for (tlen = handlers.length, tidx = 0; tidx < tlen; ++tidx) {\n          selection._chart = handlers[tidx].chart || this._base._chart;\n          // selection.call(handlers[tidx].callback);\n          handlers[tidx].callback.call(selection, selection);\n          promises.push(new Promise(promiseCallback));\n        }\n      }\n      this.promise = Promise.all(promises);\n    }\n  }\n}\n\nexport default Layer;\n\n\n\n/** WEBPACK FOOTER **\n ** ./layer.js\n **/"],"sourceRoot":""}